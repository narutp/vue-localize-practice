{"version":3,"sources":["webpack:///app.b741a65f1be55add999a.js","webpack:///webpack/bootstrap bda24f1121a39a3764d4","webpack:///./src/main.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./src/vuex/store.js","webpack:///./src/components/common/LanguageSelector.vue","webpack:///./~/vue-localize/dist/vue-localize.js","webpack:///./src/config/routes.js","webpack:///./src/config/vue-localize-conf.js","webpack:///./src/config/vue-localize-translations.js","webpack:///./src/vuex/getters.js","webpack:///./src/vuex/modules/root-app.js","webpack:///./src/vuex/mutation-types.js","webpack:///App.vue","webpack:///Header.vue","webpack:///Layout.vue","webpack:///LanguageSelector.vue","webpack:///Header.vue?f974","webpack:///Layout.vue?4cc9","webpack:///Features.vue","webpack:///Index.vue","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/define-property.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.js","webpack:///./~/lodash/lodash.js","webpack:///./src/components/admin/layout/Aside.vue?1344","webpack:///./src/components/admin/layout/Header.vue?6702","webpack:///./src/components/admin/layout/Layout.vue?0148","webpack:///./src/components/admin/pages/Home.vue?e994","webpack:///./src/components/admin/pages/Settings.vue?625b","webpack:///./src/components/common/LanguageSelector.vue?ac83","webpack:///./src/components/public/layout/Footer.vue?8a64","webpack:///./src/components/public/layout/Header.vue?59d6","webpack:///./src/components/public/layout/Layout.vue?fd9f","webpack:///./src/components/public/pages/Error404.vue?8291","webpack:///./src/components/public/pages/Features.vue?472f","webpack:///./src/components/public/pages/Index.vue?d843","webpack:///./src/components/App.vue","webpack:///./src/components/admin/layout/Aside.vue","webpack:///./src/components/admin/layout/Header.vue","webpack:///./src/components/admin/layout/Layout.vue","webpack:///./src/components/admin/pages/Home.vue","webpack:///./src/components/admin/pages/Settings.vue","webpack:///./src/components/public/layout/Footer.vue","webpack:///./src/components/public/layout/Header.vue","webpack:///./src/components/public/layout/Layout.vue","webpack:///./src/components/public/pages/Error404.vue","webpack:///./src/components/public/pages/Features.vue","webpack:///./src/components/public/pages/Index.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vuex/dist/vuex.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","router","undefined","_vue","_vue2","_vueRouter","_vueRouter2","_routes","_routes2","_vueLocalizeConf","_vueLocalizeConf2","_store","_store2","_vueLocalize","_vueLocalize2","_App","_App2","config","debug","use","linkActiveClass","history","saveScrollPosition","root","store","routes","beforeEach","transition","to","titleKey","dispatch","next","defaultLanguageRoute","redirect","*","defaultLanguage","/","start","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","ret","Array","extend","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","setClass","cls","isIE9","namespaceURI","className","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","Dep","uid$1","subs","Observer","isArray","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","doNotObserve","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","getPropDefaultValue","assertProp","type","Boolean","Function","required","raw","expectedType","valid","String","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","pushWatcher","user","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","stringToObject","split","callActivateHooks","called","total","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","matched","parseModifiers","modifierRE","transitionRE","bindRE","onRE","dirAttrRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","$value","contains$1","$key","orderBy","sortKey","reverse","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","paramAttributes","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","_vuex","_vuex2","_rootApp","_rootApp2","Store","rootApp","vueLocalizeVuexStoreModule","__vue_script__","__vue_template__","r","o","u","localStorage","setItem","R","getItem","S","state","currentLanguage","h","x","initial","originalName","localized","subRoutes","v","N","T","vueLocalizeId","F","languages","enabled","lang","d","resaveOnLocalizedRoutes","A","defaultContextName","translations","supressWarnings","fallbackOnNoTranslation","fallbackLanguage","y","z","$","L","O","U","I","M","vuex","getters","E","G","$vueLocalizeInit","$localizeRoute","$localizeRoutePath","$isJustLanguageSwitching","$localizeConf","V","translate","P","updateContent","vars","mutations","function","object","Symbol","pop","B","C","W","Z","getPrototypeOf","byteLength","propertyIsEnumerable","webpackPolyfill","deprecate","paths","clear","Uint8Array","copy","valueOf","buffer","byteOffset","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","getOwnPropertySymbols","input","__data__","string","array","Buffer","_Layout","_Layout2","_Home","_Home2","_Settings","_Settings2","_Layout3","_Layout4","_Index","_Index2","_Features","_Features2","_Error","_Error2","/features","/error404","/admin","/home","/settings","_vueLocalizeTranslations","_vueLocalizeTranslations2","en","ru","de","projectName","defaultTitle","eng","rus","public","header","nav","home","features","admin","unauth","title","jdesc","sources","about","err404","settings","helloText","helloText2","helloText3","helloText4","variablesInjectionTest","intro","arl","arlActivate","dlr","lroute","lrp","cReusing","uiTrans","reactTrans","transFilter","transFilter2","transCall","transCall2","transDir","transDir2","transExact","transExactF","transExactC","transExactD","varInject","varInjectF","varInjectC","varInjectD","transTitle","fallbackLang","locStor","globMix","transStruct","ph1","ph2","ph3","ph4","ph5","ph6","ph7","ph8","ph9","ph10","ph11","ph12","ph13","ph14","ph15","ph16","ph17","ph18","ph19","ph20","ph21","ph22","ph23","ph24","ph25","ph26","ph27","ph28","ph29","ph30","ph31","ph32","ph33","ph34","ph35","ph36","ph37","ph38","ph39","ph40","ph41","ph42","ph43","ph44","ph45","ph46","ph47","ph48","ph49","currentTitle","_defineProperty2","_defineProperty3","_mutationTypes","SET_TITLE","_getters","$route","_LanguageSelector","_LanguageSelector2","mobileMenuCollapsed","LanguageSelector","_Header","_Header2","_Aside","_Aside2","CompHeader","CompAside","_lodash","opened","changeLanguage","oldRouteName","routeName","$router","go","$store","_Footer","_Footer2","PublicHeader","PublicFooter","localizeRouteExample","localizeRouteExampleExactLang","filterExample","directCallExample","directCallExample2","directiveExample","injectViaFilter","injectViaDirectCall","injectViaDirective","exaxtExampleFilter","exaxtExampleCall","exaxtExampleDirective","titleEx1","titleEx2","titleEx3","titleEx4","injectVars","%foo%","%bar%","%v-link%","%translate%","%tCall%","%v-localize%","%link-about%","%link-features%","%rlRu%","%locTrue%","%true%","%false%","%rn-features%","%rp-features%","%rr%","%en-features%","%ru-features%","%lRoute%","%lRoutePath%","%component%","%dataObj%","%dataHook%","%isJustLangSw%","%transtion%","%resaveOnLocalizedRoutesCode%","%currentLanguage%","%thisCurrentLanguage%","%defaultLanguageRouteFalse%","isEn","isRu","route","_defineProperty","it","desc","setDesc","$Object","getProto","isEnum","getDesc","setDescs","getKeys","getNames","getSymbols","each","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","pair","addSetEntry","thisArg","arrayAggregator","iteratee","accumulator","arrayConcat","other","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","arrayReduce","initAccum","arrayReduceRight","arraySome","baseExtremum","baseFind","collection","eachFunc","retKey","baseFindIndex","fromRight","fromIndex","indexOfNaN","baseIndexOfWith","baseReduce","baseSortBy","comparer","baseSum","baseTimes","baseToPairs","baseUnary","baseValues","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","countHolders","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isHostObject","isIndex","reIsUint","MAX_SAFE_INTEGER","iteratorToArray","mapToArray","replaceHolders","PLACEHOLDER","setToArray","stringSize","reHasComplexSymbol","reComplexSymbol","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","hashDelete","hashHas","hashGet","nativeCreate","HASH_UNDEFINED","hashSet","MapCache","mapClear","Map","mapDelete","isKeyable","assocDelete","mapGet","assocGet","mapHas","assocHas","mapSet","assocSet","SetCache","cacheHas","cachePush","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","eq","assignInDefaults","objValue","srcValue","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAt","isNil","baseCastArrayLikeObject","isArrayLikeObject","baseCastFunction","identity","baseCastPath","stringToPath","baseClamp","lower","baseClone","isDeep","isFull","customizer","stack","initCloneArray","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","baseForOwn","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","TypeError","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","nativeKeys","baseKeysIn","baseMap","isArrayLike","getMatchData","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","toPlainObject","baseOrderBy","getIteratee","basePick","basePickBy","baseProperty","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseSortedUniqBy","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","baseXor","baseZipObject","assignFunc","valsLength","cloneArrayBuffer","arrayBuffer","cloneMap","cloneRegExp","regexp","reFlags","cloneSet","cloneSymbol","symbolValueOf","cloneTypedArray","typedArray","composeArgs","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","copyObjectWith","createAggregator","initializer","createAssigner","assigner","rest","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBaseWrapper","wrapper","Ctor","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","trailing","createCompounder","callback","words","deburr","thisBinding","createCurryWrapper","arity","getPlaceholder","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createOver","arrayFunc","createPadding","chars","strLength","padLength","repeat","createPartialWrapper","createRange","wrapFunc","isCurry","newArgPos","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","setData","createRound","precision","createWrapper","baseSetData","isPartial","isUnordered","arrValue","othValue","compared","arrayBufferTag","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","mapTag","setTag","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","toPairs","isStrictComparable","getNative","isNative","objectToString","transforms","hasPath","hasFunc","isLength","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","INFINITY","flattenDepth","fromPairs","pairs","separator","nativeJoin","lastIndexOf","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperFlatMap","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","find","findLast","baseEachRight","flatMap","forEachRight","reduceRight","reject","sample","sampleSize","rand","shuffle","curry","curryRight","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","remaining","stamp","maxDelayed","debounced","leading","maxWait","leadingCall","flip","memoize","resolver","memoized","negate","once","otherArgs","spread","throttle","unary","castArray","cloneWith","cloneDeep","cloneDeepWith","gt","gte","isArrayBuffer","getLength","isBoolean","isDate","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNumber","reIsNative","funcToString","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","isSymbol","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","lt","lte","iteratorSymbol","MAX_INTEGER","remainder","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NAN","toSafeInteger","symbolToString","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","toPairsIn","transform","unset","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","upperFirst","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","startsWith","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","methodNames","noConflict","oldDash","nthArg","propertyOf","times","toPath","uniqueId","idCounter","augend","addend","max","maxBy","mean","sum","min","minBy","subtract","minuend","subtrahend","sumBy","defaults","pick","contextProps","Error","moduleExports","Reflect","enumerate","ceil","Set","WeakMap","metaMap","nonEnumShadows","mapCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ctorString","HOT_SPAN","HOT_COUNT","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bindKey","overArgs","funcsLength","partialRight","rearg","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","round","extendWith","eachRight","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsQuoteRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","&","<",">","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","freeWindow","thisGlobal","Target","matcher","delegate","Matcher","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","substr","eachRoute","baseRoute","binding","addRouteCallback","StaticSegment","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","part","decodeURIComponent","msg","exports$1","resolvePath","base","relative","isPromise","then","getRouteConfig","resolveAsyncComponent","resolve","mapParams","genQuery","canReuse","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","all","isPlainOjbect","applyOverride","_Vue$util","_parent","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","__v_link_active","onRouteUpdate","activeEl","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","pathname","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","queryStringRE","isAbsolute","href","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","returned","oCreate","RouteRecognizer","rootState","allSegments","as","handlersFor","hasRoute","output","generateQueryString","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","hashRE","HTML5History","onChange","rootRE","baseEl","_this","url","replaceState","pos","pageXOffset","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reuseQueue","runQueue","_onTransitionValidated","_view","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","ok","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","afterEach","App","_appContainer","_appConstructor","_location","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","currentParams","targetParams","encodeURI","externalVue","mergeObjects","existing","deepClone","getWatcher","getDep","override","vuexInit","defineVuexGetter","_key","makeBoundAction","_getterCacheId","_vm","computedGetter","_len","_key2","_Vue","createLogger","protoProps","staticProps","toConsumableArray","arr2","devtoolMiddleware","onInit","targetState","_dispatching","onMutation","mutation","_ref$state","_ref$mutations","_ref$modules","_ref$middlewares","middlewares","_ref$strict","strict","_rootMutations","_mutations","_modules","_setupModuleState","_setupModuleMutations","_setupMiddlewares","_setupMutationCheck","_len2","payload","prevSnapshot","_prevSnapshot","snapshot","clonedPayload","_needSnapshots","_middlewares","_ref2","updatedModules","allMutations","_len3","_key3","_this4","_this5","initialSnapshot"],"mappings":"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B4zUSC,sBmB1zUT,iEnB4zUSC,SmB3zUT,gDnB4zUSC,SmB3zUT,gDnB4zUSC,SmB3zUT,oDnB4zUSC,SmB1zUT,qDnB4zUOC,YACEC,QmB3zUT,MnB4zUSC,QmB1zUT,MnB4zUSC,WmB3zUT,sBnB4zUSC,cmB3zUT,yBnB4zUSC,UmB3zUT,4BnB4zUSC,emB3zUT,0BnB4zUSC,emB3zUT,GnB4zUSC,kBmB3zUT,GnB4zUSC,SmB3zUT,mBnB4zUSC,YmB3zUT,+BnB4zUSC,SmB3zUT,oBnB4zUSC,UmB3zUT,qBnB4zUSC,gBmB3zUT,wBnB4zUSC,gBmB3zUT,yBnB4zUSC,OmB3zUT,iBnB4zUSC,gBmB3zUT,2BnB4zUSC,gBmB3zUT,2BnB4zUSC,WmB3zUT,gCnB4zUSC,emB3zUT,oDnB4zUSC,cmB3zUT,0BnB4zUSC,YmB3zUT,qBnB4zUSC,amB3zUT,sBnB4zUSC,iBmB3zUT,oDnB4zUSC,cmB3zUT,0BnB4zUSC,gCmB3zUT,uCnB4zUSC,oBmB3zUT,+BnB4zUSC,wBmB3zUT,oCnB4zUSC,8BmBxzUT,8CnB6zUGvzB,UACEwzB,KAAM,WACJ,MmB3zUP,OnB2zUcv6C,KAAK4lC,iBAEd4U,KAAM,WACJ,MmB1zUP,OnB0zUcx6C,KAAK4lC,oBAOb,SAASluC,EAAQD,GAEtB,YAEAY,QAAOC,eAAeb,EAAS,cAC7Bc,OAAO,IAETd,cACEgjD,OACEnxC,KAAM,SAAcpP,GACd8F,KAAKkoC,yBAAyBhuC,GAChCyxB,QAAQC,IoBjkVjB,sBpBmkVWD,QAAQC,IoB9jVnB,iCpBikVO1xB,EoB9jVPI,WpBqkVM,SAAS5C,EAAQD,EAASH,GqB7lVhCI,EAAAD,SAAkBW,UAAAd,EAAA,IAAAa,YAAA,IrBmmVZ,SAAST,EAAQD,EAASH,GsBnmVhC,YAQA,SAAAW,GAAAC,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCE,UAAAF,GAN7ET,EAAAU,YAAA,CAEA,IAAAuiD,GAAApjD,EAAA,IAEAw+C,EAAA79C,EAAAyiD,EAIAjjD,cAAA,SAAAS,EAAA6C,EAAAxC,GAYA,MAXAwC,KAAA7C,IACA,EAAA49C,cAAA59C,EA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C,OACA44C,EAAAgmB,WACAhmB,EAAA4sB,aACA5sB,EAAAvd,cACAud,EAAAopB,QACAppB,EAAAijB,SACAjjB,EAAAqB,SACArB,EAAA0e,aACA1e,EAAA2e,iBACA3e,EAAAye,aACAze,EAAA4R,UACA5R,EAAA0jB,YACA1jB,EAAAmE,MACAnE,EAAA4jB,UACA5jB,EAAA+jB,gBACA/jB,EAAAic,SACAjc,EAAAkc,QACAlc,EAAAkZ,aACAlZ,EAAA2hB,WACA3hB,EAAAmc,YACAnc,EAAAmZ,iBACAnZ,EAAA4hB,eACA5hB,EAAA1lC,SACA0lC,EAAAviC,WACAuiC,EAAAsc,gBACAtc,EAAA6hB,SACA7hB,EAAA8hB,cACA9hB,EAAA+hB,UACA/hB,EAAAgiB,eACAhiB,EAAA3+C,OACA2+C,EAAA4e,MACA5e,EAAA6e,OACA7e,EAAAxrC,OACAwrC,EAAAsL,SACAtL,EAAApgD,QACAogD,EAAAmF,YACAnF,EAAAqH,YACArH,EAAAhhD,WACAghD,EAAAkjB,WACAljB,EAAAysB,UACAzsB,EAAAgI,eACAhI,EAAA71C,WACA61C,EAAA8e,iBACA9e,EAAAoL,eACApL,EAAAiF,qBACAjF,EAAAgf,aACAhf,EAAAkG,YACAlG,EAAAif,UACAjf,EAAAkf,aACAlf,EAAAmf,WACAnf,EAAAof,WACApf,EAAAqf,eACArf,EAAAsf,WACAtf,EAAAjd,YACAid,EAAAuI,cACAvI,EAAAwf,aACAxf,EAAAqX,YACArX,EAAAyf,SACAzf,EAAA0f,WACA1f,EAAA2f,eACA3f,EAAAnkD,SACAmkD,EAAAgX,YACAhX,EAAA+E,SACA/E,EAAAggB,UACAhgB,EAAA4f,YACA5f,EAAAriD,YACAqiD,EAAAC,gBACAD,EAAApiD,iBACAoiD,EAAAkgB,YACAlgB,EAAAmgB,iBACAngB,EAAAogB,SACApgB,EAAAhtC,YACAgtC,EAAAqgB,YACArgB,EAAAkK,gBACAlK,EAAAugB,eACAvgB,EAAAwgB,aACAxgB,EAAA0gB,aACA1gB,EAAAz8C,QACAy8C,EAAA8sB,aACA9sB,EAAArhD,QACAqhD,EAAA4Z,eACA5Z,EAAA+sB,aACA/sB,EAAAgtB,cACAhtB,EAAA4gB,MACA5gB,EAAA6gB,OACA7gB,EAAAmoB,OACAnoB,EAAAooB,SACApoB,EAAAqoB,QACAroB,EAAAuoB,OACAvoB,EAAAwoB,SACAxoB,EAAAynB,cACAznB,EAAAn7B,QACAm7B,EAAAnhD,OACAmhD,EAAAkkB,OACAlkB,EAAAmkB,UACAnkB,EAAAokB,YACApkB,EAAA/kC,YACA+kC,EAAAmjB,UACAnjB,EAAA/yB,UACA+yB,EAAAuc,eACAvc,EAAAqU,UACArU,EAAA5jD,WACA4jD,EAAAvhD,UACAuhD,EAAA4tB,SACA5tB,EAAAD,eACAC,EAAAyc,UACAzc,EAAArgD,QACAqgD,EAAAitB,aACAjtB,EAAA5zB,QACA4zB,EAAAia,eACAja,EAAAka,iBACAla,EAAAma,iBACAna,EAAAoa,mBACApa,EAAAqa,qBACAra,EAAAsa,qBACAta,EAAAktB,aACAltB,EAAAwkB,cACAxkB,EAAAyoB,YACAzoB,EAAAsoB,OACAtoB,EAAA4oB,SACA5oB,EAAAjoC,YACAioC,EAAA6nB,SACA7nB,EAAA2H,aACA3H,EAAA4H,YACA5H,EAAAimB,WACAjmB,EAAAtkD,YACAskD,EAAAwhB,iBACAxhB,EAAAvkD,YACAukD,EAAA1jD,WACA0jD,EAAA7/C,QACA6/C,EAAAkmB,WACAlmB,EAAAomB,aACApmB,EAAAsmB,YACAtmB,EAAA4mB,YACA5mB,EAAA+nB,YACA/nB,EAAAmtB,aACAntB,EAAAujB,cAGAvjB,EAAA3F,KAAA58B,GACAuiC,EAAA8tB,UAAAxR,GACAtc,EAAAj9C,MAAAnD,GAEAgvB,GAAAoxB,EAAA,WACA,GAAA1zB,KAMA,OALAq6B,IAAA3G,EAAA,SAAA7hD,EAAAozD,GACAv2D,GAAApE,KAAAopD,EAAAnxC,UAAA0iD,KACAjlC,EAAAilC,GAAApzD,KAGAmuB,MACW+uC,OAAA,IAWXrb,EAAA+tB,WAGA7yB,GAAA,yEAAAqW,GACAvR,EAAAuR,GAAA17B,YAAAmqB,IAIA9E,GAAA,wBAAAqW,EAAA1uD,GACAq9C,EAAArxC,UAAA0iD,GAAA,SAAAn3C,GACA,GAAA4zD,GAAAjvE,KAAA8hD,YACA,IAAAmtB,IAAAnrE,EACA,UAAAq9C,GAAAnhD,KAEAqb,OAAA5iB,EAAA,EAAAqxD,GAAAlB,GAAAvtC,GAAA,EAEA,IAAA3b,GAAAM,KAAAsiD,OASA,OARA2sB,GACAvvE,EAAAsiD,cAAAgB,GAAA3nC,EAAA3b,EAAAsiD,eAEAtiD,EAAAwiD,UAAArgD,MACAjB,KAAAoiD,GAAA3nC,EAAA4mC,IACAv0C,KAAA8kD,GAAA9yD,EAAAmiD,QAAA,gBAGAniD,GAGAyhD,EAAArxC,UAAA0iD,EAAA,kBAAAn3C,GACA,MAAArb,MAAAwuB,UAAAgkC,GAAAn3C,GAAAmT,aAKA2tB,GAAA,qCAAAqW,EAAA1uD,GACA,GAAA4J,GAAA5J,EAAA,EACAorE,EAAAxhE,GAAA41C,IAAA51C,GAAAyhE,EAEAhuB,GAAArxC,UAAA0iD,GAAA,SAAA3W,GACA,GAAAn8C,GAAAM,KAAAsiD,OAMA,OALA5iD,GAAAqiD,cAAAlgD,MACAg6C,SAAAkR,GAAAlR,EAAA,GACAnuC,SAEAhO,EAAAoiD,aAAApiD,EAAAoiD,cAAAotB,EACAxvE,KAKAy8C,GAAA,wBAAAqW,EAAA1uD,GACA,GAAAsrE,GAAA,QAAAtrE,EAAA,WAEAq9C,GAAArxC,UAAA0iD,GAAA,WACA,MAAAxyD,MAAAovE,GAAA,GAAA72E,QAAA,MAKA4jD,GAAA,2BAAAqW,EAAA1uD,GACA,GAAAurE,GAAA,QAAAvrE,EAAA,WAEAq9C,GAAArxC,UAAA0iD,GAAA,WACA,MAAAxyD,MAAA8hD,aAAA,GAAAX,GAAAnhD,WAAAqvE,GAAA,MAIAluB,EAAArxC,UAAA+pD,QAAA,WACA,MAAA75D,MAAAkB,OAAAklD,KAGAjF,EAAArxC,UAAAqtD,KAAA,SAAA7gB,GACA,MAAAt8C,MAAAkB,OAAAo7C,GAAAz7C,QAGAsgD,EAAArxC,UAAAstD,SAAA,SAAA9gB,GACA,MAAAt8C,MAAAwuB,UAAA2uC,KAAA7gB,IAGA6E,EAAArxC,UAAA08D,UAAA9a,GAAA,SAAApkD,EAAA/N,GACA,wBAAA+N,GACA,GAAA6zC,GAAAnhD,MAEAA,KAAAyB,IAAA,SAAAlJ,GACA,MAAA+xD,IAAA/xD,EAAA+U,EAAA/N,OAIA4hD,EAAArxC,UAAA2tD,OAAA,SAAAnhB,GAEA,MADAA,GAAAyQ,GAAAzQ,EAAA,GACAt8C,KAAAkB,OAAA,SAAA3I,GACA,OAAA+jD,EAAA/jD,MAIA4oD,EAAArxC,UAAA3S,MAAA,SAAAvC,EAAAwP,GACAxP,EAAAguD,GAAAhuD,EAEA,IAAA8E,GAAAM,IACA,OAAAN,GAAAoiD,eAAAlnD,EAAA,KAAAwP,GACA,GAAA+2C,GAAAzhD,IAEA,EAAA9E,EACA8E,IAAAi8D,WAAA/gE,GACOA,IACP8E,IAAAo6D,KAAAl/D,IAEAwP,IAAA3R,IACA2R,EAAAw+C,GAAAx+C,GACA1K,EAAA,EAAA0K,EAAA1K,EAAAq6D,WAAA3vD,GAAA1K,EAAAg8D,KAAAtxD,EAAAxP,IAEA8E,IAGAyhD,EAAArxC,UAAA8rD,eAAA,SAAAtf,GACA,MAAAt8C,MAAAwuB,UAAAqtC,UAAAvf,GAAA9tB,WAGA2yB,EAAArxC,UAAAzR,QAAA,WACA,MAAA2B,MAAA07D,KAAAzZ,KAIA2F,GAAAzG,EAAArxC,UAAA,SAAA1Q,EAAAozD,GACA,GAAA8c,GAAA,qCAAAjzE,KAAAm2D,GACA+c,EAAA,kBAAAlzE,KAAAm2D,GACAgd,EAAAvuB,EAAAsuB,EAAA,gBAAA/c,EAAA,YAAAA,GACAid,EAAAF,GAAA,QAAAlzE,KAAAm2D,EAEAgd,KAGAvuB,EAAAnxC,UAAA0iD,GAAA,WACA,GAAAj6D,GAAAyH,KAAAwhD,YACAjiD,EAAAgwE,GAAA,GAAApxE,UACAuxE,EAAAn3E,YAAA4oD,GACAtF,EAAAt8C,EAAA,GACAowE,EAAAD,GAAAtkE,GAAA7S,GAEAikE,EAAA,SAAAjkE,GACA,GAAAmH,GAAA8vE,EAAApxE,MAAA6iD,EAAAnE,GAAAvkD,GAAAgH,GACA,OAAAgwE,IAAAhuB,EAAA7hD,EAAA,GAAAA,EAGAiwE,IAAAL,GAAA,kBAAAzzB,IAAA,GAAAA,EAAAlgD,SAEA+zE,EAAAC,GAAA,EAEA,IAAApuB,GAAAvhD,KAAA0hD,UACAkuB,IAAA5vE,KAAAyhD,YAAA9lD,OACAk0E,EAAAJ,IAAAluB,EACAuuB,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAp3E,EAAAu3E,EAAAv3E,EAAA,GAAA4oD,GAAAnhD,KACA,IAAAN,GAAAN,EAAAhB,MAAA7F,EAAAgH,EAEA,OADAG,GAAA+hD,YAAA5/C,MAAmCzC,KAAAm0D,GAAAh0D,MAAAi9D,GAAA7gB,QAAAljD,IACnC,GAAA2oD,GAAA1hD,EAAA6hD,GAEA,MAAAsuB,IAAAC,EACA1wE,EAAAhB,MAAA4B,KAAAT,IAEAG,EAAAM,KAAAuzD,KAAAiJ,GACAqT,EAAAN,EAAA7vE,EAAAnH,QAAA,GAAAmH,EAAAnH,QAAAmH,OAKAy8C,GAAA,yDAAAqW,GACA,GAAApzD,GAAAwzB,GAAA4/B,GACAud,EAAA,0BAAA1zE,KAAAm2D,GAAA,aACAid,EAAA,kBAAApzE,KAAAm2D,EAEAvR,GAAAnxC,UAAA0iD,GAAA,WACA,GAAAjzD,GAAApB,SACA,OAAAsxE,KAAAzvE,KAAA0hD,UACAtiD,EAAAhB,MAAA4B,KAAAzH,QAAAgH,GAEAS,KAAA+vE,GAAA,SAAAx3E,GACA,MAAA6G,GAAAhB,MAAA7F,EAAAgH,QAMAqoD,GAAAzG,EAAArxC,UAAA,SAAA1Q,EAAAozD,GACA,GAAAgd,GAAAvuB,EAAAuR,EACA,IAAAgd,EAAA,CACA,GAAAz0E,GAAAy0E,EAAAhuE,KAAA,GACA6d,EAAAu4C,GAAA78D,KAAA68D,GAAA78D,MAEAskB,GAAAxd,MAAoBL,KAAAgxD,EAAApzD,KAAAowE,OAIpB5X,GAAAzE,GAAA16D,EAAAk8D,IAAAnzD,QACAA,KAAA,UACApC,KAAA3G,IAIA0oD,EAAArxC,UAAAwyC,MAAAH,EACAhB,EAAArxC,UAAA0e,QAAA6zB,GACAlB,EAAArxC,UAAAvX,MAAAgqD,GAGAtB,EAAAnxC,UAAAu9D,GAAAhB,GACAprB,EAAAnxC,UAAAwsD,MAAAG,GACAxb,EAAAnxC,UAAAkgE,OAAAtT,GACAzb,EAAAnxC,UAAAwtD,QAAAX,GACA1b,EAAAnxC,UAAAxV,KAAAsiE,GACA3b,EAAAnxC,UAAAkkD,MAAA8I,GACA7b,EAAAnxC,UAAA0e,QAAAuuC,GACA9b,EAAAnxC,UAAAmgE,OAAAhvB,EAAAnxC,UAAA65B,QAAAsX,EAAAnxC,UAAAvX,MAAA0kE,GAEA8E,KACA9gB,EAAAnxC,UAAAiyD,IAAAlF,IAEA5b,EAlrdA,GAAAxoD,GAGAu2E,GAAA,QAGA/rB,GAAA,IAGAmF,GAAA,sBAGAxE,GAAA,4BAGApD,GAAA,yBAGA6R,GAAA,EACAsC,GAAA,EACAqB,GAAA,EACAnC,GAAA,EACAe,GAAA,GACAd,GAAA,GACAiC,GAAA,GACAnC,GAAA,IACAG,GAAA,IACAc,GAAA,IAGAhJ,GAAA,EACAP,GAAA,EAGAkc,GAAA,GACAE,GAAA,MAGAwD,GAAA,IACAD,GAAA,GAGA3nB,GAAA,EACAD,GAAA,EACA8rB,GAAA,EAGA5U,GAAA,IACAna,GAAA,iBACA4hB,GAAA,uBACAQ,GAAA,IAGAvgB,GAAA,WACA4M,GAAA5M,GAAA,EACAqM,GAAArM,KAAA,EAGAqF,GAAA,qBACAwD,GAAA,iBACA8L,GAAA,mBACAC,GAAA,gBACAC,GAAA,iBACA7P,GAAA,oBACAC,GAAA,6BACAiQ,GAAA,eACAH,GAAA,kBACA3P,GAAA,kBACA4P,GAAA,kBACAG,GAAA,eACAF,GAAA,kBACAG,GAAA,kBACAqK,GAAA,mBACAE,GAAA,mBAEAjL,GAAA,uBACA6B,GAAA,wBACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,6BACAC,GAAA,uBACAC,GAAA,uBAGA8N,GAAA,iBACAC,GAAA,qBACAC,GAAA,gCAGAe,GAAA,gCACAhD,GAAA,YACA+C,GAAArkE,OAAAskE,GAAAx6C,QACAu3C,GAAArhE,OAAAshE,GAAAx3C,QAGAu9C,GAAA,mBACAC,GAAA,kBACA3E,GAAA,mBAGAjN,GAAA,mDACAD,GAAA,QACAO,GAAA,sEAGAyL,GAAA,sBACAD,GAAAxhE,OAAAyhE,GAAA33C,QAGA20C,GAAA,aACAoF,GAAA,OACAF,GAAA,OAGAzN,GAAA,WAGA0M,GAAA,kCAGApW,GAAA,OAGAuV,GAAA,OAGAjD,GAAA,qBAGAH,GAAA,aAGApB,GAAA,8BAGAqB,GAAA,cAGAliB,GAAA,mBAGAskB,GAAA,0CAGAyB,GAAA,OAGAU,GAAA,yBAGAsJ,GAAA,kBACAC,GAAA,iCACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,4BACAC,GAAA,uBACAC,GAAA,+CACAC,GAAA,+BACAC,GAAA,+JACAC,GAAA,4BACAC,GAAA,iBACAC,GAAAN,GAAAC,GAAAC,GAAAC,GAGAI,GAAA,IAAAZ,GAAA,IACAa,GAAA,IAAAF,GAAA,IACAG,GAAA,IAAAb,GAAAC,GAAA,IACAa,GAAA,OACAC,GAAA,IAAAb,GAAA,IACAc,GAAA,IAAAb,GAAA,IACAc,GAAA,KAAAlB,GAAAW,GAAAI,GAAAZ,GAAAC,GAAAK,GAAA,IACAU,GAAA,2BACAC,GAAA,MAAAN,GAAA,IAAAK,GAAA,IACAE,GAAA,KAAArB,GAAA,IACAsB,GAAA,kCACAC,GAAA,qCACAC,GAAA,IAAAf,GAAA,IACAgB,GAAA,UAGAC,GAAA,MAAAT,GAAA,IAAAC,GAAA,IACAS,GAAA,MAAAH,GAAA,IAAAN,GAAA,IACAU,GAAAR,GAAA,IACAS,GAAA,IAAAnB,GAAA,KACAoB,GAAA,MAAAL,GAAA,OAAAJ,GAAAC,GAAAC,IAAAjtE,KAAA,SAAAutE,GAAAD,GAAA,KACAG,GAAAF,GAAAD,GAAAE,GACAE,GAAA,OAAAhB,GAAAM,GAAAC,IAAAjtE,KAAA,SAAAytE,GACAE,GAAA,OAAAZ,GAAAP,GAAA,IAAAA,GAAAQ,GAAAC,GAAAX,IAAAtsE,KAAA,SAMAkgE,GAAAjhE,OAAAutE,GAAA,KAGApwB,GAAAn9C,OAAA4tE,GAAA,MAAAA,GAAA,KAAAc,GAAAF,GAAA,KAGAtxB,GAAAl9C,OAAA,IAAAkuE,GAAAzB,GAAAC,GAAAC,GAAAQ,GAAA,KAGAzI,GAAA,gBAGAD,GAAAzkE,QACAiuE,GAAA,IAAAP,GAAA,QAAAJ,GAAAW,GAAA,KAAAltE,KAAA,SACAqtE,GAAA,QAAAd,GAAAW,GAAAE,GAAA,KAAAptE,KAAA,SACAktE,GAAA,IAAAE,GAAA,IACAF,GAAA,IACAT,GACAiB,IACA1tE,KAAA,UAGAyjE,GAAA,uDAGA+B,IACA,8DACA,uEACA,oEACA,8DACA,mDAIAzD,GAAA,GAGAhF,KACAA,IAAA/I,IAAA+I,GAAA9I,IACA8I,GAAA7I,IAAA6I,GAAA5I,IACA4I,GAAA3I,IAAA2I,GAAA1I,IACA0I,GAAAzI,IAAAyI,GAAAxI,IACAwI,GAAAvI,KAAA,EACAuI,GAAAja,IAAAia,GAAAzW,IACAyW,GAAA5K,IAAA4K,GAAA3K,IACA2K,GAAA1K,IAAA0K,GAAAzK,IACAyK,GAAAta,IAAAsa,GAAApK,IACAoK,GAAAvK,IAAAuK,GAAAla,IACAka,GAAAtK,IAAAsK,GAAAnK,IACAmK,GAAArK,IAAAqK,GAAAG,KAAA,CAGA,IAAAja,MACAA,IAAAH,IAAAG,GAAAqD,IACArD,GAAAkP,IAAAlP,GAAAmP,IACAnP,GAAAoP,IAAApP,GAAA+Q,IACA/Q,GAAAgR,IAAAhR,GAAAiR,IACAjR,GAAAkR,IAAAlR,GAAAmR,IACAnR,GAAA0P,IAAA1P,GAAAuP,IACAvP,GAAAJ,IAAAI,GAAAwP,IACAxP,GAAA2P,IAAA3P,GAAAyP,IACAzP,GAAA4P,IAAA5P,GAAAoR,IACApR,GAAAqR,IAAArR,GAAAsR,IACAtR,GAAAuR,KAAA,EACAvR,GAAAqP,IAAArP,GAAAR,IACAQ,GAAAia,KAAA,CAGA,IAAA/hmS,IACAsyB,IAAA,QACAC,IAAA,OACAC,IAAA,OACA/9C,IAAA,SACAD,IAAA,QACAi+C,IAAA,SAIAxxB,IACAyxB,QAAU,IACVC,OAAS,IACTC,OAAS,IACTC,SAAW,IACXC,QAAU,IACVC,QAAU,KAIVC,IACApqC,YAAA,EACAC,QAAA,GAIAqX,IACA+yB,KAAA,KACAz+C,IAAA,IACA0+C,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAIA5O,GAAAxgC,WACAu+B,GAAApmD,SAGAk3D,GAAAN,SAAAr7E,WAAA8O,SACA9O,EACAgB,EAGA46E,GAAAP,SAAAp7E,WAAA6O,SACA7O,EACAe,EAGAyxE,GAAAmJ,OAAA57E,UAAA27E,GACAA,GACA36E,EAGA66E,GAAA50B,EAAA00B,IAAAC,IAAA,gBAAAx4E,OAGA04E,GAAA70B,EAAAo0B,SAAAx4D,cAGAk5D,GAAA90B,EAAAo0B,SAAA9iD,kBAGAyjD,GAAA/0B,EAAAo0B,SAAA9yE,cAQAlG,GAAAw5E,IACAE,MAAAC,OAAAzjD,SAAAwjD,IACAD,IAAAE,IAAA7lE,SAAA,iBAi1cApQ,GAAAwjD,KAKAwyB,IAAAD,QAA+B/1E,KAM/B+9C,EAAA,WACA,MAAA/9C,KACK3F,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6jD,IAAA9iD,IAAAf,EAAAD,QAAA8jD,MAeJ1jD,KAAAmI,QzB+pV6BnI,KAAKJ,EAASH,EAAoB,IAAII,GAAU,WAAa,MAAOsI,WAI5F,SAAStI,EAAQD,G0Bn4yBvBC,EAAAD,QAAA,mU1By4yBM,SAASC,EAAQD,G2Bz4yBvBC,EAAAD,QAAA,44B3B+4yBM,SAASC,EAAQD,G4B/4yBvBC,EAAAD,QAAA,qP5Bq5yBM,SAASC,EAAQD,G6Br5yBvBC,EAAAD,QAAA,mM7B25yBM,SAASC,EAAQD,G8B35yBvBC,EAAAD,QAAA,qD9Bi6yBM,SAASC,EAAQD,G+Bj6yBvBC,EAAAD,QAAA,4kB/Bu6yBM,SAASC,EAAQD,GgCv6yBvBC,EAAAD,QAAA,sFhC66yBM,SAASC,EAAQD,GiC76yBvBC,EAAAD,QAAA,4nBjCm7yBM,SAASC,EAAQD,GkCn7yBvBC,EAAAD,QAAA,2JlCy7yBM,SAASC,EAAQD,GmCz7yBvBC,EAAAD,QAAA,iFnC+7yBM,SAASC,EAAQD,GoC/7yBvBC,EAAAD,QAAA;EpCq8yBM,SAASC,EAAQD,GqCr8yBvBC,EAAAD,QAAA,+TrC28yBM,SAASC,EAAQD,EAASH,GsC38yBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,ItCm9yBzF,SAASxtC,EAAQD,EAASH,GuCx9yBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,IvCg+yBzF,SAASxtC,EAAQD,EAASH,GwCt+yBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,IxC8+yBzF,SAASxtC,EAAQD,EAASH,GyCp/yBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,IzC4/yBzF,SAASxtC,EAAQD,EAASH,G0ClgzBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I1C0gzBzF,SAASxtC,EAAQD,EAASH,G2ChhzBhC,GAAA2tC,GAAAC,CACAA,GAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I3CwhzBzF,SAASxtC,EAAQD,EAASH,G4C7hzBhC,GAAA2tC,GAAAC,CACAA,GAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I5CqizBzF,SAASxtC,EAAQD,EAASH,G6C1izBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I7CkjzBzF,SAASxtC,EAAQD,EAASH,G8CxjzBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I9CgkzBzF,SAASxtC,EAAQD,EAASH,G+CtkzBhC,GAAA2tC,GAAAC,CACAA,GAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,I/C8kzBzF,SAASxtC,EAAQD,EAASH,GgDnlzBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,IhD2lzBzF,SAASxtC,EAAQD,EAASH,GiDjmzBhC,GAAA2tC,GAAAC,CACAD,GAAA3tC,EAAA,IACA4tC,EAAA5tC,EAAA,IACAI,EAAAD,QAAAwtC,MACAvtC,EAAAD,QAAAU,aAAAT,EAAAD,QAAAC,EAAAD,QAAAC,YACAwtC,KACA,kBAAAxtC,GAAAD,QAAAC,EAAAD,QAAAoV,UAAAnV,EAAAD,QAAAoV,YAA+FnV,EAAAD,SAAAuhB,SAAAksB,IjDymzBzF,SAASxtC,EAAQD,EAASH;;;;;CkD1mzBhC,SAAAuD,EAAA4vB,GACA/yB,EAAAD,QAAAgzB,KAGCzqB,KAAA,WAAoB,YASrB,SAAA0zE,GAAApmE,EAAAqmE,EAAAC,GACA5zE,KAAAsN,OACAtN,KAAA2zE,UACA3zE,KAAA4zE,WAuBA,QAAAC,GAAA9uE,GACA/E,KAAAhG,UACAgG,KAAAwR,YACAxR,KAAA+E,SAsBA,QAAA+uE,GAAAC,EAAAJ,EAAAC,GACA,gBAAAtmE,EAAA0mE,GACA,GAAAC,GAAAF,EAAAzmE,CAEA,OAAA0mE,OACAA,GAAAF,EAAAG,EAAAN,EAAAC,IAEA,GAAAF,GAAAK,EAAAzmE,EAAAqmE,EAAAC,IAKA,QAAAM,GAAAC,EAAA7mE,EAAAyO,GAEA,OADAq4D,GAAA,EACA14E,EAAA,EAAAwC,EAAAi2E,EAAAx4E,OAA0CuC,EAAAxC,EAAOA,IACjD04E,GAAAD,EAAAz4E,GAAA4R,KAAA3R,MAGA2R,KAAA+mE,OAAAD,EACA,IAAA35B,IAAiBntC,OAAAyO,UACjBo4D,GAAAtyE,KAAA44C,GAGA,QAAA65B,GAAAC,EAAAZ,EAAAhhB,EAAA6hB,GACA,GAAAx6E,GAAA25E,EAAA35E,MAEA,QAAAsT,KAAAtT,GACA,GAAAA,EAAAiC,eAAAqR,GAAA,CACA,GAAA6mE,GAAAI,EAAAp3E,OACA+2E,GAAAC,EAAA7mE,EAAAtT,EAAAsT,IAEAqmE,EAAAniE,SAAAlE,GACAgnE,EAAAH,EAAAR,EAAAniE,SAAAlE,GAAAqlD,EAAA6hB,GAEA7hB,EAAA96D,KAAA28E,EAAAL,IAMA,QAAA1yE,GAAAkxD,EAAA8hB,GACA,GAAAd,GAAA,GAAAE,EAEAlhB,GAAAmhB,EAAA,GAAAH,EAAA3zE,KAAA4zE,WAEAU,KAAAX,EAAA,SAAAl5B,GACAg6B,EACAA,EAAAz0E,KAAAy6C,GAEAz6C,KAAAqI,IAAAoyC,IAEKz6C,MAOL,QAAAoL,GAAA/O,GACA,yBAAAhE,OAAAyX,UAAApT,SAAA7E,KAAAwE,GAoBA,QAAAq4E,GAAA3mC,GACA/tC,KAAA+tC,SAsBA,QAAA4mC,GAAAnzE,GACAxB,KAAAwB,OAiBA,QAAAozE,GAAApzE,GACAxB,KAAAwB,OAiBA,QAAAqzE,MAWA,QAAAviE,GAAAmoC,EAAAp7B,EAAAy1D,GAGA,MAAAr6B,EAAA9qC,OAAA,KACA8qC,IAAA45B,OAAA,GAGA,IAAAU,GAAAt6B,EAAAn9B,MAAA,KACA03D,IAqBAF,GAAA95E,IAAA,EAEA,QAAAU,GAAA,EAAAwC,EAAA62E,EAAAp5E,OAAwCuC,EAAAxC,EAAOA,IAAA,CAC/C,GACA4F,GADA2zE,EAAAF,EAAAr5E,IAGA4F,EAAA2zE,EAAA3zE,MAAA,iBACA0zE,EAAAnzE,KAAA,GAAA8yE,GAAArzE,EAAA,KACA+d,EAAAxd,KAAAP,EAAA,IACAwzE,EAAA95E,KAAA,MACOsG,EAAA2zE,EAAA3zE,MAAA,kBACP0zE,EAAAnzE,KAAA,GAAA+yE,GAAAtzE,EAAA,KACAwzE,EAAA95E,KAAA,IACAqkB,EAAAxd,KAAAP,EAAA,KACO,KAAA2zE,GACPD,EAAAnzE,KAAA,GAAAgzE,IACAC,EAAA95E,KAAA,MAEAg6E,EAAAnzE,KAAA,GAAA6yE,GAAAO,IACAH,EAAA95E,KAAA,KAMA,MAFA85E,GAAA95E,KAAA85E,EAAA95E,IAEAg6E,EAoBA,QAAAE,GAAAC,GACAn1E,KAAAm1E,WACAn1E,KAAAo1E,cAuGA,QAAAC,GAAAC,GACA,MAAAA,GAAAx0D,KAAA,SAAA7jB,EAAAC,GACA,MAAAA,GAAA43E,YAAA95E,IAAAiC,EAAA63E,YAAA95E,MAIA,QAAAu6E,GAAAD,EAAApjE,GAGA,OAFAkjE,MAEA15E,EAAA,EAAAwC,EAAAo3E,EAAA35E,OAAsCuC,EAAAxC,EAAOA,IAAA,CAC7C,GAAAiqC,GAAA2vC,EAAA55E,EAEA05E,KAAAh5D,OAAAupB,EAAArkC,MAAA4Q,IAGA,MAAAkjE,GASA,QAAAI,GAAAC,GACAz1E,KAAAy1E,kBAUA,QAAAC,GAAA/vC,EAAAr4B,EAAAmoE,GAOA,OANA9tD,GAAAge,EAAAhe,SACAguD,EAAAhwC,EAAAgwC,MACAC,EAAAtoE,EAAAhM,MAAAq0E,GACAE,EAAA,EACAn2E,EAAA,GAAA81E,GAAAC,GAEA/5E,EAAA,EAAAwC,EAAAypB,EAAAhsB,OAAwCuC,EAAAxC,EAAOA,IAAA,CAK/C,OAJAqgB,GAAA4L,EAAAjsB,GACA2jB,EAAAtD,EAAAsD,MACAwY,KAEAjQ,EAAA,EAAA9vB,EAAAunB,EAAA1jB,OAAuC7D,EAAA8vB,EAAOA,IAC9CiQ,EAAAxY,EAAAuI,IAAAguD,EAAAC,IAGAn2E,GAAAmC,MAAmBka,kBAAA8b,SAAAi+C,YAAAz2D,EAAA1jB,SAGnB,MAAA+D,GAGA,QAAAq2E,GAAAC,EAAAf,GAOA,MANAA,GAAAgB,SAAA,SAAA/jE,GAGA8jE,IAAAlzE,IAAAoP,KAGA8jE,EAGA,QAAAE,GAAAC,GAGA,MADAA,KAAA94E,QAAA,cACA+4E,mBAAAD,GAiQA,QAAA5jD,GAAA8jD,GAEArmD,OAAArE,UACAA,QAAA4G,KAAA,gBAAA8jD,GACAC,EAAAvnE,MAAAunE,EAAAvnE,IAAAvV,OAAAC,OACAkyB,QAAA4G,KAAA,GAAA03C,OAAA,wBAAApjB,QAcA,QAAA0vB,GAAAC,EAAAC,EAAAtqD,GACA,GAAArmB,GAAA0wE,EAAAl1E,MAAA,UAMA,IALAwE,IACAA,IAAA,GACA0wE,IAAAr5E,MAAA,GAAA2I,EAAAnK,SAGA,MAAA86E,EAAA9mE,OAAA,GACA,MAAA6mE,GAAAC,CAEA,IAAA5vB,GAAA2vB,EAAAl5D,MAAA,IAIA6O,IAAA06B,IAAAlrD,OAAA,IACAkrD,EAAAhe,KAIA,QADAksC,GAAA0B,EAAAp5E,QAAA,UAAAigB,MAAA,KACA5hB,EAAA,EAAmBA,EAAAq5E,EAAAp5E,OAAqBD,IAAA,CACxC,GAAAu5E,GAAAF,EAAAr5E,EACA,OAAAu5E,IAEO,OAAAA,EACPpuB,EAAAhe,MAEAge,EAAAhlD,KAAAozE,IAOA,MAHA,KAAApuB,EAAA,IACAA,EAAAl3B,QAAA,IAEAk3B,EAAAriD,KAAA,KAUA,QAAAkyE,GAAA1+E,GACA,MAAAA,IAAA,kBAAAA,GAAA2+E,KAYA,QAAAC,GAAApzD,EAAAhiB,GACA,GAAAqL,GAAA2W,MAAA/R,UAAA+R,EAAA3W,QACA,OAAAA,MAAA4tC,OAAA5tC,EAAA4tC,MAAAj5C,GAcA,QAAAq1E,GAAA96D,EAAA3b,GACA6+D,EAUAA,EAAAxtD,SAAA5C,WAAArR,EAAAue,EAAAyH,UATAy7C,GACA6X,QAAAR,EAAAvnE,IAAAe,UAAA0a,kBACA/Y,UACA5C,YACArR,EAAAue,EAAAyH,aAOAy7C,EAAA6X,QAAA,aAAA53C,GACAnjB,EAAAyH,UAAA0b,EACA9+B,EAAA8+B,KAYA,QAAA63C,GAAAzpE,EAAAuqB,EAAA/xB,GAcA,MAbArN,UAAAo/B,UAEAvqB,IAAAjQ,QAAA,sBAAAG,EAAAzC,GACA,GAAAC,GAAA68B,EAAA98B,EAKA,OAHAC,IACAu3B,EAAA,UAAAx3B,EAAA,yCAAAuS,EAAA,iBAAA9M,KAAAC,UAAAo3B,IAEA78B,GAAA,KAEA8K,IACAwH,GAAA0pE,EAAAlxE,IAEAwH,EA6KA,QAAA2pE,GAAAt0B,EAAA5mC,EAAA7hB,GACA,GAAAspB,GAAAm/B,EAAAjjB,OACA,KAAAlc,IAAAzH,EACA,QAIA,IAAA4mC,EAAAzjB,YAAAnjB,EAAAyH,UACA,QAEA,IAAA0zD,GAAAN,EAAApzD,EAAA,WACA,wBAAA0zD,SAAAr/E,KAAA2rB,GACArpB,GAAAD,EAAAC,GACAuE,KAAAxE,EAAAwE,QACK,EAWL,QAAAy4E,GAAAx0B,EAAAzoD,EAAAI,GACA,GAAA88E,GAAAz0B,EAAAjjB,QACArX,EAAAuuD,EAAAQ,EAAA,gBACA/uD,GAGAnuB,EAAAigB,SAAAkO,EAAA+uD,EAAA98E,GACA+8E,eAAA,IAHA/8E,IAgBA,QAAAg9E,GAAAv7D,EAAA7hB,EAAAI,GACAu8E,EAAA96D,EAAA,SAAAmjB,GAEA,IAAAhlC,EAAAq9E,QAAA,CAIA,GAAAlvD,GAAAuuD,EAAA13C,EAAA,cACA7W,GAGAnuB,EAAAigB,SAAAkO,EAAA,KAAA/tB,GACA+8E,eAAA,IAHA/8E,OAiBA,QAAAk9E,GAAA70B,EAAAzoD,EAAAI,GACA,GAAAkpB,GAAAm/B,EAAAjjB,QACArX,EAAAuuD,EAAApzD,EAAA,aACA6E,GAGAnuB,EAAAu9E,UAAApvD,EAAA7E,EAAAlpB,GAFAA,IAeA,QAAAm5B,GAAAkvB,EAAAzoD,EAAAke,EAAAhY,EAAAs3E,GACA,GAAA37D,GAAA7hB,EAAAy9E,cAAAv/D,EACA,KAAA2D,EAMA,MALA67D,GAAAj1B,GACAA,EAAAl6B,QACAk6B,EAAAtjB,aAAA,WAEAj/B,OAIA,IAAA8+B,GAAAyjB,EAAAzjB,UAAAnjB,EAAAyH,UACAq0D,EAAAjB,EAAA13C,EAAA,YACA44C,EAAAlB,EAAA13C,EAAA,QACA64C,EAAAnB,EAAA13C,EAAA,cAEAyjB,GAAAvqC,QACAuqC,EAAAq1B,WAAA,CAEA,IAAAx0D,GAAA/qB,OACAw/E,KAAAH,GAAAC,EAQA,IAFAL,KAAA/0B,EAAAjjB,SAAAijB,EAAAjjB,QAAAhuB,cAAAwtB,EAIA1b,EAAAm/B,EAAAjjB,QACAlc,EAAA00D,kBAAAD,MAwBA,IAtBAL,EAAAj1B,GAIAA,EAAAljB,SAAA,GAKAjc,EAAAm/B,EAAA3iB,OACA7Y,OACA+wD,kBAAAD,GAEA/kD,QAAA,WACAlzB,KAAAm4E,YAAAx1B,KAQAA,EAAA5jB,UAAA,CACAvb,EAAA00D,kBAAAD,CACA,IAAAG,GAAA50D,EAAA60D,oBACAD,KACAz1B,EAAA21B,UAAAF,EACA50D,EAAA60D,qBAAA,MAOA,GAAAx5C,GAAA,WACArb,EAAAsG,YAIAgC,EAAA,WACA,GAAA4rD,EAEA,YADAt3E,OAGA,IAAA5H,GAAA0B,EAAA1B,MACAA,GAAA+/E,WAAA//E,EAAAggF,kBACA71B,EAAAzoD,WAAAspB,IAIAm/B,EAAA81B,WAEA91B,EAAA81B,WAAAj1D,GAGAm/B,EAAAjjB,QAAAlc,EAEAA,EAAAiJ,QAAAk2B,EAAAj5C,OAAA,UAEAtJ,QAGAs4E,EAAA,WAEA/1B,EAAA21B,WACA7kD,EAAAkvB,EAAA21B,UAAAp+E,EAAAke,EAAA,OAAAs/D,GAAA/0B,EAAA5jB,WAEAjT,KAIA6sD,EAAA,WACAh2B,EAAAq1B,WAAA,EACAF,GAAAC,EAEAa,EAAAp1D,EAAAtpB,EAAA49E,EAAAY,EAAA75C,IAGAi5C,GACAc,EAAAp1D,EAAAtpB,EAAA49E,GAEAY,KAIAb,GACA39E,EAAAu9E,UAAAI,EAAAr0D,EAAAm1D,GACA95C,UACAg6C,cAAA,IAGAF,IAWA,QAAAjB,GAAA/0B,EAAAzoD,GACA,GAAAspB,GAAAm/B,EAAAjjB,QACAo4C,EAAAlB,EAAApzD,EAAA,OACAs0D,IACAc,EAAAp1D,EAAAtpB,EAAA49E,GAcA,QAAAc,GAAAp1D,EAAAtpB,EAAAmuB,EAAAjoB,EAAAy+B,GACArb,EAAA00D,mBAAA,EACAh+E,EAAAu9E,UAAApvD,EAAA7E,EAAA,WACAA,EAAA00D,mBAAA,EACA10D,EAAA8E,MAAA,oBAAA9E,GACApjB,SAEAy+B,UACAg6C,cAAA,EACAC,YAAA,SAAAxvE,GAEA,GAAAyvE,KAaA,OAZAl6E,GAAAyK,IACAjR,OAAAsG,KAAA2K,GAAAoV,QAAA,SAAA3jB,GACA,GAAAC,GAAAsO,EAAAvO,EACA27E,GAAA17E,GACA+9E,EAAAl3E,KAAA7G,EAAA27E,KAAA,SAAAqC,GACAx1D,EAAAzP,KAAAhZ,EAAAi+E,MAGAx1D,EAAAzP,KAAAhZ,EAAAC,KAIA+9E,EAAAp9E,OACAo9E,EAAA,GAAArnE,YAAAunE,IAAAF,GADA,UAcA,QAAAnB,GAAAj1B,GACAA,EAAA5jB,WAAA4jB,EAAAjjB,SAAAijB,EAAA21B,YACA31B,EAAAjjB,QAAA24C,qBAAA11B,EAAA21B,WAEA31B,EAAA21B,UAAA,KASA,QAAAz5E,GAAA7D,GACA,0BAAA3C,OAAAyX,UAAApT,SAAA7E,KAAAmD,GA+UA,QAAAk+E,GAAAl+E,GACA,0BAAA3C,OAAAyX,UAAApT,SAAA7E,KAAAmD,GAGA,QAAAqD,GAAArD,GACA,MAAAA,GAAAwD,MAAAsR,UAAA3S,MAAAtF,KAAAmD,MA+CA,QAAAm+E,GAAApqE,GACA,GAAAqqE,GAAArqE,EAAAggB,KACAtwB,EAAA26E,EAAA36E,OACA2M,EAAAguE,EAAAhuE,QACAc,EAAAktE,EAAAltE,eAGAwP,EAAA3M,EAAAe,UAAAC,KACAhB,GAAAe,UAAAC,MAAA,SAAAlD,GACAA,OACA,IAAA/S,GAAA+S,EAAAwsE,SAAAxsE,EAAAxG,QAAArG,KACAxH,EAAAsB,EAAAq9C,QACAsD,EAAA3gD,EAAAq8C,MACA39C,KAEAwH,KAAAm3C,QAAA3+C,EACAA,EAAA8gF,UAAAz3E,KAAA7B,MAEAA,KAAAu5E,YAEAv5E,KAAAu5E,YAAA,SAAA9+B,GAGAvuC,EAAAlM,KAAA,SAAAy6C,IAGA/+B,EAAA7jB,KAAAmI,KAAA6M,GAGA,IAAA4N,GAAA1L,EAAAe,UAAAyZ,QACAxa,GAAAe,UAAAyZ,SAAA,YACAvpB,KAAAkR,mBAAAlR,KAAAm3C,SACAn3C,KAAAm3C,QAAAmiC,UAAAzvD,QAAA7pB,MAEAya,EAAArc,MAAA4B,KAAA7B,WAIA,IAAAoR,GAAAR,EAAAvV,OAAAu5B,sBACAymD,EAAA,8BAEAjqE,KACAA,EAAAkrC,MAAA,SAAAjsC,EAAAC,GACA,IAAAA,EAAA,MAAAD,EACA,KAAAA,EAAA,MAAAC,EACA,IAAAlQ,KACAE,GAAAF,EAAAiQ,EACA,QAAAzT,KAAA0T,GAAA,CACA,GAAAxR,GAAAsB,EAAAxD,GACAmC,EAAAuR,EAAA1T,EAGAkC,IAAAu8E,EAAAn9E,KAAAtB,GACAwD,EAAAxD,IAAAqQ,EAAAnO,UAAAmf,OAAAlf,GAEAqB,EAAAxD,GAAAmC,EAGA,MAAAqB,KAKA,QAAAk7E,GAAA1qE,GAEA,GAAAvR,GAAAuR,EAAAggB,KACA2qD,EAEA3qE,EAAAmgB,UAAA,eAEAngB,EAAA2U,mBAAAF,UAEAm2D,EAAAn8E,EAAAiB,UAA6Bi7E,EAG7Bl8E,GAAAiB,OAAAk7E,GAEAx5C,eAAA,EAEApiC,KAAA,WACA,GAAA08C,GAAAz6C,KAAApE,GAAAu6C,MAEA,KAAAsE,EAEA,WADAloB,GAAA,8DAKAvyB,MAAA45E,mBAAA,EAEAF,EAAA37E,KAAAlG,KAAAmI,KAKA,KAFA,GAAA65E,GAAAphF,OACA4N,EAAArG,KAAApE,GACAyK,GAAA,CACA,GAAAA,EAAA8xE,YAAA,CACA0B,EAAAxzE,EAAA8xE,WACA,OAEA9xE,IAAAT,QAEA,GAAAi0E,EAKA75E,KAAA65E,aACAA,EAAAvB,UAAAt4E,SACS,CAET,GAAAxH,GAAAiiD,EAAAjiD,MACAA,GAAAshF,UAAA95E,KASA,GAAA9F,GAAAugD,EAAAjiD,OAAAuhF,kBACA,KAAAF,GAAA3/E,EAAAuQ,MAAAovE,KAAA7B,UAAA,CACA,GAAA5/D,GAAAyhE,IAAAzhE,MAAA,GACAqb,GAAAzzB,KAAA9F,EAAAke,KAIAiiB,OAAA,WACAr6B,KAAA65E,aACA75E,KAAA65E,WAAAvB,UAAA,MAEAoB,EAAAr/C,OAAAxiC,KAAAmI,SAIA+O,EAAAirE,iBAAA,cAAAL,GASA,QAAAM,GAAAlrE,GA8JA,QAAAmrE,GAAAC,GACA,MAAAA,GAAAC,WAAAC,SAAAD,UAAAD,EAAAG,WAAAD,SAAAC,UAAAH,EAAAI,OAAAF,SAAAE,KA9JA,GAAAnB,GAAArqE,EAAAggB,KACA/N,EAAAo4D,EAAAr7E,KACAa,EAAAw6E,EAAAx6E,SACAuJ,EAAAixE,EAAAjxE,SACAI,EAAA6wE,EAAA7wE,WAEAwG,GAAAmgB,UAAA,eACAhO,SAAA,KACAnjB,KAAA,WACAiC,KAAA8E,GAAA01E,iBAAA,KAIAzrE,EAAAmgB,UAAA,QACAhO,SAAA,IAEAnjB,KAAA,WACA,GAAAnC,GAAAoE,KAAApE,EAEA,KAAAA,EAAAu6C,OAEA,WADA5jB,GAAA,uDAGAvyB,MAAAxH,OAAAoD,EAAAu6C,OAAA39C,OAEAwH,KAAA8iC,QAAAlnC,EAAAwvB,OAAA,SAAApK,EAAAhhB,KAAAy6E,cAAAz6E,OAEAA,KAAA06E,SAAA16E,KAAA8E,EAEA,KADA,GAAAuB,GAAArG,KAAA8E,GAAAwB,WACAD,GAAA,CACA,GAAAA,EAAAm0E,gBAAA,CACAx6E,KAAA06E,SAAAr0E,CACA,OAEAA,IAAAC,WAKA,MAAAtG,KAAA8E,GAAAyE,SAAA,WAAAvJ,KAAA8E,GAAA6B,aAAA,YAIA3G,KAAA+b,QAAAiF,EAAAhhB,KAAA26E,QAAA36E,MACAA,KAAA8E,GAAA4C,iBAAA,QAAA1H,KAAA+b,WAGA+K,OAAA,SAAA/hB,GACA/E,KAAA+E,SACAnG,EAAAmG,KACA/E,KAAAmsB,OAAApnB,EAAAonB,OACAnsB,KAAA46E,MAAA71E,EAAA61E,MACA56E,KAAA66E,gBAAA76E,KAAA86E,YACA96E,KAAA86E,YAAA/1E,EAAA+1E,aAEA96E,KAAAy6E,cAAAz6E,KAAApE,GAAAu6C,SAGAwkC,QAAA,SAAAjuE,GAGA,KAAAA,EAAAquE,SAAAruE,EAAAsuE,SAAAtuE,EAAAuuE,UAGAvuE,EAAAwuE,kBAGA,IAAAxuE,EAAAyuE,QAAA,CAEA,GAAAp2E,GAAA/E,KAAA+E,MACA,IAAAA,EAEA2H,EAAA+P,iBACAzc,KAAAxH,OAAA4+C,GAAAryC,OACS,CAGT,IADA,GAAAD,GAAA4H,EAAA3H,OACA,MAAAD,EAAAyE,SAAAzE,IAAA9E,KAAA8E,IACAA,IAAAwB,UAEA,OAAAxB,EAAAyE,SAAA2wE,EAAAp1E,KACA4H,EAAA+P,iBACAzc,KAAAxH,OAAA4+C,IACA9pC,KAAAxI,EAAAs2E,SACA/9E,QAAA0H,KAAA1H,QACA8uB,OAAApnB,KAAAonB,aAMAsuD,cAAA,SAAAhgC,GAGA,GAAA4gC,GAAAr7E,KAAAxH,OAAA8iF,eAAAt7E,KAAA+E,OACA/E,MAAAsN,OAAA+tE,IACAr7E,KAAAsN,KAAA+tE,EACAr7E,KAAAu7E,oBACAv7E,KAAAw7E,cAEAx7E,KAAAy7E,cAAAhhC,EAAAntC,OAGAiuE,kBAAA,WACAv7E,KAAA07E,SAAA17E,KAAAsN,OAAAtN,KAAA46E,MAAA,GAAAn3E,QAAA,IAAAzD,KAAAsN,KAAAjQ,QAAA,UAAAA,QAAAs+E,GAAA,IAAAt+E,QAAA2F,GAAA,yBAGAw4E,WAAA,WACA,SAAAx7E,KAAA8E,GAAAyE,QAAA,CAGA,GAAA+D,GAAAtN,KAAAsN,KACA9U,EAAAwH,KAAAxH,OACAojF,EAAA,MAAAtuE,EAAAqC,OAAA,GAEAksE,EAAAvuE,IAAA,SAAA9U,EAAAia,MAAAmpE,GAAApjF,EAAAoB,QAAAkiF,WAAAxuE,EAAAtN,KAAAmsB,QAAA7e,CACAuuE,GACA77E,KAAA8E,GAAA+2E,OAEA77E,KAAA8E,GAAA8B,gBAAA,UAIA60E,cAAA,SAAAnuE,GACA,GAAAxI,GAAA9E,KAAA06E,SACAI,EAAA96E,KAAA86E,aAAA96E,KAAAxH,OAAAujF,gBAEA/7E,MAAA66E,kBAAAC,GACAvyE,EAAAzD,EAAA9E,KAAA66E,gBAGA,IAAAmB,GAAAh8E,KAAAsN,KAAAjQ,QAAAs+E,GAAA,GACAruE,KAAAjQ,QAAAs+E,GAAA,IAEA37E,KAAA46E,MACAoB,IAAA1uE,GAEA,MAAA0uE,EAAArsE,OAAAqsE,EAAArgF,OAAA,IAAAqgF,IAAA1uE,EAAAjQ,QAAA4+E,GAAA,IACA9zE,EAAArD,EAAAg2E,GAEAvyE,EAAAzD,EAAAg2E,GAGA96E,KAAA07E,UAAA17E,KAAA07E,SAAAr/E,KAAAiR,GACAnF,EAAArD,EAAAg2E,GAEAvyE,EAAAzD,EAAAg2E,IAKAzgD,OAAA,WACAr6B,KAAA8E,GAAA8C,oBAAA,QAAA5H,KAAA+b,SACA/b,KAAA8iC,SAAA9iC,KAAA8iC,aAmlBA,QAAAo5C,GAAA5uE,EAAAyO,GACA,GAAAogE,GAAApgE,EAAAyH,SACAzU,IAAAggB,KAAAlwB,cAAAs9E,KACAA,EAAApgE,EAAAyH,UAAAzU,GAAAtQ,OAAA09E,IAGA,kBAAAA,KACApgE,EAAAyH,UAAA,KACA+O,EAAA,gCAAAjlB,EAAA,OA1iFA,GAAA8uE,KAEAA,GAAAC,eAAA,SAAAC,EAAAC,GACA,KAAAD,YAAAC,IACA,SAAAp0B,WAAA,sCASAurB,EAAA5jE,WACA3V,GAAA,SAAA4K,EAAA4tD,GACA,GAAAihB,GAAA5zE,KAAA4zE,QAQA,IANAA,KAAA4I,eACAz3E,EAAA6uE,EAAA4I,aAAAx8E,KAAA2zE,QAAA5uE,WAGA/E,KAAA2zE,QAAAtrE,IAAArI,KAAAsN,KAAAvI,GAEA4tD,EAAA,CACA,OAAAA,EAAAh3D,OACA,SAAAsuE,OAAA,2DAEAjqE,MAAA2zE,QAAA8I,SAAAz8E,KAAAsN,KAAAvI,EAAA4tD,EAAA3yD,KAAA4zE,UAEA,MAAA5zE,QAUA6zE,EAAA/jE,WACAzH,IAAA,SAAAiF,EAAAyO,GACA/b,KAAAhG,OAAAsT,GAAAyO,GAGA0gE,SAAA,SAAAnvE,EAAAvI,EAAA4tD,EAAAihB,GACA,GAAAD,GAAA,GAAAE,GAAA9uE,EACA/E,MAAAwR,SAAAlE,GAAAqmE,CAEA,IAAAryE,GAAAwyE,EAAAxmE,EAAAqmE,EAAAC,EAEAA,MAAA8I,gBACA9I,EAAA8I,eAAA33E,EAAAzD,GAGAqxD,EAAArxD,IA0DA,IAAAq7E,IAAA,4CAAsE,IAAK,MAE3E55E,EAAA,GAAAU,QAAA,MAAAk5E,EAAAn4E,KAAA,eA0BAkwE,GAAA5kE,WACAmmE,SAAA,SAAAtjB,GAIA,OAFAzgD,GADA67B,EAAA/tC,KAAA+tC,OAGAryC,EAAA,EAAAwC,EAAA6vC,EAAApyC,OAAwCuC,EAAAxC,EAAOA,IAC/CwW,EAAA67B,EAAAp+B,OAAAjU,GACAi3D,GAAkBiqB,WAAA1qE,KAIlByjE,MAAA,WACA,MAAA31E,MAAA+tC,OAAA1wC,QAAA0F,EAAA,SAGA85E,SAAA,WACA,MAAA78E,MAAA+tC,SAOA4mC,EAAA7kE,WACAmmE,SAAA,SAAAtjB,GACAA,GAAgBmqB,aAAA,IAAAxnB,QAAA,KAGhBqgB,MAAA,WACA,iBAGAkH,SAAA,SAAAhlD,GACA,GAAA78B,GAAA68B,EAAA73B,KAAAwB,KACA,cAAAxG,EAAA,IAAAgF,KAAAwB,KAAAxG,IAOA45E,EAAA9kE,WACAmmE,SAAA,SAAAtjB,GACAA,GAAgBmqB,aAAA,GAAAxnB,QAAA,KAGhBqgB,MAAA,WACA,cAGAkH,SAAA,SAAAhlD,GACA,GAAA78B,GAAA68B,EAAA73B,KAAAwB,KACA,cAAAxG,EAAA,IAAAgF,KAAAwB,KAAAxG,IAKA65E,EAAA/kE,WACAmmE,SAAA,aACAN,MAAA,WACA,UAEAkH,SAAA,WACA,WAmFA3H,EAAAplE,WACAxN,IAAA,SAAA6yE,GAGA,OAFAC,GAAAp1E,KAAAo1E,WAEA15E,EAAA,EAAAwC,EAAAk3E,EAAAz5E,OAA4CuC,EAAAxC,EAAOA,IAAA,CACnD,GAAAiN,GAAAysE,EAAA15E,GAEA2kE,EAAA13D,EAAAwsE,SAAAyH,aAAAzH,EAAAyH,UAGA,IAFAvc,KAAA13D,EAAAwsE,SAAA2H,eAAA3H,EAAA2H,aAGA,MAAAn0E,KAKA7F,IAAA,SAAAqyE,GACA,GAAAxvC,EAIA,QAAAA,EAAA3lC,KAAAsC,IAAA6yE,IACAxvC,GAIAA,EAAA,GAAAuvC,GAAAC,GAGAn1E,KAAAo1E,WAAAvzE,KAAA8jC,GAKAwvC,EAAA7f,QACA3vB,EAAAyvC,WAAAvzE,KAAA8jC,GAIAA,IAIArkC,MAAA,SAAA4Q,GAUA,OAPAvJ,GACAwsE,EACAhgB,EAHAigB,EAAAp1E,KAAAo1E,WAMA2H,KAEArhF,EAAA,EAAAwC,EAAAk3E,EAAAz5E,OAA4CuC,EAAAxC,EAAOA,IACnDiN,EAAAysE,EAAA15E,GAEAy5E,EAAAxsE,EAAAwsE,SAEA,oBAAAhgB,EAAAggB,EAAAyH,YACA,KAAAznB,EAAAl1D,QAAAiS,IACA6qE,EAAAl7E,KAAA8G,GAES,oBAAAwsD,EAAAggB,EAAA2H,eACT,KAAA3nB,EAAAl1D,QAAAiS,IACA6qE,EAAAl7E,KAAA8G,EAKA,OAAAo0E,IAiDA,IAAAC,GAAA3kF,OAAA2I,QAAA,SAAAgnD,GACA,QAAAzhB,MAEA,MADAA,GAAAz2B,UAAAk4C,EACA,GAAAzhB,GAMAivC,GAAA1lE,UAAAktE,GACA1mE,OAAA9X,MAAAsR,UAAAwG,OACAnZ,MAAAqB,MAAAsR,UAAA3S,MACA0E,KAAArD,MAAAsR,UAAAjO,KACAlG,OAAA,EACA85E,YAAA,MA2CA,IAAAwH,GAAA,WACAj9E,KAAAk9E,UAAA,GAAAhI,GACAl1E,KAAAqf,SAGA49D,GAAAntE,WACAzH,IAAA,SAAArO,EAAA6S,GAUA,OAJArL,GALAw0E,EAAAh2E,KAAAk9E,UACAvH,EAAA,IACAb,KACAntD,KACAw1D,KAGA/c,GAAA,EAEA1kE,EAAA,EAAAwC,EAAAlE,EAAA2B,OAAwCuC,EAAAxC,EAAOA,IAAA,CAC/C,GAAA++C,GAAAzgD,EAAA0B,GACA2jB,KAEA01D,EAAAziE,EAAAmoC,EAAAntC,KAAA+R,EAAAy1D,EAEAqI,KAAA/gE,OAAA24D,EAEA,QAAAntD,GAAA,EAAA9vB,EAAAi9E,EAAAp5E,OAA4C7D,EAAA8vB,EAAOA,IAAA,CACnD,GAAAqtD,GAAAF,EAAAntD,EAEAqtD,aAAAJ,KAIAzU,GAAA,EAGA4V,IAAAlzE,KAA2C85E,WAAA,MAC3CjH,GAAA,IAGAK,EAAAD,EAAAC,EAAAf,GACAU,GAAAV,EAAAU,SAGA,GAAA55D,IAAuBA,QAAA0+B,EAAA1+B,QAAAsD,QACvBsI,GAAA9lB,KAAAka,GAGAqkD,IACA4V,IAAAlzE,KAAyC85E,WAAA,MACzCjH,GAAA,KAGAK,EAAAruD,WACAquD,EAAAL,MAAA,GAAAlyE,QAAAkyE,EAAA,KACAK,EAAAlB,eAEAtzE,EAAAqL,KAAAuwE,MACAp9E,KAAAqf,MAAA7d,IACAuzE,SAAAoI,EACAx1D,cAKA01D,YAAA,SAAA77E,GACA,GAAAi5C,GAAAz6C,KAAAqf,MAAA7d,GACA9B,IACA,KAAA+6C,EACA,SAAAwvB,OAAA,2BAAAzoE,EAGA,QAAA9F,GAAA,EAAAwC,EAAAu8C,EAAA9yB,SAAAhsB,OAAgDuC,EAAAxC,EAAOA,IACvDgE,EAAAmC,KAAA44C,EAAA9yB,SAAAjsB,GAGA,OAAAgE,IAGA49E,SAAA,SAAA97E,GACA,QAAAxB,KAAAqf,MAAA7d,IAGAq7E,SAAA,SAAAr7E,EAAAq2B,GACA,GAAA4iB,GAAAz6C,KAAAqf,MAAA7d,GACA+7E,EAAA,EACA,KAAA9iC,EACA,SAAAwvB,OAAA,2BAAAzoE,EAKA,QAFAuzE,GAAAt6B,EAAAs6B,SAEAr5E,EAAA,EAAAwC,EAAA62E,EAAAp5E,OAA0CuC,EAAAxC,EAAOA,IAAA,CACjD,GAAAu5E,GAAAF,EAAAr5E,EAEAu5E,aAAAJ,KAIA0I,GAAA,IACAA,GAAAtI,EAAA4H,SAAAhlD,IAWA,MARA,MAAA0lD,EAAA5tE,OAAA,KACA4tE,EAAA,IAAAA,GAGA1lD,KAAA49C,cACA8H,GAAAv9E,KAAAw9E,oBAAA3lD,EAAA49C,cAGA8H,GAGAC,oBAAA,SAAA3lD,GACA,GAAA6iC,MACA/7D,IACA,QAAA5D,KAAA88B,GACAA,EAAA57B,eAAAlB,IACA4D,EAAAkD,KAAA9G,EAGA4D,GAAAmiB,MACA,QAAAplB,GAAA,EAAA04E,EAAAz1E,EAAAhD,OAAwCy4E,EAAA14E,EAASA,IAAA,CACjDX,EAAA4D,EAAAjD,EACA,IAAAnD,GAAAs/B,EAAA98B,EACA,UAAAxC,EAAA,CAGA,GAAAkjD,GAAAgiC,mBAAA1iF,EACA,IAAAqQ,EAAA7S,GACA,OAAAqvB,GAAA,EAAA1pB,EAAA3F,EAAAoD,OAA2CuC,EAAA0pB,EAAOA,IAAA,CAClD,GAAA81D,GAAA3iF,EAAA,MAAA0iF,mBAAAllF,EAAAqvB,GACA8yC,GAAA74D,KAAA67E,OAGAjiC,IAAA,IAAAgiC,mBAAAllF,GACAmiE,EAAA74D,KAAA45C,IAIA,WAAAif,EAAA/+D,OACA,GAGA,IAAA++D,EAAAl2D,KAAA,MAGAm5E,iBAAA,SAAAC,GAGA,OAFAljB,GAAAkjB,EAAAtgE,MAAA,KACAm4D,KACA/5E,EAAA,EAAqBA,EAAAg/D,EAAA/+D,OAAkBD,IAAA,CACvC,GAIAnD,GAJAkjD,EAAAif,EAAAh/D,GAAA4hB,MAAA,KACAviB,EAAAm7E,EAAAz6B,EAAA,IACAoiC,EAAA9iF,EAAAY,OACAyP,GAAA,CAEA,KAAAqwC,EAAA9/C,OACApD,EAAA,QAGAslF,EAAA,UAAA9iF,EAAAoC,MAAA0gF,EAAA,KACAzyE,GAAA,EACArQ,IAAAoC,MAAA,EAAA0gF,EAAA,GACApI,EAAA16E,KACA06E,EAAA16E,QAGAxC,EAAAkjD,EAAA,GAAAy6B,EAAAz6B,EAAA,QAEArwC,EACAqqE,EAAA16E,GAAA8G,KAAAtJ,GAEAk9E,EAAA16E,GAAAxC,EAGA,MAAAk9E,IAGAqI,UAAA,SAAAxwE,GACA,GACAywE,GACAriF,EACAwC,EACA8/E,EAJA1I,GAAAt1E,KAAAk9E,WAKAzH,KACAwI,GAAA,CAGA,IADAD,EAAA1wE,EAAArN,QAAA,KACA,KAAA+9E,EAAA,CACA,GAAAJ,GAAAtwE,EAAA+mE,OAAA2J,EAAA,EAAA1wE,EAAA3R,OACA2R,KAAA+mE,OAAA,EAAA2J,GACAvI,EAAAz1E,KAAA29E,iBAAAC,GAiBA,IAdAtwE,EAAA4wE,UAAA5wE,GAIA,MAAAA,EAAAqC,OAAA,KACArC,EAAA,IAAAA,GAGAywE,EAAAzwE,EAAA3R,OACAoiF,EAAA,SAAAzwE,EAAAqC,OAAAouE,EAAA,KACAzwE,IAAA+mE,OAAA,EAAA0J,EAAA,GACAE,GAAA,GAGAviF,EAAA,EAAAwC,EAAAoP,EAAA3R,OAAkCuC,EAAAxC,IAClC45E,EAAAC,EAAAD,EAAAhoE,EAAAqC,OAAAjU,IACA45E,EAAA35E,QAFyCD,KASzC,GAAAyiF,KACA,KAAAziF,EAAA,EAAAwC,EAAAo3E,EAAA35E,OAAoCuC,EAAAxC,EAAOA,IAC3C45E,EAAA55E,GAAAisB,UACAw2D,EAAAt8E,KAAAyzE,EAAA55E,GAIA45E,GAAAD,EAAA8I,EAEA,IAAAx4C,GAAAw4C,EAAA,EAEA,OAAAx4C,MAAAhe,UAGAs2D,GAAA,UAAAt4C,EAAAgwC,MAAApoD,OAAApwB,MAAA,MACAmQ,GAAA,KAEAooE,EAAA/vC,EAAAr4B,EAAAmoE,IANA,SAWAwH,EAAAntE,UAAArO,MAEAw7E,EAAAjO,QAAA,OAEA,IAAAgI,GAAAiG,EAAAntE,UAAA0tE,oBAGAlH,KAgGArX,EAAAxmE,OA8CA2lF,EAAA,OAEAC,EAAA,WACA,QAAAA,GAAAx1D,GACA,GAAA/uB,GAAA+uB,EAAA/uB,KACAwkF,EAAAz1D,EAAAy1D,QACAlC,GAAAC,eAAAr8E,KAAAq+E,GAEAvkF,GAEA,MAAAA,EAAA6V,OAAA,KACA7V,EAAA,IAAAA,GAGAkG,KAAAlG,OAAAuD,QAAA,UACA2C,KAAAu+E,OAAA,GAAA96E,QAAA,MAAAzD,KAAAlG,OAEAkG,KAAAlG,KAAA,KAEAkG,KAAAs+E,UAEA,IAAAE,GAAAz4E,SAAAC,cAAA,OACAhG,MAAAw2E,KAAAgI,KAAA73E,aAAA,QAoDA,MAjDA03E,GAAAvuE,UAAAlV,MAAA,WACA,GAAA6jF,GAAAz+E,IAEAA,MAAAk7B,SAAA,SAAAxuB,GACA,GAAAgyE,GAAAR,UAAA7D,SAAAe,SAAAf,SAAAvsD,OACA2wD,GAAA3kF,OACA4kF,IAAArhF,QAAAohF,EAAAF,OAAA,KAEAE,EAAAH,SAAAI,EAAAhyE,KAAAi5B,MAAA00C,SAAA3yD,OAEAsI,OAAAtoB,iBAAA,WAAA1H,KAAAk7B,UACAl7B,KAAAk7B,YAGAmjD,EAAAvuE,UAAAqtB,KAAA,WACAnN,OAAApoB,oBAAA,WAAA5H,KAAAk7B,WAGAmjD,EAAAvuE,UAAAsnC,GAAA,SAAA9pC,EAAAjQ,EAAA8uB,GACA,GAAAuyD,GAAA1+E,KAAA87E,WAAAxuE,EAAA6e,EACA9uB,GACAzD,QAAA+kF,gBAA+B,GAAAD,IAG/B9kF,QAAA+kF,cACAC,KACA94C,EAAA9V,OAAA6uD,YACA13C,EAAAnX,OAAA8uD,cAES,GAAAzE,SAAAwB,MAETjiF,QAAAmlF,aAA4B,GAAAL,GAE5B,IAAAM,GAAA1xE,EAAAhM,MAAA88E,GACA12D,EAAAs3D,KAAA,EACA1xE,GAAAoxE,EAEArhF,QAAA+gF,EAAA,IAEA/gF,QAAA2C,KAAAu+E,OAAA,IACAv+E,KAAAs+E,SAAAhxE,EAAA,KAAAoa,IAGA22D,EAAAvuE,UAAAgsE,WAAA,SAAAxuE,EAAA6e,GACA,YAAA7e,EAAAqC,OAAA,GAEA3P,KAAAlG,KAAAkG,KAAAlG,KAAA,IAAAwT,EAAAjQ,QAAA,UAAAiQ,EAAAipE,EAAAv2E,KAAAw2E,MAAA6D,SAAAe,SAAA9tE,EAAA6e,IAGAkyD,KAGAY,EAAA,WACA,QAAAA,GAAAp2D,GACA,GAAAq2D,GAAAr2D,EAAAq2D,SACAZ,EAAAz1D,EAAAy1D,QACAlC,GAAAC,eAAAr8E,KAAAi/E,GAEAj/E,KAAAk/E,WACAl/E,KAAAs+E,WA8CA,MA3CAW,GAAAnvE,UAAAlV,MAAA,WACA,GAAA0f,GAAAta,IACAA,MAAAk7B,SAAA,WACA,GAAA5tB,GAAA+sE,SAAA3yD,KACA5Z,EAAAR,EAAAjQ,QAAA,UAEA,OAAAyQ,EAAA6B,OAAA,KACA7B,EAAA,IAAAA,EAEA,IAAAqxE,GAAA7kE,EAAAwhE,WAAAhuE,EACA,IAAAqxE,IAAA7xE,EAEA,WADA+sE,UAAAh9E,QAAA8hF,EAMA,IAAAr5E,GAAAu0E,SAAAvsD,QAAAxgB,EAAArN,QAAA,YAAAo6E,SAAAvsD,OAAA3wB,MAAA,GAAAk9E,SAAAvsD,MACAxT,GAAAgkE,SAAAJ,UAAA5wE,EAAAjQ,QAAA,WAAAyI,KAEAkqB,OAAAtoB,iBAAA,aAAA1H,KAAAk7B,UACAl7B,KAAAk7B,YAGA+jD,EAAAnvE,UAAAqtB,KAAA,WACAnN,OAAApoB,oBAAA,aAAA5H,KAAAk7B,WAGA+jD,EAAAnvE,UAAAsnC,GAAA,SAAA9pC,EAAAjQ,EAAA8uB,GACA7e,EAAAtN,KAAA87E,WAAAxuE,EAAA6e,GACA9uB,EACAg9E,SAAAh9E,QAAAiQ,GAEA+sE,SAAA3yD,KAAApa,GAIA2xE,EAAAnvE,UAAAgsE,WAAA,SAAAxuE,EAAA6e,GACA,GAAAizD,GAAA,MAAA9xE,EAAAqC,OAAA,GACA0I,EAAA,KAAArY,KAAAk/E,SAAA,OACA,OAAAE,GAAA/mE,EAAA/K,EAAA+K,EAAAk+D,EAAA8D,SAAA3yD,KAAArqB,QAAA,WAAAiQ,EAAA6e,IAGA8yD,KAGAI,EAAA,WACA,QAAAA,GAAAx2D,GACA,GAAAy1D,GAAAz1D,EAAAy1D,QACAlC,GAAAC,eAAAr8E,KAAAq/E,GAEAr/E,KAAAs+E,WACAt+E,KAAAs/E,YAAA,IAoBA,MAjBAD,GAAAvvE,UAAAlV,MAAA,WACAoF,KAAAs+E,SAAA,MAGAe,EAAAvvE,UAAAqtB,KAAA,aAIAkiD,EAAAvvE,UAAAsnC,GAAA,SAAA9pC,EAAAjQ,EAAA8uB,GACA7e,EAAAtN,KAAAs/E,YAAAt/E,KAAA87E,WAAAxuE,EAAA6e,GACAnsB,KAAAs+E,SAAAhxE,IAGA+xE,EAAAvvE,UAAAgsE,WAAA,SAAAxuE,EAAA6e,GACA,YAAA7e,EAAAqC,OAAA,GAAArC,EAAAipE,EAAAv2E,KAAAs/E,YAAAhyE,EAAA6e,IAGAkzD,KA+TAE,EAAA,WACA,QAAAA,GAAA/mF,EAAA2B,EAAAuE,GACA09E,EAAAC,eAAAr8E,KAAAu/E,GAEAv/E,KAAAxH,SACAwH,KAAA7F,KACA6F,KAAAtB,OACAsB,KAAA1F,KAAA,KACA0F,KAAAu3E,SAAA,EACAv3E,KAAAyK,MAAA,EAsTA,MA/SA80E,GAAAzvE,UAAA0vE,MAAA,WACA,IAAAx/E,KAAAu3E,QAAA,CACAv3E,KAAAu3E,SAAA,CAGA,IAAAkI,IAAAz/E,KAAAtB,KAAA4O,MAAA,MAAAtN,KAAA7F,GAAAmT,IACAmyE,IACAz/E,KAAAxH,OAAA6E,QAAA2C,KAAAtB,KAAA4O,MAAA,OAWAiyE,EAAAzvE,UAAAtV,SAAA,SAAA8S,GACAtN,KAAAu3E,UACAv3E,KAAAu3E,SAAA,EACA,gBAAAjqE,GACAA,EAAAypE,EAAAzpE,EAAAtN,KAAA7F,GAAA09B,OAAA73B,KAAA7F,GAAA2L,QAEAwH,EAAAuqB,OAAAvqB,EAAAuqB,QAAA73B,KAAA7F,GAAA09B,OACAvqB,EAAAxH,MAAAwH,EAAAxH,OAAA9F,KAAA7F,GAAA2L,OAEA9F,KAAAxH,OAAA6E,QAAAiQ,KAmCAiyE,EAAAzvE,UAAAlV,MAAA,SAAAwF,GAMA,IALA,GAAAlG,GAAA8F,KAGA0/E,KACA/8B,EAAA3iD,KAAAxH,OAAAshF,UACAn3B,GACA+8B,EAAA/vD,QAAAgzB,GACAA,IAAA21B,SAEA,IAAAqH,GAAAD,EAAAviF,QAAAqxB,UAGAmpD,EAAA33E,KAAA23E,cAAAt5E,EAAA2B,KAAA7F,GAAAuqB,SAAAjjB,IAAA,SAAAH,GACA,MAAAA,GAAAya,UAIArgB,EAAAjD,OACAmnF,EAAAnnF,MACA,KAAAiD,EAAA,EAAiBA,EAAAikF,EAAAhkF,QACjBs7E,EAAA0I,EAAAjkF,GAAAi8E,EAAAj8E,GAAAxB,GADoDwB,KAKpDA,EAAA,IACAkkF,EAAAD,EAAAxiF,MAAA,EAAAzB,GACAgkF,EAAAC,EAAAxiF,MAAAzB,GAAA8yB,UACAmpD,IAAAx6E,MAAAzB,IAIAxB,EAAA2lF,SAAAH,EAAAvI,EAAA,WACAj9E,EAAA2lF,SAAAlI,EAAAL,EAAA,WACAp9E,EAAA2lF,SAAAH,EAAAlI,EAAA,WAaA,GATAt9E,EAAA1B,OAAAsnF,uBAAA5lF,GAGA0lF,KAAAlhE,QAAA,SAAAikC,GACA,MAAA+0B,GAAA/0B,EAAAzoD,KAKAwlF,EAAA/jF,OAAA,CACA,GAAAokF,GAAAL,IAAA/jF,OAAA,GACAyc,EAAAwnE,IAAAjkF,OAAA,CACA83B,GAAAssD,EAAA7lF,EAAAke,EAAAhY,OAEAA,YAgBAm/E,EAAAzvE,UAAA+vE,SAAA,SAAAtqE,EAAAvX,EAAAoC,GAGA,QAAAwtD,GAAA9pD,GACAA,GAAAyR,EAAA5Z,OACAyE,IAEApC,EAAAuX,EAAAzR,GAAA5J,EAAA,WACA0zD,EAAA9pD,EAAA,KAPA,GAAA5J,GAAA8F,IACA4tD,GAAA,IA6BA2xB,EAAAzvE,UAAAqK,SAAA,SAAAkO,EAAA7oB,EAAAY,GACA,GAAAyoB,GAAA1qB,UAAAxC,QAAA,GAAAlD,SAAA0F,UAAA,MAAyEA,UAAA,GAEzE6hF,EAAAn3D,EAAAwuD,cACAA,EAAA5+E,SAAAunF,GAAA,EAAAA,EACAC,EAAAp3D,EAAAgwD,aACAA,EAAApgF,SAAAwnF,GAAA,EAAAA,EACAnH,EAAAjwD,EAAAiwD,YACAj6C,EAAAhW,EAAAgW,QAEA3kC,EAAA8F,KACAkgF,GAAA,EAGAV,EAAA,WACA3gD,OACA3kC,EAAAslF,SAIAW,EAAA,SAAAC,GAEA,GADAvH,EAAAv+E,IAAAklF,IACAY,IAAAlmF,EAAA1B,OAAA6nF,UAEA,KADA9tD,GAAA,sCACA6tD,YAAAnW,OAAAmW,EAAA,GAAAnW,OAAAmW,IAMAE,EAAA,SAAAF,GACA,IACAD,EAAAC,GACS,MAAA1zE,GACT3M,WAAA,WACA,KAAA2M,IACW,KAKXpS,EAAA,WACA,MAAA4lF,OACA3tD,GAAA,kDAGA2tD,GAAA,EACAhmF,EAAAq9E,aACA14C,aAGAz+B,UAGAmgF,EAAA,SAAA7xE,GACA,iBAAAA,GACAA,EAAApU,IAAAklF,IACS9I,EAAAhoE,GACTA,EAAAioE,KAAA,SAAA6J,GACAA,EAAAlmF,IAAAklF,KACWc,GACFj4D,EAAA1sB,QACTrB,KAIAmmF,EAAA,SAAAn3E,GACA,GAAAoF,GAAAjW,MACA,KACAiW,EAAAoqE,EAAAxvE,GACS,MAAA82E,GACT,MAAAD,GAAAC,GAEA1J,EAAAhoE,GACAA,EAAAioE,KAAAr8E,EAAAgmF,GAEAhmF,KAOAomF,GACAvmF,GAAAD,EAAAC,GACAuE,KAAAxE,EAAAwE,KACA8gF,QACAllF,KAAAw+E,EAAA2H,EAAAnmF,EACAE,SAAA,WACAN,EAAAM,SAAA4D,MAAAlE,EAAAiE,aAKAuQ,EAAAjW,MACA,KACAiW,EAAA2Z,EAAAxwB,KAAA2H,EAAAkhF,GACO,MAAAN,GACP,MAAAD,GAAAC,GAGA/I,EAEAkJ,EAAA7xE,GACOgoE,EAAAhoE,GAEPoqE,EACApqE,EAAAioE,KAAA8J,EAAAH,GAEA5xE,EAAAioE,KAAAr8E,EAAAgmF,GAEOxH,GAAAI,EAAAxqE,GAEP+xE,EAAA/xE,GACO2Z,EAAA1sB,QACPrB,KAaAilF,EAAAzvE,UAAA2nE,UAAA,SAAAhyE,EAAAjG,EAAAY,EAAAyM,GACA,GAAA4xE,GAAAz+E,IAEAxB,OAAA4M,QAAA3F,GACAzF,KAAA6/E,SAAAp6E,EAAA,SAAA4iB,EAAA7qB,EAAAlD,GACAmkF,EAAAlH,SACAkH,EAAAtkE,SAAAkO,EAAA7oB,EAAAlF,EAAAuS,IAESzM,GAETJ,KAAAma,SAAA1U,EAAAjG,EAAAY,EAAAyM,IAIA0yE,KAWAoB,EAAA,0BASAC,GAAA,QAAAA,IAAAtzE,EAAA9U,GACA,GAAAimF,GAAAz+E,IAEAo8E,GAAAC,eAAAr8E,KAAA4gF,GAEA,IAAAl8D,GAAAlsB,EAAAqoF,YAAA/C,UAAAxwE,EACAoX,QAEAhG,QAAA7mB,KAAA6sB,EAAA,SAAApjB,GACA,OAAAvG,KAAAuG,GAAAya,QACA4kE,EAAAtkF,KAAAtB,KACA0jF,EAAA1jF,GAAAuG,EAAAya,QAAAhhB,MAKAiF,KAAA8F,MAAA4e,EAAA+wD,YACAz1E,KAAA63B,UAAA3J,OAAAr2B,KAAA6sB,EAAA,SAAA9hB,EAAA0F,GACA,GAAAA,EAAAuvB,OACA,OAAA98B,KAAAuN,GAAAuvB,OACAj1B,EAAA7H,GAAAuN,EAAAuvB,OAAA98B,EAGA,OAAA6H,SAIA5C,KAAAsN,OACAtN,KAAAxH,SAEAwH,KAAA0kB,WAAAlsB,EAAAsoF,iBAEAzoF,OAAA05B,OAAA/xB,OA8IAi8E,GAAA,MACAj5E,GAAA,yBACA24E,GAAA,QAuKAoF,IACAC,WAAA3B,EACA33D,KAAAu3D,EACAgC,MAAA5C,GAIAtvE,GAAAtW,OAQAyoF,GAAA,WACA,QAAAA,KACA,GAAAzC,GAAAz+E,KAEA6oB,EAAA1qB,UAAAxC,QAAA,GAAAlD,SAAA0F,UAAA,MAAyEA,UAAA,GAEzEgjF,EAAAt4D,EAAAq2D,SACAA,EAAAzmF,SAAA0oF,GAAA,EAAAA,EACAC,EAAAv4D,cACAm4D,EAAAvoF,SAAA2oF,GAAA,EAAAA,EACAC,EAAAx4D,EAAAjvB,QACAA,EAAAnB,SAAA4oF,GAAA,EAAAA,EACAC,EAAAz4D,EAAAhvB,mBACAA,EAAApB,SAAA6oF,GAAA,EAAAA,EACAC,EAAA14D,EAAA24D,iBACAA,EAAA/oF,SAAA8oF,GAAA,EAAAA,EACAE,EAAA54D,EAAA64D,wBACAA,EAAAjpF,SAAAgpF,GAAA,EAAAA,EACAE,EAAA94D,EAAA/uB,KACAA,EAAArB,SAAAkpF,EAAA,KAAAA,EACAC,EAAA/4D,EAAAlvB,gBACAA,EAAAlB,SAAAmpF,EAAA,gBAAAA,CAIA,IAHAxF,EAAAC,eAAAr8E,KAAAkhF,IAGAA,EAAAxxD,UACA,SAAAu6C,OAAA,wEAIAjqE,MAAA6hF,IAAA,KACA7hF,KAAAs5E,aAGAt5E,KAAA6gF,YAAA,GAAA5D,GACAj9E,KAAA8hF,iBAAA,GAAA7E,GAGAj9E,KAAA+hF,UAAA,EACA/hF,KAAAgiF,SAAA,KACAhiF,KAAAiiF,iBACAjiF,KAAA+5E,mBAAA,KACA/5E,KAAAkiF,oBAAA,KACAliF,KAAA8gF,iBAAA,KACA9gF,KAAAmiF,kBAAA,KACAniF,KAAAoiF,oBACApiF,KAAAqiF,mBAGAriF,KAAAu4E,WAAA,EACAv4E,KAAAw4E,kBAAAgJ,EAGAxhF,KAAAsiF,MAAAxoF,EACAkG,KAAAuiF,UAAAvB,EACAhhF,KAAAwiF,UAAAtD,CAGA,IAAAuD,GAAA,mBAAAzyD,gBAAAp2B,SAAAo2B,OAAAp2B,QAAAmlF,SACA/+E,MAAA0iF,SAAA9oF,GAAA6oF,EACAziF,KAAA2iF,iBAAA/oF,IAAA6oF,CAGA,IAAA1yD,GAAAhhB,GAAAggB,KAAAgB,SACA/vB,MAAAyS,MAAAsd,GAAA/vB,KAAAuiF,UAAA,WAAAviF,KAAA0iF,SAAA,cAEA,IAAAE,GAAA7B,GAAA/gF,KAAAyS,KACAzS,MAAApG,QAAA,GAAAgpF,IACA9oF,OACAolF,SAAAl/E,KAAAwiF,UACAlE,SAAA,SAAAhxE,EAAAq4B,EAAAj8B,GACA+0E,EAAAoE,OAAAv1E,EAAAq4B,EAAAj8B,MAKA1J,KAAA8iF,oBAAAjpF,EACAmG,KAAA+7E,iBAAApiF,EACAqG,KAAAqgF,UAAAqB,EA0eA,MAvdAR,GAAApxE,UAAArO,IAAA,SAAAshF,GACA,OAAAtoC,KAAAsoC,GACA/iF,KAAAuH,GAAAkzC,EAAAsoC,EAAAtoC,GAEA,OAAAz6C,OAeAkhF,EAAApxE,UAAAvI,GAAA,SAAAy7E,EAAAjnE,GAMA,MALA,MAAAinE,EACAhjF,KAAAijF,UAAAlnE,GAEA/b,KAAAkjF,UAAAF,EAAAjnE,MAEA/b,MASAkhF,EAAApxE,UAAAtV,SAAA,SAAAiH,GACA,OAAA6L,KAAA7L,GACAzB,KAAAmjF,aAAA71E,EAAA7L,EAAA6L,GAEA,OAAAtN,OASAkhF,EAAApxE,UAAAolB,MAAA,SAAAzzB,GACA,OAAA6L,KAAA7L,GACAzB,KAAAojF,UAAA91E,EAAA7L,EAAA6L,GAEA,OAAAtN,OASAkhF,EAAApxE,UAAA7V,WAAA,SAAA+D,GAEA,MADAgC,MAAAoiF,iBAAAvgF,KAAA7D,GACAgC,MASAkhF,EAAApxE,UAAAuzE,UAAA,SAAArlF,GAEA,MADAgC,MAAAqiF,gBAAAxgF,KAAA7D,GACAgC,MAcAkhF,EAAApxE,UAAAsnC,GAAA,SAAA9pC,GACA,GAAAjQ,IAAA,EACA8uB,GAAA,CACApd,IAAAggB,KAAAnwB,SAAA0O,KACAjQ,EAAAiQ,EAAAjQ,QACA8uB,EAAA7e,EAAA6e,QAEA7e,EAAAtN,KAAAs7E,eAAAhuE,GACAA,GACAtN,KAAApG,QAAAw9C,GAAA9pC,EAAAjQ,EAAA8uB,IAUA+0D,EAAApxE,UAAAzS,QAAA,SAAAiQ,GACA,gBAAAA,KACAA,GAAgBA,SAEhBA,EAAAjQ,SAAA,EACA2C,KAAAo3C,GAAA9pC,IAWA4zE,EAAApxE,UAAAlV,MAAA,SAAA0oF,EAAAz4E,EAAAzK,GAEA,GAAAJ,KAAA+hF,SAEA,WADAxvD,GAAA,mBAKA,IAFAvyB,KAAA+hF,UAAA,EACA/hF,KAAAgiF,SAAA5hF,GACAJ,KAAA6hF,IAAA,CAEA,IAAAyB,IAAAz4E,EACA,SAAAo/D,OAAA,+DAGA,IAAAqZ,YAAAv0E,IACA,SAAAk7D,OAAA,8DAEAjqE,MAAAujF,cAAA14E,CACA,IAAAsnD,GAAAnyD,KAAAwjF,gBAAA,kBAAAF,KAAAv0E,GAAAtQ,OAAA6kF,EAEAnxB,GAAAtlD,QAAArL,KAAA2wD,EAAAtlD,QAAArL,MAAA,YAKA,GAAAxB,KAAA2iF,iBAAA,CACA,GAAAc,GAAAzzD,OAAAqqD,SACAqI,EAAA,GAAArE,IAAyCvkF,KAAAkG,KAAAsiF,QACzCh1E,EAAAo1E,EAAA5oF,KAAA2pF,EAAArI,SAAA/9E,QAAAqlF,EAAAnE,OAAA,IAAAkF,EAAArI,QACA,IAAA9tE,GAAA,MAAAA,EAEA,WADAm2E,GAAAvW,QAAAwV,EAAA5oF,MAAA,QAAAkG,KAAApG,QAAAkiF,WAAAxuE,GAAAm2E,EAAA31D,QAKA9tB,KAAApG,QAAAgB,SAOAsmF,EAAApxE,UAAAqtB,KAAA,WACAn9B,KAAApG,QAAAujC,OACAn9B,KAAA+hF,UAAA,GAeAb,EAAApxE,UAAAozE,UAAA,SAAA51E,EAAAyO,EAAAg5D,GAcA,GAbAmH,EAAA5uE,EAAAyO,GACAA,EAAAzO,OACAyO,EAAAk4D,UAAAc,EAAA7mD,OAAA,SAAA5gB,EAAA2nE,GACA,MAAA3nE,GAAA2nE,EAAA3nE,MACO,IAAAA,GAAAjQ,QAAA,UACP03E,EAAAlzE,MACAyL,OACAyO,YAEA/b,KAAA6gF,YAAAx4E,IAAA0sE,GACAqI,GAAArhE,EAAAva,OAGAua,EAAAmqB,UACA,OAAAw9C,KAAA3nE,GAAAmqB,UAEAlmC,KAAAkjF,UAAAQ,EAAA3nE,EAAAmqB,UAAAw9C,GAGA3O,EAAA53E,UAWA+jF,EAAApxE,UAAAmzE,UAAA,SAAAlnE,GACAmgE,EAAA,IAAAngE,GACA/b,KAAA8gF,mBAAgC/kE,aAUhCmlE,EAAApxE,UAAAqzE,aAAA,SAAA71E,EAAAq2E,GACA,MAAAr2E,EACAtN,KAAAmiF,kBAAAwB,EAEA3jF,KAAA4jF,UAAAt2E,EAAAq2E,EAAA3jF,KAAA3C,UAWA6jF,EAAApxE,UAAAszE,UAAA,SAAA91E,EAAAu2E,GACA7jF,KAAA4jF,UAAAt2E,EAAAu2E,EAAA7jF,KAAA6iF,SAWA3B,EAAApxE,UAAA8zE,UAAA,SAAAt2E,EAAAw2E,EAAAC,GACA,GAAAC,GAAAhkF,IAEAA,MAAA8hF,iBAAAz5E,MACAiF,OACAyO,QAAA,SAAAza,EAAAwE,GACA,GAAAm+E,GAAAlN,EAAA+M,EAAAxiF,EAAAu2B,OAAA/xB,EACAi+E,GAAAlsF,KAAAmsF,EAAAC,QAYA/C,EAAApxE,UAAAo0E,YAAA,SAAA52E,GACA,GAAAoX,GAAA1kB,KAAA8hF,iBAAAhE,UAAAxwE,EACA,OAAAoX,IACAA,EAAA,GAAA3I,QAAA2I,EAAA,GAAAA,EAAA+wD,cACA,GACOz1E,KAAAmiF,oBACPz9D,EAAA1kB,KAAA6gF,YAAA/C,UAAAxwE,IACAoX,IACA1kB,KAAA3C,QAAA2C,KAAAmiF,oBACA,GAJO,QAkBPjB,EAAApxE,UAAA+yE,OAAA,SAAAv1E,EAAAq4B,EAAAj8B,GACA,GAAAy6E,GAAAnkF,IAEA,KAAAA,KAAAkkF,YAAA52E,GAAA,CAIA,GAAA82E,GAAApkF,KAAAiiF,cACAoC,EAAArkF,KAAA+5E,kBAEA,IAAAsK,EAAA,CACA,GAAAA,EAAAlqF,GAAAmT,SAEA,MACS,IAAA82E,EAAA92E,SAMT,MAFA+2E,GAAA9M,SAAA,OACAv3E,KAAA+5E,mBAAA/5E,KAAAskF,gBAIAD,GAAA9M,SAAA,EAKA,GAAA98B,GAAA,GAAAmmC,IAAAtzE,EAAAtN,MACA9F,EAAA,GAAAqlF,GAAAv/E,KAAAy6C,EAAA2pC,EAKApkF,MAAAskF,gBAAAD,EACArkF,KAAA+5E,mBAAA7/E,EAEA8F,KAAA6hF,MACA,WAEA,GAAArpF,GAAA2rF,CACAA,GAAAtC,IAAA,GAAAsC,GAAAX,iBACA1+E,GAAAq/E,EAAAZ,cACArwD,QAAA,WACAlzB,KAAAm3C,QAAA3+C,GAEA2uB,OACAgvB,OAAAsE,OAOA,IAAA8pC,GAAAvkF,KAAAoiF,iBACAoC,EAAA,WACAtqF,EAAAU,MAAA,WACAupF,EAAAM,gBAAAhqC,EAAA9U,EAAAj8B,KAIA66E,GAAA5oF,OACAzB,EAAA2lF,SAAA0E,EAAA,SAAAl8D,EAAA7qB,EAAAlD,GACAJ,IAAAiqF,EAAApK,oBACA7/E,EAAAigB,SAAAkO,EAAA,KAAA/tB,GACA+8E,eAAA,KAGSmN,GAETA,KAGAxkF,KAAAu4E,WAAAv4E,KAAAgiF,UACAhiF,KAAAgiF,SAAAnqF,KAAA,MAOAmI,KAAAu4E,WAAA,IAWA2I,EAAApxE,UAAAgwE,uBAAA,SAAA5lF,GAEA,GAAAugD,GAAAz6C,KAAAiiF,cAAA/nF,EAAAC,EAEA6F,MAAA6hF,IAAA1rC,SAAAsE,IACAz6C,KAAA6hF,IAAA1rC,OAAAsE,EACAz6C,KAAAs5E,UAAA56D,QAAA,SAAA/V,GACAA,EAAAwtC,OAAAsE,KAIAz6C,KAAAqiF,gBAAA1mF,QACAqE,KAAAqiF,gBAAA3jE,QAAA,SAAA2J,GACA,MAAAA,GAAAxwB,KAAA,MACAsC,GAAAD,EAAAC,GACAuE,KAAAxE,EAAAwE,SAIAsB,KAAA+5E,mBAAAtvE,MAAA,GAWAy2E,EAAApxE,UAAA20E,gBAAA,SAAAhqC,EAAA9U,EAAAj8B,GAIA,GAAAk1E,GAAAj5C,KAAAi5C,GACAA,IAAA5+E,KAAA8iF,oBACA/zE,GAAAyH,SAAA,WACAwZ,OAAA00D,SAAA9F,EAAA94C,EAAA84C,EAAAz3C,KAEOz9B,GACPqF,GAAAyH,SAAA,WACA,GAAA1R,GAAAiB,SAAAoT,eAAAzP,EAAAvM,MAAA,GACA2H,IACAkrB,OAAA00D,SAAA10D,OAAA20D,QAAA7/E,EAAA8/E,cAcA1D,EAAApxE,UAAAwrE,eAAA,SAAAhuE,GACA,GAAA2mE,GAAA,EACA,IAAA3mE,GAAA,gBAAAA,IACA,GAAAA,EAAA9L,KAAA,CACA,GAAA/C,GAAAsQ,GAAAggB,KAAAtwB,OACAomF,EAAA7kF,KAAA+5E,oBAAA/5E,KAAA+5E,mBAAA5/E,GAAA09B,OACAitD,EAAAx3E,EAAAuqB,WACAA,EAAAgtD,EAAApmF,OAAuDomF,GAAAC,IACvDx3E,GAAAxH,QACA+xB,EAAA49C,YAAAnoE,EAAAxH,OAEAmuE,EAAAj0E,KAAA6gF,YAAAhE,SAAAvvE,EAAA9L,KAAAq2B,OACS,IAAAvqB,SACT2mE,EAAA3mE,OACAA,EAAAxH,OAAA,CACA,GAAAA,GAAA9F,KAAA6gF,YAAArD,oBAAAlwE,EAAAxH,MAEAmuE,IADAA,EAAAh0E,QAAA,QACA,IAAA6F,EAAA3I,MAAA,GAEA2I,OAKAmuE,GAAA3mE,IAAA,KAEA,OAAAy3E,WAAA9Q,IAGAiN,IA4CA,OA3BAA,IAAAxxD,WAAA,EAOAwxD,GAAAtxD,QAAA,SAAAo1D,GAEA,MAAA9D,IAAAxxD,cACA6C,GAAA,uBAGAxjB,GAAAi2E,EACA7L,EAAApqE,IACA0qE,EAAA1qE,IACAkrE,EAAAlrE,IACAunE,EAAAvnE,YACAmyE,GAAAxxD,WAAA,KAKA,mBAAAM,gBAAAjhB,KACAihB,OAAAjhB,IAAArV,IAAAwnF,IAGAA,MlDunzBM,SAASxpF,EAAQD,EAASH;;;;;CmDxs4BhC,SAAAuD,EAAA4vB,GACA/yB,EAAAD,QAAAgzB,KAGCzqB,KAAA,WAAoB,YAoDrB,SAAAilF,GAAA/kF,GACA,MAAAA,GAAAguB,OAAA,SAAAtrB,EAAA1K,GAeA,MAdAG,QAAAsG,KAAAzG,GAAAwmB,QAAA,SAAA3jB,GACA,GAAAmqF,GAAAtiF,EAAA7H,EACAmqF,GAGA1mF,MAAA4M,QAAA85E,GACAA,EAAArjF,KAAA3J,EAAA6C,IAEA6H,EAAA7H,IAAA6H,EAAA7H,GAAA7C,EAAA6C,IAGA6H,EAAA7H,GAAA7C,EAAA6C,KAGA6H,OAWA,QAAAuiF,GAAAjtF,GACA,GAAAsG,MAAA4M,QAAAlT,GACA,MAAAA,GAAAuJ,IAAA0jF,EACK,IAAAjtF,GAAA,+BAAAA,GAAA,YAAAkkF,YAAAlkF,IAAA,CAGL,OAFAygB,MACAha,EAAAtG,OAAAsG,KAAAzG,GACAwD,EAAA,EAAAwC,EAAAS,EAAAhD,OAAsCuC,EAAAxC,EAAOA,IAAA,CAC7C,GAAAX,GAAA4D,EAAAjD,EACAid,GAAA5d,GAAAoqF,EAAAjtF,EAAA6C,IAEA,MAAA4d,GAEA,MAAAzgB,GAUA,QAAAktF,GAAAxpF,GACA,IAAA6a,EAAA,CACA,GAAAqsB,GAAAlnC,EAAAwvB,OAAA,oBAAAnuB,GACA,MAAAA,IAEAwZ,GAAA7a,EAAAyU,UAAA,GAAAqB,YACAoxB,IAEA,MAAArsB,GAIA,QAAA4uE,GAAAzpF,GAIA,MAHAoP,KACAA,EAAApP,EAAAT,MAAAE,OAAAE,IAAAmW,aAEA1G,EAwBA,QAAAs6E,GAAAv2E,GAUA,QAAAw2E,KACA,GAAA14E,GAAA7M,KAAAyR,SACA1X,EAAA8S,EAAA9S,MACA4tC,EAAA96B,EAAA86B,IASA,IANA5tC,EACAiG,KAAAq3C,OAAAt9C,EACO8S,EAAAxG,QAAAwG,EAAAxG,OAAAgxC,SACPr3C,KAAAq3C,OAAAxqC,EAAAxG,OAAAgxC,QAGA1P,EAAA,CACA3nC,KAAAq3C,QACA1rB,QAAA4G,KAAA,2FAEA,IAAAoT,GAAAgC,EAAAhC,MACAiC,EAAAD,EAAAC,QACA/0B,EAAA80B,EAAA90B,OAQA,IALA8yB,IAAAiC,IACAjc,QAAA4G,KAAA,mFACAqV,EAAAjC,GAGAiC,EAAA,CACA/6B,EAAAka,SAAAla,EAAAka,YACA,QAAAhsB,KAAA6sC,GACA49C,EAAAxlF,KAAAjF,EAAA6sC,EAAA7sC,IAIA,GAAA8X,EAAA,CACAhG,EAAAoa,QAAApa,EAAAoa,WACA,QAAAw+D,KAAA5yE,GACAhG,EAAAoa,QAAAw+D,GAAAC,EAAA7yE,EAAA4yE,GAAAzlF,KAAAq3C,UAMA,QAAA9qC,KACA,SAAA09D,OAAA,yCAGA,QAAAub,GAAA5pF,EAAAb,EAAAuR,GACAjU,OAAAC,eAAAsD,EAAAb,GACAiE,YAAA,EACAE,cAAA,EACAoD,IAAAyjB,EAAAnqB,EAAAy7C,OAAA/qC,GACAxR,IAAAyR,IAIA,QAAAwZ,GAAAhsB,EAAAuS,GACA,GAAA3U,GAAAoC,EAAA4rF,cAEA,IAAAr5E,EAAA3U,GACA,MAAA2U,GAAA3U,EAEA,IAAAiE,GAAA7B,EAAA6rF,IACAnvE,EAAA2uE,EAAAxpF,GACAoP,EAAAq6E,EAAAzpF,GACAsa,EAAA,GAAAO,GAAA7a,EAAA,SAAA+pC,GACA,MAAAr5B,GAAAq5B,IACO,MAAS5uB,MAAA,IAChB8uE,EAAA,WAOA,MANA3vE,GAAAY,OACAZ,EAAA+P,WAEAjb,EAAAjG,QACAmR,EAAAzJ,SAEAyJ,EAAA3d,MAGA,OADA+T,GAAA3U,GAAAkuF,EACAA,EAGA,QAAAH,GAAA7/E,EAAA9L,GACA,kBACA,OAAA+rF,GAAA3nF,UAAAxC,OAAA4D,EAAAf,MAAAsnF,GAAAC,EAAA,EAAwED,EAAAC,EAAcA,IACtFxmF,EAAAwmF,GAAA5nF,UAAA4nF,EAGA,OAAAlgF,GAAAhO,KAAAuG,MAAAyH,GAAA7F,KAAAjG,GAAAqiB,OAAA7c,KA9FA,GAAAwQ,GAAAhB,EAAAe,UAAAC,KACAhB,GAAAe,UAAAC,MAAA,WACA,GAAAlD,GAAA1O,UAAAxC,QAAA,GAAAlD,SAAA0F,UAAA,MAA4EA,UAAA,EAE5E0O,GAAA6O,KAAA7O,EAAA6O,MAAA6pE,GAAAnpE,OAAAvP,EAAA6O,MAAA6pE,EACAx1E,EAAAlY,KAAAmI,KAAA6M,GA8FA,IAAA8gE,GAAA5+D,EAAAvV,OAAAu5B,sBAAAhM,QACAhY,GAAAvV,OAAAu5B,sBAAA4U,KAAA,SAAAt5B,EAAAC,GACA,MAAAD,GACAC,GAEAs5B,QAAA+lC,EAAAt/D,EAAAu5B,QAAAt5B,EAAAs5B,SACAjC,MAAAgoC,EAAAt/D,EAAAs3B,MAAAr3B,EAAAq3B,OACA9yB,QAAA86D,EAAAt/D,EAAAwE,QAAAvE,EAAAuE,UAJAxE,EADAC,GA4SA,QAAAshB,GAAAo2D,GACAj3E,EAAAi3E,EACAV,EAAAv2E,GAQA,QAAAk3E,KACAt6D,QAAA4G,KAAA,qGAziBA,GAAA6pD,KACAA,aAAA,kBAAAxzC,SAAA,gBAAAA,QAAA5Q,SAAA,SAAA9/B,GACA,aAAAA,IACG,SAAAA,GACH,MAAAA,IAAA,kBAAA0wC,SAAA1wC,EAAAwZ,cAAAk3B,OAAA,eAAA1wC,IAGAkkF,EAAAC,eAAA,SAAAC,EAAAC,GACA,KAAAD,YAAAC,IACA,SAAAp0B,WAAA,sCAIAi0B,EAAAztD,YAAA,WACA,QAAAqD,GAAAjtB,EAAAkK,GACA,OAAAvT,GAAA,EAAqBA,EAAAuT,EAAAtT,OAAkBD,IAAA,CACvC,GAAAulB,GAAAhS,EAAAvT,EACAulB,GAAAjiB,WAAAiiB,EAAAjiB,aAAA,EACAiiB,EAAA/hB,cAAA,EACA,SAAA+hB,OAAAhiB,UAAA,GACA5G,OAAAC,eAAAyM,EAAAkc,EAAAlmB,IAAAkmB,IAIA,gBAAAs7D,EAAA2J,EAAAC,GAGA,MAFAD,IAAAl0D,EAAAuqD,EAAAzsE,UAAAo2E,GACAC,GAAAn0D,EAAAuqD,EAAA4J,GACA5J,MAIAH,EAAAgK,kBAAA,SAAAlmF,GACA,GAAA1B,MAAA4M,QAAAlL,GAAA,CACA,OAAAxE,GAAA,EAAA2qF,EAAA7nF,MAAA0B,EAAAvE,QAA+CD,EAAAwE,EAAAvE,OAAgBD,IAAA2qF,EAAA3qF,GAAAwE,EAAAxE,EAE/D,OAAA2qF,GAEA,MAAA7nF,OAAAE,KAAAwB,GA6DA,IAAAuW,GAAA,OAYAzL,EAAA,OAQAqd,EAAA,mBAAA2H,gBAAAC,6BAEAq2D,GACAC,OAAA,SAAA5gD,EAAA5rC,GACAsuB,IACAA,EAAArS,KAAA,YAAAjc,GACAsuB,EAAA9gB,GAAA,gCAAAi/E,GACA,GAAAxQ,GAAAj8E,EAAA6rF,IAAAzqF,KACApB,GAAA0sF,cAAA,EACApuF,OAAAsG,KAAA6nF,GAAA9nE,QAAA,SAAA3jB,GACAi7E,EAAAj7E,GAAAyrF,EAAAzrF,KAEAhB,EAAA0sF,cAAA,MAGAC,WAAA,SAAAC,EAAAhhD,GACAtd,GACAA,EAAArS,KAAA,gBAAA2wE,EAAAhhD,KAqHA52B,EAAA,OACAyB,EAAA,EAEAs0B,EAAA,WAWA,QAAAA,KACA,GAAA25C,GAAAz+E,KAEA6oB,EAAA1qB,UAAAxC,QAAA,GAAAlD,SAAA0F,UAAA,MAAyEA,UAAA,GAEzEyoF,EAAA/9D,EAAA8c,MACAA,EAAAltC,SAAAmuF,KAA+CA,EAC/CC,EAAAh+D,EAAA4f,UACAA,EAAAhwC,SAAAouF,KAAuDA,EACvDC,EAAAj+D,EAAAxxB,QACAA,EAAAoB,SAAAquF,KAAmDA,EACnDC,EAAAl+D,EAAAm+D,YACAA,EAAAvuF,SAAAsuF,OACAE,EAAAp+D,EAAAq+D,OACAA,EAAAzuF,SAAAwuF,GAAA,EAAAA,CACA7K,GAAAC,eAAAr8E,KAAA8kC,GAEA9kC,KAAA2lF,eAAA,cAAAn1E,IACAxQ,KAAAymF,cAAA,EACAzmF,KAAAmnF,eAAAnnF,KAAAonF,WAAA3+C,EACAzoC,KAAAqnF,SAAAhwF,CAEA,IAAAgD,GAAA2F,KAAA3F,QAWA,IAVA2F,KAAA3F,SAAA,WACA,OAAAyrF,GAAA3nF,UAAAxC,OAAA4D,EAAAf,MAAAsnF,GAAAL,EAAA,EAAuEK,EAAAL,EAAaA,IACpFlmF,EAAAkmF,GAAAtnF,UAAAsnF,EAGAprF,GAAA+D,MAAAqgF,EAAAl/E,KAKAwP,EACA,SAAAk7D,OAAA,mEAEA,IAAAh4C,GAAAljB,EAAAvV,OAAAy4B,MACAljB,GAAAvV,OAAAy4B,QAAA,EACAjyB,KAAA4lF,IAAA,GAAA72E,IACAzF,KAAAq8B,IAEA52B,EAAAvV,OAAAy4B,SACAjyB,KAAAsnF,kBAAA3hD,EAAAtuC,GACA2I,KAAAunF,sBAAAlwF,GACA2I,KAAAwnF,kBAAAR,EAAArhD,GAEAuhD,GACAlnF,KAAAynF,sBAkOA,MAvNArL,GAAAztD,YAAAmW,IACA/pC,IAAA,WASAxC,MAAA,SAAAmV,GAGA,OAFAs2E,GAAAhkF,KAEA0nF,EAAAvpF,UAAAxC,OAAAgsF,EAAAnpF,MAAAkpF,EAAA,EAAAA,EAAA,KAAA3B,EAAA,EAAiG2B,EAAA3B,EAAeA,IAChH4B,EAAA5B,EAAA,GAAA5nF,UAAA4nF,EAIA,gCAAAr4E,GAAA,YAAA0uE,YAAA1uE,aAAA,IAAAvP,UAAAxC,SACAgsF,GAAAj6E,GACAA,SAEA,IAAAi5E,GAAA3mF,KAAAonF,WAAA15E,GACAk6E,EAAA5nF,KAAA6nF,cACAliD,EAAA3lC,KAAA2lC,MACAmiD,EAAA,OACAC,EAAA,MACApB,IACA3mF,KAAAymF,cAAA,EAEAjoF,MAAA4M,QAAAu7E,GACAA,EAAAjoE,QAAA,SAAA5mB,GACA,MAAAA,GAAAsG,MAAA3F,QAAAktC,GAAAvpB,OAAAggE,EAAAgK,kBAAAuB,OAGAhB,EAAAvoF,MAAA3F,QAAAktC,GAAAvpB,OAAAggE,EAAAgK,kBAAAuB,KAEA3nF,KAAAymF,cAAA,EAEAzmF,KAAAgoF,iBACAF,EAAA9nF,KAAA6nF,cAAA1C,EAAAx/C,GACAoiD,EAAA5C,EAAAwC,IAEA3nF,KAAAioF,aAAAvpE,QAAA,SAAA5mB,GACAA,EAAA4uF,aACA5uF,EAAAgwF,SACAhwF,EAAA4uF,YAA8Bh5E,OAAAi6E,QAAAI,GAAqCD,EAAAF,EAAA5D,GAEnElsF,EAAA4uF,YAA8Bh5E,OAAAi6E,WAA+BhiD,EAAAq+C,OAK7Dr4D,QAAA4G,KAAA,4BAAA7kB,MAeA3S,IAAA,QACAxC,MAAA,SAAAme,EAAAtW,EAAAyM,GACA,GAAAs3E,GAAAnkF,IAEA,OAAAA,MAAA4lF,IAAAx6D,OAAA,WACA,wBAAA1U,KAAAytE,EAAAx+C,OAAAw+C,EAAAyB,IAAA5lE,KAAAtJ,IACStW,EAAAyM,MAYT9R,IAAA,YACAxC,MAAA,WACA,GAAA2vF,GAAA/pF,UAAAxC,QAAA,GAAAlD,SAAA0F,UAAA,MAA4EA,UAAA,GAE5EsqC,EAAAy/C,EAAAz/C,UACApxC,EAAA6wF,EAAA7wF,OAEA2I,MAAAmnF,eAAAnnF,KAAAonF,WAAA3+C,GAAAzoC,KAAAmnF,eACAnnF,KAAAunF,sBAAAlwF,GAAA2I,KAAAqnF,aAWAtsF,IAAA,oBACAxC,MAAA,SAAAotC,EAAAtuC,GACA,GAAAwc,GAAA9E,EAAAkgB,QAAA3hB,KAAAuG,OAEAxb,QAAAsG,KAAAtH,GAAAqnB,QAAA,SAAA3jB,GACA8Y,EAAA8xB,EAAA5qC,EAAA1D,EAAA0D,GAAA4qC,gBAYA5qC,IAAA,wBACAxC,MAAA,SAAA4vF,GACA,GAAA9wF,GAAA2I,KAAAqnF,SACA1zE,EAAA5E,EAAAkgB,QAAA3hB,KAAAqG,QAEAy0E,GAAApoF,KAAAmnF,eACA9uF,QAAAsG,KAAAwpF,GAAAzpE,QAAA,SAAA3jB,GACA1D,EAAA0D,GAAAotF,EAAAptF,KAEA1C,OAAAsG,KAAAtH,GAAAqnB,QAAA,SAAA3jB,GACA,GAAArD,GAAAL,EAAA0D,EACA,IAAArD,KAAA+wC,UAAA,CAEA,GAAAA,KACApwC,QAAAsG,KAAAjH,EAAA+wC,WAAA/pB,QAAA,SAAAld,GACA,GAAAsS,GAAApc,EAAA+wC,UAAAjnC,EACAinC,GAAAjnC,GAAA,SAAAmkC,GACA,OAAA0iD,GAAAlqF,UAAAxC,OAAA4D,EAAAf,MAAA6pF,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAoGD,EAAAC,EAAeA,IACnH/oF,EAAA+oF,EAAA,GAAAnqF,UAAAmqF,EAGAx0E,GAAA1V,MAAA3F,QAAAkb,EAAAgyB,EAAA5qC,IAAAqhB,OAAA7c,OAGA6oF,EAAAvmF,KAAA4mC,MAEAzoC,KAAAonF,WAAAnC,EAAAmD,MAaArtF,IAAA,sBACAxC,MAAA,WACA,GAAAgwF,GAAAvoF,KAEAyW,EAAA2uE,EAAAplF,KAAA4lF,IAEA,IAAAnvE,GAAAzW,KAAA4lF,IAAA,mBACA,IAAA2C,EAAA9B,aACA,SAAAxc,OAAA,sEAEY5+C,MAAA,EAAAC,MAAA,OAgBZvwB,IAAA,oBACAxC,MAAA,SAAAyuF,EAAArhD,GACA,GAAA6iD,GAAAxoF,IAEAA,MAAAioF,cAAA3B,GAAAlqE,OAAA4qE,GACAhnF,KAAAgoF,eAAAhB,EAAA35D,KAAA,SAAAv1B,GACA,MAAAA,GAAAgwF,WAEA9nF,KAAAgoF,gBACAr8D,QAAAC,IAAA,sIAEA,IAAA68D,GAAAzoF,KAAA6nF,cAAA7nF,KAAAgoF,eAAA7C,EAAAx/C,GAAA,IAEA3lC,MAAAioF,aAAAvpE,QAAA,SAAA5mB,GACAA,EAAAyuF,QACAzuF,EAAAyuF,OAAAzuF,EAAAgwF,SAAAW,EAAA9iD,EAAA6iD,QAKAztF,IAAA,QACAuH,IAAA,WACA,MAAAtC,MAAA4lF,IAAAzqF,OAEAL,IAAA,SAAAqrC,GACA,SAAA8jC,OAAA,4CAGAnlC,IASA,oBAAA9U,gBAAAjhB,KACA6gB,EAAAI,OAAAjhB,IAOA,IAAAjL,IACAghC,QACAlV,UACAq2D,eAGA,OAAAniF,MnDqt4BM,SAASpM,EAAQD,GoDlx5BvBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAA2xC,kBACA3xC,EAAA4xC,UAAA,aACA5xC,EAAA6xC,SAEA7xC,EAAA8Z,YACA9Z,EAAA2xC,gBAAA,GAEA3xC","file":"app.b741a65f1be55add999a.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.router = undefined;\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(50);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _routes = __webpack_require__(5);\n\t\n\tvar _routes2 = _interopRequireDefault(_routes);\n\t\n\tvar _vueLocalizeConf = __webpack_require__(6);\n\t\n\tvar _vueLocalizeConf2 = _interopRequireDefault(_vueLocalizeConf);\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _vueLocalize = __webpack_require__(4);\n\t\n\tvar _vueLocalize2 = _interopRequireDefault(_vueLocalize);\n\t\n\tvar _App = __webpack_require__(38);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.config.debug = true;\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = exports.router = new _vueRouter2.default({\n\t  linkActiveClass: 'active',\n\t  history: true,\n\t  saveScrollPosition: true,\n\t  root: '/vue-localize-example/dist'\n\t});\n\t\n\t_vue2.default.use(_vueLocalize2.default, {\n\t  store: _store2.default,\n\t  config: _vueLocalizeConf2.default,\n\t  router: router,\n\t  routes: _routes2.default\n\t});\n\t\n\trouter.beforeEach(function (transition) {\n\t  if (transition.to.titleKey) {\n\t    _store2.default.dispatch('SET_TITLE', transition.to.titleKey);\n\t  } else if (transition.to.titleKey === undefined) {\n\t    _store2.default.dispatch('SET_TITLE', 'global.defaultTitle');\n\t  }\n\t\n\t  transition.next();\n\t});\n\t\n\tif (_vueLocalizeConf2.default.defaultLanguageRoute) {\n\t  router.redirect({\n\t    '*': '/' + _vueLocalizeConf2.default.defaultLanguage + '/error404',\n\t    '/': '/' + _vueLocalizeConf2.default.defaultLanguage\n\t  });\n\t} else {\n\t  router.redirect({\n\t    '*': '/error404'\n\t  });\n\t}\n\t\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.18\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} doNotObserve\n\t */\n\t\n\tfunction defineReactive(obj, key, val, doNotObserve) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  // if doNotObserve is true, only use the child value observer\n\t  // if it already exists, and do not attempt to create it.\n\t  // this allows freezing a large object from the root and\n\t  // avoid unnecessary observation inside v-for fragments.\n\t  var childOb = doNotObserve ? isObject(val) && val.__ob__ : observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = doNotObserve ? isObject(newVal) && newVal.__ob__ : observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop.options);\n\t  }\n\t  if (assertProp(prop, value)) {\n\t    defineReactive(vm, key, value, true /* doNotObserve */);\n\t  }\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value, true /* do not observe */);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    // #2366 or custom terminal directive\n\t    def: def || resolveAsset(options, 'directives', dirName)\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains$1(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains$1(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains$1(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains$1(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.18';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (config.devtools) {\n\t  if (devtools) {\n\t    devtools.emit('init', Vue);\n\t  } else if (false) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(51);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _rootApp = __webpack_require__(9);\n\t\n\tvar _rootApp2 = _interopRequireDefault(_rootApp);\n\t\n\tvar _vueLocalize = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\t\n\texports.default = new _vuex2.default.Store({\n\t  modules: {\n\t    rootApp: _rootApp2.default,\n\t    vueLocalizeVuexStoreModule: _vueLocalize.vueLocalizeVuexStoreModule\n\t  }\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(16)\n\t__vue_template__ = __webpack_require__(31)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,n){ true?module.exports=n():\"function\"==typeof define&&define.amd?define([],n):\"object\"==typeof exports?exports.VueLocalize=n():t.VueLocalize=n()}(this,function(){return function(t){function n(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var e={};return n.m=t,n.c=e,n.p=\"\",n(0)}([function(t,n,e){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function u(t){window.localStorage.setItem(R,t)}function a(){return window.localStorage.getItem(R)}function i(t,n){function e(){return S.state.vueLocalizeVuexStoreModule.currentLanguage}function r(t,n,e){return(0,_[\"default\"])(t,function(t,o){if((0,h[\"default\"])(t,\"name\")&&((0,x[\"default\"])(e.initial,t.name,o),t.originalName=t.name,t.name=n+\"_\"+t.name,(0,x[\"default\"])(e.localized,t.name,n)),(0,h[\"default\"])(t,\"subRoutes\")){var u=(0,s[\"default\"])(t.subRoutes);(0,v[\"default\"])(t,\"subRoutes\");var a=(0,f[\"default\"])(u),i=r(a,n,e);t.subRoutes=i}}),t}function o(t,n){var e=arguments.length<=2||void 0===arguments[2]?!0:arguments[2];(0,_[\"default\"])(t,function(t,r){(e!==!0||(0,h[\"default\"])(t,\"localized\"))&&(n(r,t),(0,h[\"default\"])(t,\"subRoutes\")&&o(t.subRoutes,n,!1))})}function u(t,n){(0,x[\"default\"])(n,\"vueLocalizeId\",N),N++}function i(t,n){(0,x[\"default\"])(T,n.vueLocalizeId,{}),(0,x[\"default\"])(T[n.vueLocalizeId],\"component\",n.component)}function c(t,n){(0,v[\"default\"])(n,\"component\")}function l(t,n){(0,x[\"default\"])(n,\"component\",T[n.vueLocalizeId].component)}function p(t,n){return o(t,u),o(t,i),o(t,c),(0,_[\"default\"])(t,function(e,o){if((0,h[\"default\"])(e,\"localized\")){(0,h[\"default\"])(e,\"name\")&&(0,x[\"default\"])(F.initial,e.name,o);var u=(0,s[\"default\"])(e);if((0,v[\"default\"])(t,o),(0,h[\"default\"])(u,\"subRoutes\")){var a=(0,s[\"default\"])(u.subRoutes);(0,v[\"default\"])(u,\"subRoutes\")}(0,_[\"default\"])(n.languages,function(e,i){if(e.enabled){var c=(0,s[\"default\"])(u),l=\"\";\"/\"===o[0]&&1===o.length?l=\"\":\"/\"===o[0]&&o.length>1?l=o:\"/\"!==o[0]&&(l=\"/\"+o);var p=i;n.defaultLanguageRoute===!1&&(p=n.defaultLanguage!==i?i:\"\");var v=\"/\"+p+l;c.lang=i;var d=(0,f[\"default\"])(a),g=r(d,i,F);c.subRoutes=g,(0,x[\"default\"])(t,v,c)}})}}),o(t,l),t}function d(t){var n=(0,h[\"default\"])(t,\"localized\")?t.lang:a();n&&S.dispatch(\"SET_APP_LANGUAGE\",n,R.resaveOnLocalizedRoutes)}function g(t){var n=arguments.length<=1||void 0===arguments[1]?null:arguments[1],r=arguments.length<=2||void 0===arguments[2]?null:arguments[2],o=e(),u=r||o,a=(0,A[\"default\"])(t,\".\"),i=1===a.length,c=i?R.defaultContextName+\".\"+t:t;if(!(0,h[\"default\"])(R.translations,c))return R.supressWarnings||console.warn('[VueLocalize]. Undefined path: \"'+c+'\"'),c;var f=c+\".\"+u,l=(0,h[\"default\"])(R.translations,f);if(l){var s=(0,b[\"default\"])(R.translations,f);return w(s,n,f)}if(!R.fallbackOnNoTranslation)return R.supressWarnings||console.warn('[VueLocalize]. Undefined translation: \"'+f+'\"'),c;var p=c+\".\"+R.fallbackLanguage,v=(0,h[\"default\"])(R.translations,p);if(u===R.fallbackLanguage||!v)return R.supressWarnings||console.warn('[VueLocalize]. Undefined FALLBACK translation: \"'+p+'\"'),c;var d=(0,b[\"default\"])(R.translations,p);return w(d,n,p)}function y(t){var n=arguments.length<=1||void 0===arguments[1]?null:arguments[1];if(!(0,h[\"default\"])(F.initial,t))return t;var r=(n||e())+\"_\";return r+t}function j(t,n){var r=t.path,o=t.name;if(!(0,h[\"default\"])(F.initial,o)&&!(0,h[\"default\"])(F.localized,o))return r;if(R.defaultLanguageRoute===!0)return(0,z[\"default\"])(r,/^.{3}/g,\"/\"+n);if(R.defaultLanguage===e())return\"/\"+n+r;if(n===R.defaultLanguage){var u=(0,z[\"default\"])(r,/^.{3}/g,\"\");return u.length||(u=\"/\"),u}}function m(t){return t.from.originalName===t.to.originalName}function w(t,n,e){var r=t.match($);if(!r)return t;if(!n)return L(r,e),t;(0,_[\"default\"])(n,function(n,e){t=(0,z[\"default\"])(t,e,n)});var o=t.match($);return o&&L(o,e),t}function L(t,n){R.supressWarnings||console.warn(\"VueLocalize. Unreplaced: \"+(0,O[\"default\"])(t,\", \")+' in \"'+n+'\"')}var S=n.store,R=n.config,U=n.router,I=n.routes,$=/%[a-zA-Z0-9_-]*%/g,M=t.util.bind;t.mixin({vuex:{getters:{currentLanguage:E.currentLanguage}}}),S.dispatch(\"SET_APP_LANGUAGE\",R.defaultLanguage,!1);var N=0,T={},F={initial:{},localized:{}},G=p(I,R);U.map(G),U.beforeEach(function(t){if(t.to.localized)e()!==t.to.lang&&S.dispatch(\"SET_APP_LANGUAGE\",t.to.lang,R.resaveOnLocalizedRoutes);else if(t.from.localized===!0&&!R.resaveOnLocalizedRoutes){var n=a();n&&t.from.lang!==n&&S.dispatch(\"SET_APP_LANGUAGE\",n,!1)}t.next()}),t.prototype.$vueLocalizeInit=d,t.prototype.$localizeRoute=y,t.prototype.$localizeRoutePath=j,t.prototype.$isJustLanguageSwitching=m,t.prototype.$localizeConf=R;var V={translate:g};(0,_[\"default\"])(V,function(n,e){t.filter((0,P[\"default\"])(e),n),t.prototype[\"$\"+e]=n}),t.directive(\"localize\",{deep:!0,bind:function(){var t=this.vm;this.unwatch=t.$watch(\"$store.state.vueLocalizeVuexStoreModule.currentLanguage\",M(this.updateContent,this))},unbind:function(){this.unwatch&&this.unwatch()},update:function(t){this.path=t.path,this.vars=t.vars,this.lang=t.lang;var n=t.lang||e(),r=g(t.path,t.vars,n);this.el.innerHTML=r},updateContent:function(t){var n=this.lang||t,e=g(this.path,this.vars,n);this.el.innerHTML=e}})}Object.defineProperty(n,\"__esModule\",{value:!0}),n.vueLocalizeVuexStoreModule=void 0;var c=e(102),f=r(c),l=e(101),s=r(l),p=e(117),v=r(p),d=e(115),x=r(d),g=e(34),b=r(g),y=e(35),h=r(y),j=e(105),_=r(j),m=e(116),A=r(m),w=e(112),O=r(w),L=e(114),z=r(L),S=e(113),P=r(S),E=e(42),R=\"currentLanguage\",U=\"SET_APP_LANGUAGE\",I={currentLanguage:null},$=o({},U,function(t,n){var e=arguments.length<=2||void 0===arguments[2]?!0:arguments[2];t.currentLanguage=n,e&&u(n)}),M=(n.vueLocalizeVuexStoreModule={state:I,mutations:$},{install:i});n[\"default\"]=M},function(t,n){var e=Array.isArray;t.exports=e},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"Map\");t.exports=u},function(t,n,e){(function(t,r){var o=e(63),u={\"function\":!0,object:!0},a=u[typeof n]&&n&&!n.nodeType?n:void 0,i=u[typeof t]&&t&&!t.nodeType?t:void 0,c=o(a&&i&&\"object\"==typeof r&&r),f=o(u[typeof self]&&self),l=o(u[typeof window]&&window),s=o(u[typeof this]&&this),p=c||l!==(s&&s.window)&&l||f||s||Function(\"return this\")();t.exports=p}).call(n,e(41)(t),function(){return this}())},function(t,n,e){function r(t){if(\"string\"==typeof t)return t;if(null==t)return\"\";if(u(t))return c?c.call(t):\"\";var n=t+\"\";return\"0\"==n&&1/t==-a?\"-0\":n}var o=e(18),u=e(111),a=1/0,i=o?o.prototype:void 0,c=i?i.toString:void 0;t.exports=r},function(t,n,e){function r(t,n){for(var e=t.length;e--;)if(o(t[e][0],n))return e;return-1}var o=e(33);t.exports=r},function(t,n,e){function r(t){return o(t)?t:u(t)}var o=e(1),u=e(100);t.exports=r},function(t,n,e){function r(t,n){var e=t[n];return o(e)?e:void 0}var o=e(110);t.exports=r},function(t,n,e){function r(t,n){return\"number\"==typeof t?!0:!o(t)&&(a.test(t)||!u.test(t)||null!=n&&t in Object(n))}var o=e(1),u=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,a=/^\\w*$/;t.exports=r},function(t,n){function e(t){var n=typeof t;return\"number\"==n||\"boolean\"==n||\"string\"==n&&\"__proto__\"!=t||null==t}t.exports=e},function(t,n,e){var r=e(7),o=r(Object,\"create\");t.exports=o},function(t,n){function e(t){var n=typeof t;return!!t&&(\"object\"==n||\"function\"==n)}t.exports=e},function(t,n){function e(t){return!!t&&\"object\"==typeof t}t.exports=e},function(t,n){function e(t,n,e,r){var o=-1,u=t.length;for(r&&u&&(e=t[++o]);++o<u;)e=n(e,t[o],o,t);return e}t.exports=e},function(t,n,e){function r(t,n,e){var r=t[n];a.call(t,n)&&o(r,e)&&(void 0!==e||n in t)||(t[n]=e)}var o=e(33),u=Object.prototype,a=u.hasOwnProperty;t.exports=r},function(t,n){function e(t,n){return t=\"number\"==typeof t||o.test(t)?+t:-1,n=null==n?r:n,t>-1&&t%1==0&&n>t}var r=9007199254740991,o=/^(?:0|[1-9]\\d*)$/;t.exports=e},function(t,n,e){function r(t){return null!=t&&a(o(t))&&!u(t)}var o=e(77),u=e(37),a=e(17);t.exports=r},function(t,n){function e(t){return\"number\"==typeof t&&t>-1&&t%1==0&&r>=t}var r=9007199254740991;t.exports=e},function(t,n,e){var r=e(3),o=r.Symbol;t.exports=o},function(t,n){function e(t,n){for(var e=-1,r=t.length;++e<r&&n(t[e],e,t)!==!1;);return t}t.exports=e},function(t,n,e){function r(t,n){var e=o(t,n);if(0>e)return!1;var r=t.length-1;return e==r?t.pop():a.call(t,e,1),!0}var o=e(5),u=Array.prototype,a=u.splice;t.exports=r},function(t,n,e){function r(t,n){var e=o(t,n);return 0>e?void 0:t[e][1]}var o=e(5);t.exports=r},function(t,n,e){function r(t,n){return o(t,n)>-1}var o=e(5);t.exports=r},function(t,n,e){function r(t,n,e){var r=o(t,n);0>r?t.push([n,e]):t[r][1]=e}var o=e(5);t.exports=r},function(t,n,e){function r(t,n,e,_,m,A,w){var z;if(_&&(z=A?_(t,m,A,w):_(t)),void 0!==z)return z;if(!h(t))return t;var S=g(t);if(S){if(z=v(t),!n)return l(t,z)}else{var E=p(t),R=E==O||E==L;if(b(t))return f(t,n);if(E==P||E==j||R&&!A){if(y(t))return A?t:{};if(z=x(R?{}:t),!n)return z=i(z,t),e?s(t,z):z}else{if(!B[E])return A?t:{};z=d(t,E,n)}}w||(w=new o);var U=w.get(t);return U?U:(w.set(t,z),(S?u:c)(t,function(o,u){a(z,u,r(o,n,e,_,u,t,w))}),e&&!S?s(t,z):z)}var o=e(46),u=e(19),a=e(14),i=e(51),c=e(25),f=e(64),l=e(70),s=e(72),p=e(79),v=e(85),d=e(86),x=e(87),g=e(1),b=e(109),y=e(30),h=e(11),j=\"[object Arguments]\",_=\"[object Array]\",m=\"[object Boolean]\",A=\"[object Date]\",w=\"[object Error]\",O=\"[object Function]\",L=\"[object GeneratorFunction]\",z=\"[object Map]\",S=\"[object Number]\",P=\"[object Object]\",E=\"[object RegExp]\",R=\"[object Set]\",U=\"[object String]\",I=\"[object Symbol]\",$=\"[object WeakMap]\",M=\"[object ArrayBuffer]\",N=\"[object Float32Array]\",T=\"[object Float64Array]\",F=\"[object Int8Array]\",G=\"[object Int16Array]\",V=\"[object Int32Array]\",k=\"[object Uint8Array]\",C=\"[object Uint8ClampedArray]\",W=\"[object Uint16Array]\",Z=\"[object Uint32Array]\",B={};B[j]=B[_]=B[M]=B[m]=B[A]=B[N]=B[T]=B[F]=B[G]=B[V]=B[z]=B[S]=B[P]=B[E]=B[R]=B[U]=B[I]=B[k]=B[C]=B[W]=B[Z]=!0,B[w]=B[O]=B[$]=!1,t.exports=r},function(t,n,e){function r(t,n){return t&&o(t,n,u)}var o=e(55),u=e(39);t.exports=r},function(t,n){function e(t,n){return o.call(t,n)||\"object\"==typeof t&&n in t&&null===u(t)}var r=Object.prototype,o=r.hasOwnProperty,u=Object.getPrototypeOf;t.exports=e},function(t,n,e){function r(t){var n=new t.constructor(t.byteLength);return new o(n).set(new o(t)),n}var o=e(47);t.exports=r},function(t,n,e){function r(t,n,e){return o(t,n,e)}var o=e(71);t.exports=r},function(t,n,e){function r(t,n){return o?void 0!==t[n]:a.call(t,n)}var o=e(10),u=Object.prototype,a=u.hasOwnProperty;t.exports=r},function(t,n){function e(t){var n=!1;if(null!=t&&\"function\"!=typeof t.toString)try{n=!!(t+\"\")}catch(e){}return n}t.exports=e},function(t,n){function e(t){var n=t&&t.constructor,e=\"function\"==typeof n&&n.prototype||r;return t===e}var r=Object.prototype;t.exports=e},function(t,n,e){function r(t,n){return 1==n.length?t:u(t,o(n,0,-1))}var o=e(60),u=e(34);t.exports=r},function(t,n){function e(t,n){return t===n||t!==t&&n!==n}t.exports=e},function(t,n,e){function r(t,n,e){var r=null==t?void 0:o(t,n);return void 0===r?e:r}var o=e(56);t.exports=r},function(t,n,e){function r(t,n){return u(t,n,o)}var o=e(26),u=e(80);t.exports=r},function(t,n,e){function r(t){return o(t)&&i.call(t,\"callee\")&&(!f.call(t,\"callee\")||c.call(t)==u)}var o=e(108),u=\"[object Arguments]\",a=Object.prototype,i=a.hasOwnProperty,c=a.toString,f=a.propertyIsEnumerable;t.exports=r},function(t,n,e){function r(t){var n=o(t)?c.call(t):\"\";return n==u||n==a}var o=e(11),u=\"[object Function]\",a=\"[object GeneratorFunction]\",i=Object.prototype,c=i.toString;t.exports=r},function(t,n,e){function r(t){return\"string\"==typeof t||!o(t)&&u(t)&&c.call(t)==a}var o=e(1),u=e(12),a=\"[object String]\",i=Object.prototype,c=i.toString;t.exports=r},function(t,n,e){function r(t){var n=f(t);if(!n&&!i(t))return u(t);var e=a(t),r=!!e,l=e||[],s=l.length;for(var p in t)!o(t,p)||r&&(\"length\"==p||c(p,s))||n&&\"constructor\"==p||l.push(p);return l}var o=e(26),u=e(57),a=e(84),i=e(16),c=e(15),f=e(31);t.exports=r},function(t,n){function e(t){var n=t?t.length:0;return n?t[n-1]:void 0}t.exports=e},function(t,n){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}},function(t,n){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});n.currentLanguage=function(t){return t.vueLocalizeVuexStoreModule.currentLanguage}},function(t,n,e){function r(){}var o=e(10),u=Object.prototype;r.prototype=o?o(null):u,t.exports=r},function(t,n,e){function r(t){var n=-1,e=t?t.length:0;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}var o=e(88),u=e(89),a=e(90),i=e(91),c=e(92);r.prototype.clear=o,r.prototype[\"delete\"]=u,r.prototype.get=a,r.prototype.has=i,r.prototype.set=c,t.exports=r},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"Set\");t.exports=u},function(t,n,e){function r(t){var n=-1,e=t?t.length:0;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}var o=e(95),u=e(96),a=e(97),i=e(98),c=e(99);r.prototype.clear=o,r.prototype[\"delete\"]=u,r.prototype.get=a,r.prototype.has=i,r.prototype.set=c,t.exports=r},function(t,n,e){var r=e(3),o=r.Uint8Array;t.exports=o},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"WeakMap\");t.exports=u},function(t,n){function e(t,n){return t.set(n[0],n[1]),t}t.exports=e},function(t,n){function e(t,n){return t.add(n),t}t.exports=e},function(t,n,e){function r(t,n){return t&&o(n,u(n),t)}var o=e(28),u=e(39);t.exports=r},function(t,n,e){function r(t){return\"function\"==typeof t?t:o}var o=e(107);t.exports=r},function(t,n,e){function r(t){return o(t)?u(t):{}}var o=e(11),u=Object.create;t.exports=r},function(t,n,e){var r=e(25),o=e(73),u=o(r);t.exports=u},function(t,n,e){var r=e(74),o=r();t.exports=o},function(t,n,e){function r(t,n){n=u(n,t)?[n+\"\"]:o(n);for(var e=0,r=n.length;null!=t&&r>e;)t=t[n[e++]];return e&&e==r?t:void 0}var o=e(6),u=e(8);t.exports=r},function(t,n){function e(t){return r(Object(t))}var r=Object.keys;t.exports=e},function(t,n){function e(t){return function(n){return null==n?void 0:n[t]}}t.exports=e},function(t,n,e){function r(t,n,e,r){n=i(n,t)?[n+\"\"]:u(n);for(var f=-1,l=n.length,s=l-1,p=t;null!=p&&++f<l;){var v=n[f];if(c(p)){var d=e;if(f!=s){var x=p[v];d=r?r(x,v,p):void 0,void 0===d&&(d=null==x?a(n[f+1])?[]:{}:x)}o(p,v,d)}p=p[v]}return t}var o=e(14),u=e(6),a=e(15),i=e(8),c=e(11);t.exports=r},function(t,n){function e(t,n,e){var r=-1,o=t.length;0>n&&(n=-n>o?0:o+n),e=e>o?o:e,0>e&&(e+=o),o=n>e?0:e-n>>>0,n>>>=0;for(var u=Array(o);++r<o;)u[r]=t[r+n];return u}t.exports=e},function(t,n){function e(t,n){for(var e=-1,r=Array(t);++e<t;)r[e]=n(e);return r}t.exports=e},function(t,n,e){function r(t,n){n=a(n,t)?[n+\"\"]:o(n),t=c(t,n);var e=i(n);return null!=t&&u(t,e)?delete t[e]:!0}var o=e(6),u=e(35),a=e(8),i=e(40),c=e(32);t.exports=r},function(t,n){function e(t){return t&&t.Object===Object?t:null}t.exports=e},function(t,n){function e(t,n){if(n)return t.slice();var e=new t.constructor(t.length);return t.copy(e),e}t.exports=e},function(t,n,e){function r(t){return u(a(t),o,new t.constructor)}var o=e(49),u=e(13),a=e(93);t.exports=r},function(t,n){function e(t){var n=new t.constructor(t.source,r.exec(t));return n.lastIndex=t.lastIndex,n}var r=/\\w*$/;t.exports=e},function(t,n,e){function r(t){return u(a(t),o,new t.constructor)}var o=e(50),u=e(13),a=e(94);t.exports=r},function(t,n,e){function r(t){return a?Object(a.call(t)):{}}var o=e(18),u=o?o.prototype:void 0,a=u?u.valueOf:void 0;t.exports=r},function(t,n,e){function r(t,n){var e=n?o(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.length)}var o=e(27);t.exports=r},function(t,n){function e(t,n){var e=-1,r=t.length;for(n||(n=Array(r));++e<r;)n[e]=t[e];return n}t.exports=e},function(t,n,e){function r(t,n,e,r){e||(e={});for(var u=-1,a=n.length;++u<a;){var i=n[u],c=r?r(e[i],t[i],i,e,t):t[i];o(e,i,c)}return e}var o=e(14);t.exports=r},function(t,n,e){function r(t,n){return o(t,u(t),n)}var o=e(28),u=e(78);t.exports=r},function(t,n,e){function r(t,n){return function(e,r){if(null==e)return e;if(!o(e))return t(e,r);for(var u=e.length,a=n?u:-1,i=Object(e);(n?a--:++a<u)&&r(i[a],a,i)!==!1;);return e}}var o=e(16);t.exports=r},function(t,n){function e(t){return function(n,e,r){for(var o=-1,u=Object(n),a=r(n),i=a.length;i--;){var c=a[t?i:++o];if(e(u[c],c,u)===!1)break}return n}}t.exports=e},function(t,n,e){function r(t){return function(n){return o(a(u(n)),t,\"\")}}var o=e(13),u=e(104),a=e(118);t.exports=r},function(t,n){function e(t){return r[t]}var r={\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"Ç\":\"C\",\"ç\":\"c\",\"Ð\":\"D\",\"ð\":\"d\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"Ñ\":\"N\",\"ñ\":\"n\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"Ý\":\"Y\",\"ý\":\"y\",\"ÿ\":\"y\",\"Æ\":\"Ae\",\"æ\":\"ae\",\"Þ\":\"Th\",\"þ\":\"th\",\"ß\":\"ss\"};t.exports=e},function(t,n,e){var r=e(58),o=r(\"length\");t.exports=o},function(t,n){var e=Object.getOwnPropertySymbols,r=e||function(){return[]};t.exports=r},function(t,n,e){function r(t){return v.call(t)}var o=e(2),u=e(45),a=e(48),i=\"[object Map]\",c=\"[object Object]\",f=\"[object Set]\",l=\"[object WeakMap]\",s=Object.prototype,p=Function.prototype.toString,v=s.toString,d=o?p.call(o):\"\",x=u?p.call(u):\"\",g=a?p.call(a):\"\";(o&&r(new o)!=i||u&&r(new u)!=f||a&&r(new a)!=l)&&(r=function(t){var n=v.call(t),e=n==c?t.constructor:null,r=\"function\"==typeof e?p.call(e):\"\";if(r)switch(r){case d:return i;case x:return f;case g:return l}return n}),t.exports=r},function(t,n,e){function r(t,n,e){if(null==t)return!1;var r=e(t,n);r||c(n)||(n=o(n),t=p(t,n),null!=t&&(n=s(n),r=e(t,n)));var v=t?t.length:void 0;return r||!!v&&f(v)&&i(n,v)&&(a(t)||l(t)||u(t))}var o=e(6),u=e(36),a=e(1),i=e(15),c=e(8),f=e(17),l=e(38),s=e(40),p=e(32);t.exports=r},function(t,n,e){function r(t,n){return o(t,n)&&delete t[n]}var o=e(29);t.exports=r},function(t,n,e){function r(t,n){if(o){var e=t[n];return e===u?void 0:e}return i.call(t,n)?t[n]:void 0}var o=e(10),u=\"__lodash_hash_undefined__\",a=Object.prototype,i=a.hasOwnProperty;t.exports=r},function(t,n,e){function r(t,n,e){t[n]=o&&void 0===e?u:e}var o=e(10),u=\"__lodash_hash_undefined__\";t.exports=r},function(t,n,e){function r(t){var n=t?t.length:void 0;return i(n)&&(a(t)||c(t)||u(t))?o(n,String):null}var o=e(61),u=e(36),a=e(1),i=e(17),c=e(38);t.exports=r},function(t,n){function e(t){var n=t.length,e=t.constructor(n);return n&&\"string\"==typeof t[0]&&o.call(t,\"index\")&&(e.index=t.index,e.input=t.input),e}var r=Object.prototype,o=r.hasOwnProperty;t.exports=e},function(t,n,e){function r(t,n,e){var r=t.constructor;switch(n){case y:return o(t);case l:case s:return new r(+t);case h:case j:case _:case m:case A:case w:case O:case L:case z:return f(t,e);case p:return u(t);case v:case g:return new r(t);case d:return a(t);case x:return i(t);case b:return c(t)}}var o=e(27),u=e(65),a=e(66),i=e(67),c=e(68),f=e(69),l=\"[object Boolean]\",s=\"[object Date]\",p=\"[object Map]\",v=\"[object Number]\",d=\"[object RegExp]\",x=\"[object Set]\",g=\"[object String]\",b=\"[object Symbol]\",y=\"[object ArrayBuffer]\",h=\"[object Float32Array]\",j=\"[object Float64Array]\",_=\"[object Int8Array]\",m=\"[object Int16Array]\",A=\"[object Int32Array]\",w=\"[object Uint8Array]\",O=\"[object Uint8ClampedArray]\",L=\"[object Uint16Array]\",z=\"[object Uint32Array]\";t.exports=r},function(t,n,e){function r(t){return\"function\"!=typeof t.constructor||u(t)?{}:o(a(t))}var o=e(53),u=e(31),a=Object.getPrototypeOf;t.exports=r},function(t,n,e){function r(){this.__data__={hash:new o,map:u?new u:[],string:new o}}var o=e(43),u=e(2);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map[\"delete\"](t):u(n.map,t)}var o=e(2),u=e(20),a=e(81),i=e(9);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map.get(t):u(n.map,t)}var o=e(2),u=e(21),a=e(82),i=e(9);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map.has(t):u(n.map,t)}var o=e(2),u=e(22),a=e(29),i=e(9);t.exports=r},function(t,n,e){function r(t,n){var e=this.__data__;return i(t)?a(\"string\"==typeof t?e.string:e.hash,t,n):o?e.map.set(t,n):u(e.map,t,n),this}var o=e(2),u=e(23),a=e(83),i=e(9);t.exports=r},function(t,n){function e(t){var n=-1,e=Array(t.size);return t.forEach(function(t,r){e[++n]=[r,t]}),e}t.exports=e},function(t,n){function e(t){var n=-1,e=Array(t.size);return t.forEach(function(t){e[++n]=t}),e}t.exports=e},function(t,n){function e(){this.__data__={array:[],map:null}}t.exports=e},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map[\"delete\"](t)}var o=e(20);t.exports=r},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map.get(t)}var o=e(21);t.exports=r},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map.has(t)}var o=e(22);t.exports=r},function(t,n,e){function r(t,n){var e=this.__data__,r=e.array;r&&(r.length<a-1?u(r,t,n):(e.array=null,e.map=new o(r)));var i=e.map;return i&&i.set(t,n),this}var o=e(44),u=e(23),a=200;t.exports=r},function(t,n,e){function r(t){var n=[];return o(t).replace(u,function(t,e,r,o){n.push(r?o.replace(a,\"$1\"):e||t)}),n}var o=e(4),u=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g,a=/\\\\(\\\\)?/g;t.exports=r},function(t,n,e){function r(t){return o(t,!1,!0)}var o=e(24);t.exports=r},function(t,n,e){function r(t){return o(t,!0,!0)}var o=e(24);t.exports=r},function(t,n){function e(t){return function(){return t}}t.exports=e},function(t,n,e){function r(t){return t=u(t),t&&t.replace(a,o).replace(l,\"\")}var o=e(76),u=e(4),a=/[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g,i=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",c=\"\\\\u20d0-\\\\u20f0\",f=\"[\"+i+c+\"]\",l=RegExp(f,\"g\");t.exports=r},function(t,n,e){t.exports=e(106)},function(t,n,e){function r(t,n){return\"function\"==typeof n&&i(t)?o(t,n):a(t,u(n))}var o=e(19),u=e(52),a=e(54),i=e(1);t.exports=r},function(t,n){function e(t){return t}t.exports=e},function(t,n,e){function r(t){return u(t)&&o(t)}var o=e(16),u=e(12);t.exports=r},function(t,n,e){(function(t){var r=e(103),o=e(3),u={\"function\":!0,object:!0},a=u[typeof n]&&n&&!n.nodeType?n:void 0,i=u[typeof t]&&t&&!t.nodeType?t:void 0,c=i&&i.exports===a?a:void 0,f=c?o.Buffer:void 0,l=f?function(t){return t instanceof f}:r(!1);t.exports=l}).call(n,e(41)(t))},function(t,n,e){function r(t){return null==t?!1:o(t)?p.test(l.call(t)):a(t)&&(u(t)?p:c).test(t)}var o=e(37),u=e(30),a=e(12),i=/[\\\\^$.*+?()[\\]{}|]/g,c=/^\\[object .+?Constructor\\]$/,f=Object.prototype,l=Function.prototype.toString,s=f.hasOwnProperty,p=RegExp(\"^\"+l.call(s).replace(i,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");t.exports=r},function(t,n,e){function r(t){return\"symbol\"==typeof t||o(t)&&i.call(t)==u}var o=e(12),u=\"[object Symbol]\",a=Object.prototype,i=a.toString;t.exports=r},function(t,n){function e(t,n){return t?o.call(t,n):\"\"}var r=Array.prototype,o=r.join;t.exports=e},function(t,n,e){var r=e(75),o=r(function(t,n,e){return t+(e?\"-\":\"\")+n.toLowerCase()});t.exports=o},function(t,n,e){function r(){var t=arguments,n=o(t[0]);return t.length<3?n:n.replace(t[1],t[2])}var o=e(4);t.exports=r},function(t,n,e){function r(t,n,e){return null==t?t:o(t,n,e)}var o=e(59);t.exports=r},function(t,n,e){function r(t,n,e){return o(t).split(n,e)}var o=e(4);t.exports=r},function(t,n,e){function r(t,n){return null==t?!0:o(t,n)}var o=e(62);t.exports=r},function(t,n,e){function r(t,n,e){return t=o(t),n=e?void 0:n,void 0===n&&(n=G.test(t)?F:T),t.match(n)||[]}var o=e(4),u=\"\\\\ud800-\\\\udfff\",a=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",i=\"\\\\u20d0-\\\\u20f0\",c=\"\\\\u2700-\\\\u27bf\",f=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",l=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",s=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",p=\"\\\\u2018\\\\u2019\\\\u201c\\\\u201d\",v=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",d=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",x=\"\\\\ufe0e\\\\ufe0f\",g=l+s+p+v,b=\"[\"+g+\"]\",y=\"[\"+a+i+\"]\",h=\"\\\\d+\",j=\"[\"+c+\"]\",_=\"[\"+f+\"]\",m=\"[^\"+u+g+h+c+f+d+\"]\",A=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",w=\"(?:\"+y+\"|\"+A+\")\",O=\"[^\"+u+\"]\",L=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",z=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",S=\"[\"+d+\"]\",P=\"\\\\u200d\",E=\"(?:\"+_+\"|\"+m+\")\",R=\"(?:\"+S+\"|\"+m+\")\",U=w+\"?\",I=\"[\"+x+\"]?\",$=\"(?:\"+P+\"(?:\"+[O,L,z].join(\"|\")+\")\"+I+U+\")*\",M=I+U+$,N=\"(?:\"+[j,L,z].join(\"|\")+\")\"+M,T=/[a-zA-Z0-9]+/g,F=RegExp([S+\"?\"+_+\"+(?=\"+[b,S,\"$\"].join(\"|\")+\")\",R+\"+(?=\"+[b,S+E,\"$\"].join(\"|\")+\")\",S+\"?\"+E+\"+\",S+\"+\",h,N].join(\"|\"),\"g\"),G=/[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;t.exports=r}])});\n\t//# sourceMappingURL=vue-localize.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Layout = __webpack_require__(41);\n\t\n\tvar _Layout2 = _interopRequireDefault(_Layout);\n\t\n\tvar _Home = __webpack_require__(42);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _Settings = __webpack_require__(43);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Layout3 = __webpack_require__(46);\n\t\n\tvar _Layout4 = _interopRequireDefault(_Layout3);\n\t\n\tvar _Index = __webpack_require__(49);\n\t\n\tvar _Index2 = _interopRequireDefault(_Index);\n\t\n\tvar _Features = __webpack_require__(48);\n\t\n\tvar _Features2 = _interopRequireDefault(_Features);\n\t\n\tvar _Error = __webpack_require__(47);\n\t\n\tvar _Error2 = _interopRequireDefault(_Error);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  '/': {\n\t    component: _Layout4.default,\n\t    titleKey: false,\n\t    localized: true,\n\t    subRoutes: {\n\t      '/': {\n\t        name: 'public-index',\n\t        titleKey: 'public.index.title',\n\t        component: _Index2.default\n\t      },\n\t      '/features': {\n\t        name: 'features',\n\t        titleKey: 'f.title',\n\t        component: _Features2.default\n\t      },\n\t      '/error404': {\n\t        name: 'error404',\n\t        titleKey: 'public.err404.title',\n\t        component: _Error2.default\n\t      }\n\t    }\n\t  },\n\t  '/admin': {\n\t    component: _Layout2.default,\n\t    subRoutes: {\n\t      '/home': {\n\t        name: 'admin-home',\n\t        titleKey: 'admin.home.title',\n\t        component: _Home2.default\n\t      },\n\t      '/settings': {\n\t        name: 'admin-settings',\n\t        titleKey: 'admin.settings.title',\n\t        component: _Settings2.default\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vueLocalizeTranslations = __webpack_require__(7);\n\t\n\tvar _vueLocalizeTranslations2 = _interopRequireDefault(_vueLocalizeTranslations);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  languages: {\n\t    en: {\n\t      key: 'eng',\n\t      enabled: true },\n\t    ru: {\n\t      key: 'rus',\n\t      enabled: true\n\t    },\n\t    de: {\n\t      key: 'deu',\n\t      enabled: false\n\t    }\n\t  },\n\t\n\t  defaultLanguage: 'en',\n\t\n\t  translations: _vueLocalizeTranslations2.default,\n\t\n\t  defaultLanguageRoute: false,\n\t\n\t  resaveOnLocalizedRoutes: false,\n\t\n\t  defaultContextName: 'global',\n\t\n\t  fallbackOnNoTranslation: true,\n\t\n\t  fallbackLanguage: 'en',\n\t\n\t  supressWarnings: false\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  'global': {\n\t\n\t    projectName: {\n\t      en: 'VueLocalize example',\n\t      ru: 'VueLocalize пример'\n\t    },\n\t\n\t    defaultTitle: {\n\t      en: '*en*',\n\t      ru: '*ru*'\n\t    },\n\t\n\t    lang: {\n\t      eng: {\n\t        en: 'English',\n\t        ru: 'Английский'\n\t      },\n\t      rus: {\n\t        en: 'Russian',\n\t        ru: 'Русский'\n\t      }\n\t    }\n\t\n\t  },\n\t\n\t  public: {\n\t    header: {\n\t      nav: {\n\t        home: {\n\t          en: 'About',\n\t          ru: 'О плагине'\n\t        },\n\t        features: {\n\t          en: 'Features',\n\t          ru: 'Возможности'\n\t        },\n\t        admin: {\n\t          en: 'Administration',\n\t          ru: 'Админка'\n\t        }\n\t      },\n\t      admin: {\n\t        en: 'Administration',\n\t        ru: 'Администрирование'\n\t      },\n\t      unauth: {\n\t        en: 'Without authentication',\n\t        ru: 'Без аутентификации'\n\t      }\n\t    },\n\t\n\t    index: {\n\t      title: {\n\t        en: 'VueLocalize plugin usage example',\n\t        ru: 'Пример использования плагина VueLocalize'\n\t      },\n\t      jdesc: {\n\t        en: 'This example contains all features of the plugin and you can \"touch\" them',\n\t        ru: 'В этом примере задействованы все возможности плагина мультиязычности и их можно \"потрогать\"'\n\t      },\n\t      sources: {\n\t        en: 'Sources here:',\n\t        ru: 'Исходники здесь:'\n\t      }\n\t    },\n\t\n\t    about: {\n\t      title: {\n\t        en: 'About this sample',\n\t        ru: 'Об этом шаблоне'\n\t      }\n\t    },\n\t\n\t    err404: {\n\t      title: {\n\t        en: '404 - Page not found',\n\t        ru: '404 - Страница не найдена'\n\t      }\n\t    }\n\t\n\t  },\n\t\n\t  admin: {\n\t    nav: {\n\t      home: {\n\t        en: 'Dashboard',\n\t        ru: 'Дашборда'\n\t      },\n\t      settings: {\n\t        en: 'Settings',\n\t        ru: 'Настройки'\n\t      }\n\t    },\n\t\n\t    home: {\n\t      title: {\n\t        en: 'Dashboard',\n\t        ru: 'Дашборда'\n\t      },\n\t      helloText: {\n\t        en: 'Hello! This is admin dashboard.',\n\t        ru: 'Привет! Это гавная страница административной панели.'\n\t      },\n\t      helloText2: {\n\t        en: 'Automatic routes localization is disabled for this section so there is no leading language part in paths of routes.',\n\t        ru: 'В этой секции приложения автоматическая локализация роутов отключена и языковая часть в начале адресов роутов отсутствует.'\n\t      },\n\t      helloText3: {\n\t        en: 'Language changing in this section occurs without affecting to route path.',\n\t        ru: 'Переключение языка интерфейса в этой секции происходит без смены роута.'\n\t      },\n\t      helloText4: {\n\t        en: 'By the way! In the \"Settings\" you can play with config options and see how it affects the application behavior.',\n\t        ru: 'Кстати! В разделе \"Настройки\" можно поиграться с настройками плагина и увидеть как это влияет поведение приложения.'\n\t      }\n\t    },\n\t\n\t    settings: {\n\t      title: {\n\t        en: 'Settings',\n\t        ru: 'Настройки'\n\t      },\n\t      variablesInjectionTest: {\n\t        en: 'Some text in English, %foo%, and then the %bar% variable',\n\t        ru: 'А теперь некоторый текст на русском, переменная %bar% и затем переменная %foo%'\n\t      }\n\t    }\n\t\n\t  },\n\t\n\t  f: {\n\t    title: {\n\t      en: 'Features and functionality',\n\t      ru: 'Функциональность и возможности'\n\t    },\n\t    intro: {\n\t      en: 'Introduction',\n\t      ru: 'Введение'\n\t    },\n\t    arl: {\n\t      en: 'Automatic routes localization',\n\t      ru: 'Автоматическая локализация роутов'\n\t    },\n\t    arlActivate: {\n\t      en: 'How to enable',\n\t      ru: 'Как включить'\n\t    },\n\t    dlr: {\n\t      en: 'Exclude leading language from routes path for default language',\n\t      ru: 'Исключение языкового параметра из начала адресов для языка по умолчанию'\n\t    },\n\t    lroute: {\n\t      en: 'Wrapper for route name ni %v-link%',\n\t      ru: 'Обертка для имени роута для %v-link%'\n\t    },\n\t    lrp: {\n\t      en: 'Getting path of the current route for another language',\n\t      ru: 'Получение адреса текущего роута для другого языка'\n\t    },\n\t    cReusing: {\n\t      en: 'Components reusing',\n\t      ru: 'Переиспользование компонент'\n\t    },\n\t    'uiTrans': {\n\t      en: 'Translating phrases in UI',\n\t      ru: 'Перевод фраз интерфейса'\n\t    },\n\t    'reactTrans': {\n\t      en: 'Translation reactivity',\n\t      ru: 'Реактивность перевода'\n\t    },\n\t    'transFilter': {\n\t      en: 'Translating via %translate% filter',\n\t      ru: 'Перевод с помощью фильтра %translate%'\n\t    },\n\t    'transFilter2': {\n\t      en: 'Translating via filter',\n\t      ru: 'Перевод с помощью фильтра'\n\t    },\n\t    'transCall': {\n\t      en: 'Translating via %tCall% function call',\n\t      ru: 'Перевод с помощью глобальной функции %tCall%'\n\t    },\n\t    'transCall2': {\n\t      en: 'Translating via global function call',\n\t      ru: 'Перевод с помощью глобальной функции плагина'\n\t    },\n\t    'transDir': {\n\t      en: 'Translating via %v-localize% directive',\n\t      ru: 'Перевод с помощью директивы %v-localize%'\n\t    },\n\t    'transDir2': {\n\t      en: 'Translating via directive',\n\t      ru: 'Перевод с помощью директивы'\n\t    },\n\t    'transExact': {\n\t      en: 'Translating into exact language regardless of current one',\n\t      ru: 'Перевод на определенный язык независимо от текущего'\n\t    },\n\t    'transExactF': {\n\t      en: 'Translating using filter',\n\t      ru: 'Перевод через фильтр'\n\t    },\n\t    'transExactC': {\n\t      en: 'Translating using function call',\n\t      ru: 'Перевод через вызов'\n\t    },\n\t    'transExactD': {\n\t      en: 'Translating using directive',\n\t      ru: 'Перевод через директиву'\n\t    },\n\t    'varInject': {\n\t      en: 'Variables injection',\n\t      ru: 'Внедрение переменных'\n\t    },\n\t    'varInjectF': {\n\t      en: 'Injecting via filter',\n\t      ru: 'Внедрение через фильтр'\n\t    },\n\t    'varInjectC': {\n\t      en: 'Injecting via function call',\n\t      ru: 'Внедрение через вызов функции'\n\t    },\n\t    'varInjectD': {\n\t      en: 'Injecting via directive',\n\t      ru: 'Внедрение через директиву'\n\t    },\n\t    'transTitle': {\n\t      en: 'Page title translating',\n\t      ru: 'Перевод тайтла страницы'\n\t    },\n\t    'fallbackLang': {\n\t      en: 'Fallback language',\n\t      ru: 'Запасной язык'\n\t    },\n\t    'locStor': {\n\t      en: 'Saving selected languade in browser local storage and %resaveOnLocalizedRoutesCode% config option',\n\t      ru: 'Сохранение выбранного языка в локальном хранилище браузера и опция %resaveOnLocalizedRoutesCode%'\n\t    },\n\t    'globMix': {\n\t      en: 'Global mixin for getting current language',\n\t      ru: 'Глобальный миксин для получения текущего языка'\n\t    },\n\t    'transStruct': {\n\t      en: 'Translations file structure',\n\t      ru: 'Структура хранения переводов'\n\t    },\n\t\n\t    'ph1': {\n\t      en: 'This example implements the skeleton application with public and admistrative sections',\n\t      ru: 'Данный пример реализует скелет приложения с публичной и административной секциями.'\n\t    },\n\t    'ph2': {\n\t      en: 'This is the public section.',\n\t      ru: 'В данный момент вы находитесь в публичной части приложения.'\n\t    },\n\t    'ph3': {\n\t      en: 'This feature enabled for the public section of this example app. It means that VueLocalize will add leading language part automatically to all paths of the public section.',\n\t      ru: 'Для публичной части этого приложения включена автоматическая локалиция роутов. Это означает, что плагин VueLocalize будет автоматически добавлять языковой параметр в начало пути для всех роутов публичной секции.'\n\t    },\n\t    'ph4': {\n\t      en: 'If you\\'ll try to switching between',\n\t      ru: 'Если вы попробуете переходить между страницами'\n\t    },\n\t    'ph5': {\n\t      en: 'pages in Russian, you\\'ll see that each route path contains the leading language part %rlRu%.',\n\t      ru: 'предварительно выбрав русский язык, то увидите, что в начале адреса каждого роута добавлен языковой параметр %rlRu%.'\n\t    },\n\t    'ph6': {\n\t      en: 'Only thing you have to do for enable this feature is just add %locTrue% into the root-level route in the router config',\n\t      ru: 'Автоматическая локализация роутов включается добавлением опции %locTrue% в роут верхнего уровня.'\n\t    },\n\t    'ph7': {\n\t      en: 'How it looks like:',\n\t      ru: 'Выглядит это так:'\n\t    },\n\t    'ph8': {\n\t      en: 'In the VueLocalize config of this example app, English defined as default application language:',\n\t      ru: 'В этом примере в конфигурационном файле плагина VueLocalize в качестве языка по умолчанию определен английский язык:'\n\t    },\n\t    'ph9': {\n\t      en: 'If you\\'ll switched to English and try to walking between',\n\t      ru: 'Если вы переключитесь на английский и попробуете переходить между страницами'\n\t    },\n\t    'ph10': {\n\t      en: ', you\\'ll see that there is no leading language in paths.',\n\t      ru: ', то увидите, что на английском языке начальный языковой параметр отсутствует.'\n\t    },\n\t    'ph11': {\n\t      en: 'This behaviour achieved by setting %defaultLanguageRouteFalse% in the config of the VueLocalize plugin.',\n\t      ru: 'Это достигается установкой %defaultLanguageRouteFalse% в конфиге плагина локализации VueLocalize.'\n\t    },\n\t    'ph12': {\n\t      en: 'Set this option to %true% if you need to add leading language part for all languages including default.',\n\t      ru: 'Если установить эту опцию в %true%, то начальный языковой параметр будет добавляться в адреса роутов на любом языке, включая язык по умолчанию.'\n\t    },\n\t    'ph13': {\n\t      en: 'VueLocalize transforms router config automatically and recursively cloning root-level routes having %locTrue% option.',\n\t      ru: 'Плагин VueLocalize автоматически трансформирует конфиг роутера, рекурсивно клонируя роуты верхнего уровня имеющие опцию %locTrue%'\n\t    },\n\t    'ph14': {\n\t      en: 'E.g. sub route of this page defined with name %rn-features% and path %rp-features%',\n\t      ru: 'Например саброут этой страницы определен с именем %rn-features% и адресом %rp-features%'\n\t    },\n\t    'ph15': {\n\t      en: 'After transformation by the VueLocalize plugin, the root-level route %rr% will be duplicated for each language with all nested sub routes.',\n\t      ru: 'После преобразования плагином VueLocalize, корневой роут %rr% будет продублирован для каждого языка со всем вложенными саброутами.'\n\t    },\n\t    'ph16': {\n\t      en: 'So there are two routes for this page now, one for the Englis and other one for the Russian, named %en-features% and %ru-features% respectively.',\n\t      ru: 'Таким образом для этой страницы теперь существует два роута, один для английского языка, другой - для русского, с именами %en-features% и %ru-features% соответственно.'\n\t    },\n\t    'ph17': {\n\t      en: 'The question arises: how we should to form routes names for current language to use in %v-link% directive to make navigation properly?',\n\t      ru: 'Возникает вопрос: как формировать имена роутов под текущий язык для использования в %v-link% чтобы реализовать правильно работающую навигацию?'\n\t    },\n\t    'ph18': {\n\t      en: 'The VueLocalize plugin provides the special function-wrapper %lRoute% for this purpose.',\n\t      ru: 'Для этого плагин VueLocalize предоставляет глобальную функцию-обертку для имен роутов %lRoute%'\n\t    },\n\t    'ph19': {\n\t      en: 'You can pass initial route name into %v-link% as they defined in router config, but wrapped with %lRoute%.',\n\t      ru: 'Подставляйте в %v-link% исходные имена роутов так как они определены в конфиге роутера, оборачивая их в %lRoute%.'\n\t    },\n\t    'ph20': {\n\t      en: 'Then the navigation links with %v-link% will always be correct regardless of current language.',\n\t      ru: 'Тогда каким бы ни был текущий язык, навигационные ссылки c %v-link% всегда будут правильные.'\n\t    },\n\t    'ph21': {\n\t      en: 'Example:',\n\t      ru: 'Пример:'\n\t    },\n\t    'ph22': {\n\t      en: 'and, you can specify the language code as the second argument if need to get link to a page in other (than current) language:',\n\t      ru: 'а еще можно указать код языка вторым параметром если необходимо получить ссылку для языка отличного от текущего:'\n\t    },\n\t    'ph23': {\n\t      en: 'However, sometimes it\\'s necessary to get the path of the current route for another language.',\n\t      ru: 'Однако иногда надо получить адрес текущего роута для другого языка.'\n\t    },\n\t    'ph24': {\n\t      en: 'There is the global function %lRoutePath% for this.',\n\t      ru: 'Для этого в плагине VueLocalize существует глобальная функция %lRoutePath%.'\n\t    },\n\t    'ph25': {\n\t      en: 'A detailed description you can find in the documentation, and an example of usage in the source codes of this application on githab in the LanguageSelector.vue file.',\n\t      ru: 'Подробное описание можно найти в документации, а пример использования в исходных кодах этого приложения на гитхабе в файле LanguageSelector.vue.'\n\t    },\n\t    'ph26': {\n\t      en: 'Switching the language at this page performs not only reactive translation of all phrases of interface, but also changes the route path.',\n\t      ru: 'При переключении языка этой страницы происходит не только реактивный перевод всех фраз интерфейса, но и смена роута.'\n\t    },\n\t    'ph27': {\n\t      en: 'However, both routes of this page have the same Vue instance in %component% field.',\n\t      ru: 'Однако, оба роута этой страницы имеют один и тотже экземпляр компоненты в свойстве %component%.'\n\t    },\n\t    'ph28': {\n\t      en: 'So VueRouter will not activate the component again but will reuse it, and %dataObj% in component will not be affected.',\n\t      ru: 'А следовательно VueRouter не будет реактивировать компоненту заново, а переиспользует ее и объект %dataObj% останется без изменений.'\n\t    },\n\t    'ph29': {\n\t      en: 'It should be noted that triggering of the VueRouter %dataHook% hook is inevitably in this case.',\n\t      ru: 'Здесь надо отметить, что в этом случае неизбежно срабатывание хука %dataHook%.'\n\t    },\n\t    'ph30': {\n\t      en: 'If you have this hook defined for retrieving some data which shouldn\\'t be affected with language changing, or just it is necessary to avoid data reloading, you can use the %isJustLangSw% gobal function inside the %dataHook% hook, passing transition object. Then you can perform data loading only if fucntion returned %false%.',\n\t      ru: 'В случае если у вас определен этот хук и в нем происходит получение каких-то данных, на которые нельзя влиять при переключении языка или же просто необходимо избежать повторного их получения, можно воспользоваться глобальной функцией плагина %isJustLangSw% внутри хука, передав в нее объект %transtion%, и вызывать получение данных только если функция вернула %false%.'\n\t    },\n\t    'ph31': {\n\t      en: 'For exapmple:',\n\t      ru: 'Например:'\n\t    },\n\t    'ph32': {\n\t      en: 'Since the current application language is the Veux state, which in turn follows the Vue reactivity principles, all phrases will translated reactively each time when current language was changed.',\n\t      ru: 'Поскольку текущий язык приложения является состоянием Vuex, который в свою очередь следует реактивным приципам Vue, перевод всех фраз интерфейса при смене языка будет происходить реактивно.'\n\t    },\n\t    'ph33': {\n\t      en: 'Technically any of the variants below can be used:',\n\t      ru: 'При переводе тайтла страницы технически можно использовать любой из следующих вариантов:'\n\t    },\n\t    'ph34': {\n\t      en: 'However the first two variants are shit because of braces flashing on page loading and reloading',\n\t      ru: 'Однако первые два использовать нежелательно из-за отображения фигурных скобок при загрузке или перезагрузке страницы.'\n\t    },\n\t    'ph35': {\n\t      en: 'If it is necessary to publish an application when there is no complete translations for all languages, but there is complete translation into at least one language, you can specify this language as a fallback.',\n\t      ru: 'При необходимости опубликовать приложение на этапе, когда еще нет полных переводов на все языки, но на какой-то один перевод выполнен полностью, можно задать этот язык как запасной.'\n\t    },\n\t    'ph36': {\n\t      en: 'Then in other languages with incomplete translation, phrases which are untranslated yet, will be translated into fallback language, and users will not see incomprehensible identifiers.',\n\t      ru: 'Тогда на других языках с незавершенным переводом, фразы, которые еще не переведены, будут переводиться на этот запасной язык и пользователи не будут видеть непонятные идентификаторы.'\n\t    },\n\t    'ph37': {\n\t      en: 'Set to %true% the corresponding option in the VueLocalize config to activate this feature:',\n\t      ru: 'Чтобы включить функцию перевода на запасной язык установите соответствующую опцию в конфигурационном файле плагина в %true%:'\n\t    },\n\t    'ph38': {\n\t      en: 'And define exact fallback language in another corresponding option:',\n\t      ru: 'И определите собственно какой язык использовать как запасной в другой соответствующей опции:'\n\t    },\n\t    'ph39': {\n\t      en: 'VueLocalize saves selected language in a local storage of browser and provides the ability to affect on application behaviour at transitions from localized routes to not localized.',\n\t      ru: 'Плагин сохраняет выбранный пользователем язык в локальном хранилище браузера и предоставляет возможность управления поведением приложения при переходе от локализованных роутов к роутам не имеющим начального языкового параметра.'\n\t    },\n\t    'ph40': {\n\t      en: 'Localized route clearly defines the language of the page, so there is no need to get stored language from the local storage for those pages.',\n\t      ru: 'Локализованные роуты явно определяют язык страницы приложения, поэтому для таких страниц не требуется доставать из локального хранилища сохраненное значение.'\n\t    },\n\t    'ph41': {\n\t      en: 'But when initialization starts with not localized route, plugin will use the language saved in local storage or default one.',\n\t      ru: 'Но при инициализации приложения когда начальный роут не имеет языкового параметра, плагин будет использовать язык сохраненный в локальном хранилище или же язык по умолчанию.'\n\t    },\n\t    'ph42': {\n\t      en: 'And there is the option %resaveOnLocalizedRoutesCode%, which specifies is there the need to rewrite value, saved in local storage, at transitions to localized routes.',\n\t      ru: 'Опция %resaveOnLocalizedRoutesCode% указывает плагину надо ли перезаписывать сохраненное в локальном хранилище значение при переключении языка на локализованных роутах.'\n\t    },\n\t    'ph43': {\n\t      en: 'For example, if app must remember the language selected in administrative section and switching the labguages in pucic section with localized routes shouldn\\'t affect this choice, set this option to %false%.',\n\t      ru: 'Например, если приложение должно помнить язык выбранный в административной панели и смена языков на публичной части, где в адресах роутов присутствует языковой параметр, не должна влиять на этот выбор, то установите эту опцию в %false%.'\n\t    },\n\t    'ph44': {\n\t      en: 'Otherwise if you need to adjust transparent behaviour at language switching, set it to %true%',\n\t      ru: 'Если же наоборот необходимо задать прозрачное поведение приложения при смене языка, установите в %true%'\n\t    },\n\t    'ph45': {\n\t      en: 'VueLocalize provides global mixin for retrieving current language inside of any Vue instance of your application. It\\'s in fact just a proxy to a corresponding Vuex getter.',\n\t      ru: 'Плагин предоставляет глобальный миксин для получения текущего языка в любой компоненте приложения, который является по сути прокси на Vuex getter.'\n\t    },\n\t    'ph46': {\n\t      en: 'You can get current language via %currentLanguage% in templates and via %thisCurrentLanguage% in methods.',\n\t      ru: 'Получить текущий язык можно через %currentLanguage% в темплейте компоненты и через %thisCurrentLanguage% в методах.'\n\t    },\n\t    'ph47': {\n\t      en: 'or',\n\t      ru: 'или'\n\t    },\n\t    'ph48': {\n\t      en: 'and',\n\t      ru: 'и'\n\t    },\n\t    'ph49': {\n\t      ru: 'Попробуйте накрутить счетчик и переключить язык:',\n\t      en: 'Try to increment the counter below and then change the language:'\n\t    }\n\t\n\t  }\n\t\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar currentTitle = exports.currentTitle = function currentTitle(state) {\n\t  return state.rootApp.currentTitle;\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(22);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutationTypes = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  currentTitle: 'defaultTitle'\n\t};\n\t\n\tvar mutations = (0, _defineProperty3.default)({}, _mutationTypes.SET_TITLE, function (state, title) {\n\t  state.currentTitle = title;\n\t});\n\t\n\texports.default = {\n\t  state: state,\n\t  mutations: mutations\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar SET_TITLE = exports.SET_TITLE = 'SET_TITLE';\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _getters = __webpack_require__(8);\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.mixin({\n\t  vuex: {\n\t    getters: {\n\t      currentTitle: _getters.currentTitle\n\t    }\n\t  }\n\t});\n\t\n\texports.default = {\n\t  store: _store2.default,\n\t  ready: function ready() {\n\t    this.$vueLocalizeInit(this.$route);\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {};\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _LanguageSelector = __webpack_require__(3);\n\t\n\tvar _LanguageSelector2 = _interopRequireDefault(_LanguageSelector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      mobileMenuCollapsed: false\n\t    };\n\t  },\n\t\n\t  components: {\n\t    LanguageSelector: _LanguageSelector2.default\n\t  },\n\t  methods: {}\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Header = __webpack_require__(40);\n\t\n\tvar _Header2 = _interopRequireDefault(_Header);\n\t\n\tvar _Aside = __webpack_require__(39);\n\t\n\tvar _Aside2 = _interopRequireDefault(_Aside);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    CompHeader: _Header2.default,\n\t    CompAside: _Aside2.default\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {};\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _lodash = __webpack_require__(25);\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      opened: false\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    toggle: function toggle() {\n\t      this.opened = !this.opened;\n\t    },\n\t    changeLanguage: function changeLanguage(code) {\n\t      this.toggle();\n\t      if (!this.$route.localized) {\n\t        this.$store.dispatch('SET_APP_LANGUAGE', code);\n\t      } else {\n\t        var oldRouteName = this.$route.name;\n\t        var routeName = (0, _lodash.replace)(oldRouteName, /^[a-z]{2}/g, code);\n\t        this.$router.go({ name: routeName });\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _LanguageSelector = __webpack_require__(3);\n\t\n\tvar _LanguageSelector2 = _interopRequireDefault(_LanguageSelector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    LanguageSelector: _LanguageSelector2.default\n\t  }\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Header = __webpack_require__(45);\n\t\n\tvar _Header2 = _interopRequireDefault(_Header);\n\t\n\tvar _Footer = __webpack_require__(44);\n\t\n\tvar _Footer2 = _interopRequireDefault(_Footer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    PublicHeader: _Header2.default,\n\t    PublicFooter: _Footer2.default\n\t  }\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      counter: 0,\n\t      vars: {\n\t        translate: '',\n\t\n\t        localizeRouteExample: '<a v-link=\"{name: $localizeRoute(\\'features\\')}\">',\n\t        localizeRouteExampleExactLang: '<a v-link=\"{name: $localizeRoute(\\'features\\', \\'de\\')}\">',\n\t\n\t        'filterExample': '{{ \\'projectName\\' | translate }}',\n\t        'directCallExample': '{{ $translate(\\'projectName\\') }}',\n\t        'directCallExample2': '<span v-text=\"$translate(\\'projectName\\')\"></span>',\n\t        'directiveExample': '<span v-localize=\"{path: \\'projectName\\'}\"></span>',\n\t\n\t        'injectViaFilter': '{{ \\'phrase-with-vars\\' | translate injectVars }}',\n\t        'injectViaDirectCall': '{{ $translate(\\'phrase-with-vars\\', injectVars) }}',\n\t        'injectViaDirective': '<span v-localize=\"{path: \\'phrase-with-vars\\', vars: injectVars}\"></span>',\n\t\n\t        'exaxtExampleFilter': '{{ \\'projectName\\' | translate null \\'en\\' }}',\n\t        'exaxtExampleCall': '{{ $translate(\\'projectName\\', null, \\'en\\') }}',\n\t        'exaxtExampleDirective': '<span v-localize=\"{path: \\'projectName\\', lang: \\'en\\'}\"></span>',\n\t\n\t        'titleEx1': '<title>{{ $translate(currentTitle) }}</title>',\n\t        'titleEx2': '<title>{{ currentTitle | translate }}</title>',\n\t        'titleEx3': '<title v-localize=\"{path: currentTitle}\"></title>',\n\t        'titleEx4': '<title v-text=\"$translate(currentTitle)\"></title>'\n\t      },\n\t      injectVars: {\n\t        '%foo%': 'Foo',\n\t        '%bar%': 'Bar',\n\t\n\t        '%v-link%': '<code>v-link</code>',\n\t        '%translate%': '<code>translate</code>',\n\t        '%tCall%': '<code>$translate()</code>',\n\t        '%v-localize%': '<code>v-localize</code>',\n\t        '%link-about%': '',\n\t        '%link-features%': '',\n\t        '%rlRu%': '<code>/ru</code>',\n\t        '%locTrue%': '<code>localized: true</code>',\n\t        '%true%': '<code>true</code>',\n\t        '%false%': '<code>false</code>',\n\t        '%rn-features%': '<code>features</code>',\n\t        '%rp-features%': '<code>/features</code>',\n\t        '%rr%': '<code>/</code>',\n\t        '%en-features%': '<code>en_features</code>',\n\t        '%ru-features%': '<code>ru_features</code>',\n\t        '%lRoute%': '<code>$localizeRoute()</code>',\n\t        '%lRoutePath%': '<code>$localizeRoutePath($route, language)</code>',\n\t        '%component%': '<code>component:</code>',\n\t        '%dataObj%': '<code>$data</code>',\n\t        '%dataHook%': '<code>data()</code>',\n\t        '%isJustLangSw%': '<code>$isJustLanguageSwitching(transition)</code>',\n\t        '%transtion%': '<code>transition</code>',\n\t        '%resaveOnLocalizedRoutesCode%': '<code>resaveOnLocalizedRoutes</code>',\n\t        '%currentLanguage%': '<code>currentLanguage</code>',\n\t        '%thisCurrentLanguage%': '<code>this.currentLanguage</code>',\n\t        '%defaultLanguageRouteFalse%': '<code>defaultLanguageRoute: false</code>'\n\t      }\n\t    };\n\t  },\n\t\n\t  computed: {\n\t    isEn: function isEn() {\n\t      return this.currentLanguage === 'en';\n\t    },\n\t    isRu: function isRu() {\n\t      return this.currentLanguage === 'ru';\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  route: {\n\t    data: function data(transition) {\n\t      if (this.$isJustLanguageSwitching(transition)) {\n\t        console.log('language switching');\n\t      } else {\n\t          console.log('transition from another route');\n\t        }\n\t\n\t      transition.next();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(23), __esModule: true };\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _defineProperty = __webpack_require__(21);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (obj, key, value) {\n\t  if (key in obj) {\n\t    (0, _defineProperty2.default)(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\t\n\t  return obj;\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(24);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 4.6.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash -d -o ./foo/lodash.js`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.6.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+',\n\t    rsUpper + '+',\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n\t    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[mapTag] = cloneableTags[numberTag] =\n\t  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n\t  cloneableTags[setTag] = cloneableTags[stringTag] =\n\t  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n\t  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n\t  cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n\t    ? exports\n\t    : undefined;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n\t    ? module\n\t    : undefined;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports)\n\t    ? freeExports\n\t    : undefined;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal ||\n\t    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n\t      freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {...*} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Creates a new array concatenating `array` with `other`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The first array to concatenate.\n\t   * @param {Array} other The second array to concatenate.\n\t   * @returns {Array} Returns the new concatenated array.\n\t   */\n\t  function arrayConcat(array, other) {\n\t    var index = -1,\n\t        length = array.length,\n\t        othIndex = -1,\n\t        othLength = other.length,\n\t        result = Array(length + othLength);\n\t\n\t    while (++index < length) {\n\t      result[index] = array[index];\n\t    }\n\t    while (++othIndex < othLength) {\n\t      result[index++] = other[othIndex];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t   * `comparator` to determine the extremum value.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The iteratee invoked per iteration.\n\t   * @param {Function} comparator The comparator used to compare values.\n\t   * @returns {*} Returns the extremum value.\n\t   */\n\t  function baseExtremum(array, iteratee, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          current = iteratee(value);\n\t\n\t      if (current != null && (computed === undefined\n\t            ? current === current\n\t            : comparator(current, computed)\n\t          )) {\n\t        var computed = current,\n\t            result = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` without support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the new array of key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Compares values to sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function compareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.orderBy` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t   * of corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * (order == 'desc' ? -1 : 1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a valid array-like index.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t   */\n\t  function isIndex(value, length) {\n\t    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t    length = length == null ? MAX_SAFE_INTEGER : length;\n\t    return value > -1 && value % 1 == 0 && value < length;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getPrototypeOf = Object.getPrototypeOf,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var Map = getNative(context, 'Map'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var mapCtorString = Map ? funcToString.call(Map) : '',\n\t        setCtorString = Set ? funcToString.call(Set) : '',\n\t        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chaining. Methods that operate on and return arrays, collections, and\n\t     * functions can be chained together. Methods that retrieve a single value or\n\t     * may return a primitive value will automatically end the chain sequence and\n\t     * return the unwrapped value. Otherwise, the value must be unwrapped with\n\t     * `_#value`.\n\t     *\n\t     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n\t     * may be enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization to merge iteratee calls; this avoids the creation\n\t     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n\t     * Sections of a chain sequence qualify for shortcut fusion if the section is\n\t     * applied to an array of at least two hundred elements and any iteratees\n\t     * accept only one argument. The heuristic for whether a section qualifies\n\t     * for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatten`, `flattenDeep`, `flattenDepth`, `flip`, `flow`, `flowRight`,\n\t     * `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`, `intersection`,\n\t     * `intersectionBy`, `intersectionWith`, `invert`, `invertBy`, `invokeMap`,\n\t     * `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`,\n\t     * `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`, `method`,\n\t     * `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`, `orderBy`,\n\t     * `over`, `overArgs`, `overEvery`, `overSome`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `pickBy`, `plant`, `property`, `propertyOf`, `pull`,\n\t     * `pullAll`, `pullAllBy`, `pullAllWith`, `pullAt`, `push`, `range`,\n\t     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,\n\t     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n\t     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,\n\t     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,\n\t     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `update`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,\n\t     * `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `each`, `eachRight`,\n\t     * `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`, `floor`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`, `includes`,\n\t     * `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`, `isArrayBuffer`,\n\t     * `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`, `isDate`,\n\t     * `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`, `isFinite`,\n\t     * `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`, `isMatchWith`,\n\t     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,\n\t     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isSet`, `isString`,\n\t     * `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`,\n\t     * `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`, `now`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toInteger`, `toJSON`, `toLength`, `toLower`,\n\t     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,\n\t     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,\n\t     * `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @returns {Object} Returns the new hash object.\n\t     */\n\t    function Hash() {}\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(hash, key) {\n\t      return hashHas(hash, key) && delete hash[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(hash, key) {\n\t      if (nativeCreate) {\n\t        var result = hash[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(hash, key) {\n\t      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function hashSet(hash, key, value) {\n\t      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function MapCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': Map ? new Map : [],\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapGet(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.get(key) : assocGet(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.has(key) : assocHas(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n\t      } else if (Map) {\n\t        data.map.set(key, value);\n\t      } else {\n\t        assocSet(data.map, key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a set cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.push(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The set cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function cacheHas(cache, value) {\n\t      var map = cache.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        return hash[value] === HASH_UNDEFINED;\n\t      }\n\t      return map.has(value);\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the set cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var map = this.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        hash[value] = HASH_UNDEFINED;\n\t      }\n\t      else {\n\t        map.set(value, HASH_UNDEFINED);\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function Stack(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = { 'array': [], 'map': null };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocDelete(array, key) : data.map['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocGet(array, key) : data.map.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocHas(array, key) : data.map.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache object.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      if (array) {\n\t        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n\t          assocSet(array, key, value);\n\t        } else {\n\t          data.array = null;\n\t          data.map = new MapCache(array);\n\t        }\n\t      }\n\t      var map = data.map;\n\t      if (map) {\n\t        map.set(key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Removes `key` and its value from the associative array.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function assocDelete(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = array.length - 1;\n\t      if (index == lastIndex) {\n\t        array.pop();\n\t      } else {\n\t        splice.call(array, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the associative array value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function assocGet(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      return index < 0 ? undefined : array[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if an associative array value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function assocHas(array, key) {\n\t      return assocIndexOf(array, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `key` is found in `array`\n\t     * of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the associative array `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function assocSet(array, key, value) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        array.push([key, value]);\n\t      } else {\n\t        array[index][1] = value;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function baseCastPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            result = baseAssign(result, value);\n\t            return isFull ? copySymbols(value, result) : result;\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return (isFull && !isArr) ? copySymbols(value, result) : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support for\n\t     * excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && isArrayLikeObject(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack,\n\t              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\t\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      var type = typeof value;\n\t      if (type == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value &&\n\t            (value !== undefined || (key in Object(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      var props = (isArray(source) || isTypedArray(source))\n\t        ? undefined\n\t        : keysIn(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, !customizer);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, !customizer);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      stack['delete'](srcValue);\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), getIteratee());\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property names.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key) {\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (lastIndex == length || index != previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = baseCastPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[last(path)];\n\t            }\n\t          }\n\t          else {\n\t            delete array[index];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array) {\n\t      return baseSortedUniqBy(array);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniqBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniqBy(array, iteratee) {\n\t      var index = 0,\n\t          length = array.length,\n\t          value = array[0],\n\t          computed = iteratee ? iteratee(value) : value,\n\t          seen = computed,\n\t          resIndex = 1,\n\t          result = [value];\n\t\n\t      while (++index < length) {\n\t        value = array[index],\n\t        computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!eq(computed, seen)) {\n\t          seen = computed;\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t      object = parent(object, path);\n\t      var key = last(path);\n\t      return (object != null && has(object, key)) ? delete object[key] : true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property names.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map) {\n\t      return arrayReduce(mapToArray(map), addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set) {\n\t      return arrayReduce(setToArray(set), addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object) {\n\t      return copyObjectWith(source, props, object);\n\t    }\n\t\n\t    /**\n\t     * This function is like `copyObject` except that it accepts a function to\n\t     * customize copied values.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObjectWith(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = typeof customizer == 'function'\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols ? strSymbols[0] : string.charAt(0),\n\t            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string)), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getPlaceholder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getPlaceholder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new invoker function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars === undefined ? ' ' : (chars + '');\n\t\n\t      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? stringToArray(result).slice(0, padLength).join('')\n\t        : result.slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newArgPos = argPos ? copyArray(argPos) : undefined,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, newArgPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var index = -1,\n\t          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isUnordered) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask | UNORDERED_COMPARE_FLAG, stack.set(object, other));\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * `baseIteratee`. If arguments are provided the chosen function is invoked\n\t     * with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getPlaceholder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = getOwnPropertySymbols || function() {\n\t      return [];\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n\t    if ((Map && getTag(new Map) != mapTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : null,\n\t            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case mapCtorString: return mapTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasFunc(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        if (object != null) {\n\t          path = last(path);\n\t          result = hasFunc(object, path);\n\t        }\n\t      }\n\t      var length = object ? object.length : undefined;\n\t      return result || (\n\t        !!length && isLength(length) && isIndex(path, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object))\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototypeOf(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (typeof value == 'number') {\n\t        return true;\n\t      }\n\t      return !isArray(value) &&\n\t        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t          (object != null && value in Object(object)));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return type == 'number' || type == 'boolean' ||\n\t        (type == 'string' && value != '__proto__') || value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * modify function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = copyArray(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function stringToPath(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=0] The length of each chunk.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size) {\n\t      size = nativeMax(toInteger(size), 0);\n\t\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var concat = rest(function(array, values) {\n\t      if (!isArray(array)) {\n\t        array = array == null ? [] : [Object(array)];\n\t      }\n\t      values = baseFlatten(values, 1);\n\t      return arrayConcat(array, values);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n\t     * from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = arrayMap(baseFlatten(indexes, 1), String);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(compareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n\t     * to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniqBy(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n\t     * The result of such method chaining must be unwrapped with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.flatMap`.\n\t     *\n\t     * @name flatMap\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _([1, 2]).flatMap(duplicate).value();\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function wrapperFlatMap(iteratee) {\n\t      return this.map(iteratee).flatten();\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of flattened values by running each element in `collection`\n\t     * through `iteratee` and concating its result to the other mapped values.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n\t     * for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `1` then `2`\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `2` then `1`\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of elements responsible for generating the key.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n\t     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it's\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n\t     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n\t     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n\t     * and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=0] The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = baseClamp(toInteger(n), 0, length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by, specified individually or in arrays.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          leading = false,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function flush() {\n\t        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        cancel();\n\t        return result;\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!lastCalled && !maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled);\n\t\n\t          var isCalled = (remaining <= 0 || remaining > maxWait) &&\n\t            (leading || maxTimeoutId);\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = args.slice(0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty collection or object. A value is considered\n\t     * empty if it's an `arguments` object, array, string, or jQuery-like collection\n\t     * with a length of `0` or has no own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) ||\n\t            isFunction(value.splice) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MAX_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(3.14);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(funcToString.call(value));\n\t      }\n\t      return isObjectLike(value) &&\n\t        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototypeOf(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      var remainder = value % 1;\n\t      return value === value ? (remainder ? value - remainder : value) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3);\n\t     * // => 3\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3');\n\t     * // => 3\n\t     */\n\t    function toNumber(value) {\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string if it's not one. An empty string is returned\n\t     * for `null` and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source objects to the destination\n\t     * object. Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a `properties`\n\t     * object is given its own enumerable properties are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable properties of source objects to the\n\t     * destination object for all destination properties that resolve to `undefined`.\n\t     * Source objects are applied from left to right. Once a property is set,\n\t     * additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by\n\t     * explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` through `iteratee`.\n\t     * The corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`. The iteratee is invoked with\n\t     * three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee is invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable properties of source objects into the destination\n\t     * object. Source properties that resolve to `undefined` are skipped if a\n\t     * destination value exists. Array and plain object properties are merged\n\t     * recursively.Other objects and value types are overridden by assignment.\n\t     * Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined` merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to omit, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), String);\n\t      return basePick(object, baseDifference(keysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable properties of `object` that `predicate`\n\t     * doesn't return truthy for. The predicate is invoked with two arguments:\n\t     * (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to pick, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, baseFlatten(props, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it's invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        var result = get(object, path);\n\t        object = parent(object, path);\n\t      } else {\n\t        result = object == null ? undefined : object[path];\n\t      }\n\t      if (result === undefined) {\n\t        result = defaultValue;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable key-value pairs for `object` which\n\t     * can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairs(object) {\n\t      return baseToPairs(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable key-value pairs for\n\t     * `object` which can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairsIn(object) {\n\t      return baseToPairs(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n\t     * a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = typeof target == 'string' ? target : (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      return string + createPadding(string, length, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      return createPadding(string, length, chars) + string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      string = toString(string);\n\t      n = toInteger(n);\n\t\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the new array of string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      return toString(string).split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + capitalize(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar');\n\t     * // => '--foo-bar'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar');\n\t     * // => '--FOO-BAR'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars);\n\t\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, stringToArray(chars)))\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options=({})] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? toString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? strSymbols.slice(0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => logs 'clicked docs' when clicked\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` invoking the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name the created callback returns the\n\t     * property value for a given element. If `func` is an object the created\n\t     * callback returns `true` for elements that contain the equivalent object\n\t     * properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n\t     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n\t     *   return !p ? callback(func) : function(object) {\n\t     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age > 36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns its nth argument.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     *\n\t     * func('a', 'b', 'c');\n\t     * // => 'b'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return function() {\n\t        return arguments[n];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments provided\n\t     * to the created function and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = baseCastFunction(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      var result;\n\t      if (augend === undefined && addend === undefined) {\n\t        return 0;\n\t      }\n\t      if (augend !== undefined) {\n\t        result = augend;\n\t      }\n\t      if (addend !== undefined) {\n\t        result = result === undefined ? addend : (result + addend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return sum(array) / (array ? array.length : 0);\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    function subtract(minuend, subtrahend) {\n\t      var result;\n\t      if (minuend === undefined && subtrahend === undefined) {\n\t        return 0;\n\t      }\n\t      if (minuend !== undefined) {\n\t        result = minuend;\n\t      }\n\t      if (subtrahend !== undefined) {\n\t        result = result === undefined ? subtrahend : (result - subtrahend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Avoid inheriting from `Object.prototype` when possible.\n\t    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\t\n\t    // Add functions to the `MapCache`.\n\t    MapCache.prototype.clear = mapClear;\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `SetCache`.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Add functions to the `Stack` cache.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.flatMap = wrapperFlatMap;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose lodash on the free variable `window` or `self` when available. This\n\t  // prevents errors in cases where lodash is loaded by a script tag in the presence\n\t  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(52)(module), (function() { return this; }())))\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"col-sm-3 col-md-2 sidebar\\\"> <ul class=\\\"nav nav-sidebar\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'admin.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-settings')}\\\">{{ 'admin.nav.settings' | translate }}</a></li> </ul> </div>\";\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"> <div class=container-fluid> <div class=navbar-header> <button type=button class=\\\"navbar-toggle collapsed\\\" @click=\\\"mobileMenuCollapsed = !mobileMenuCollapsed\\\"> <span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span> </button> <a class=navbar-brand v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'projectName' | translate }}</a> </div> <div id=navbar class=\\\"navbar-collapse collapse\\\" :class=\\\"{'in': mobileMenuCollapsed}\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'admin.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-settings')}\\\">{{ 'admin.nav.settings' | translate }}</a></li> <language-selector></language-selector> </ul> </div> </div> </nav>\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<comp-header v-ref:header></comp-header> <div class=container-fluid> <div class=row> <comp-aside v-ref:aside></comp-aside> <div class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\\\"> <router-view></router-view> </div> </div> </div>\";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h1>{{ 'admin.home.title' | translate }}</h1> <p>{{ 'admin.home.helloText' | translate }}</p> <p>{{ 'admin.home.helloText2' | translate }}</p> <p>{{ 'admin.home.helloText3' | translate }}</p>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h1>{{ 'admin.settings.title' | translate }}</h1>\";\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<li class=dropdown :class=\\\"{'open': opened}\\\"> <a href=javascript:; @click=toggle>{{ currentLanguage | uppercase }} <span class=caret></span></a> <ul class=dropdown-menu> <li v-for=\\\"(code, config) in $localizeConf.languages\\\" v-if=\\\"code !== currentLanguage && config.enabled !== false\\\"> <a href=\\\"{{ $localizeRoutePath($route, code) }}\\\" @click.prevent=changeLanguage(code)> {{ code | uppercase }} | {{ 'global.lang.' + config.key | translate null code }}<br/> <small class=text-muted>{{ 'global.lang.' + config.key | translate null currentLanguage }}</small> </a> </li> </ul> </li>\";\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<footer class=footer> <p>&copy; 2016 {{ 'projectName' | translate }}</p> </footer>\";\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"header clearfix\\\"> <nav> <ul class=\\\"nav nav-pills pull-right\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('public-index'), exact:true}\\\">{{ 'public.header.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'public.header.nav.admin' | translate }}</a></li> <language-selector></language-selector> </ul> </nav> <h3 class=text-muted><a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'projectName' | translate }}</a></h3> </div>\";\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=container style=max-width:none!important> <public-header></public-header> <router-view></router-view> <public-footer></public-footer> </div>\";\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=jumbotron> <h2>{{ 'public.err404.title' | translate }}</h2> </div>\";\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row marketing\\\"> <div class=col-sm-12> <h1>{{ 'f.title' | translate }}</h1> </div> <div class=col-sm-12> <ul> <li>{{ 'f.intro' | translate }}</li> <li>{{ 'f.arl' | translate }}</li> <ul> <li>{{ 'f.arlActivate' | translate }}</li> <li>{{ 'f.dlr' | translate }}</li> <li>{{{ 'f.lroute' | translate injectVars }}}</li> <li>{{ 'f.lrp' | translate }}</li> <li>{{ 'f.cReusing' | translate }} </li> </ul> <li>{{ 'f.uiTrans' | translate }}</li> <ul> <li>{{ 'f.reactTrans' | translate }}</li> <li>{{{ 'f.transFilter' | translate injectVars }}}</li> <li>{{{ 'f.transCall' | translate injectVars }}}</li> <li>{{{ 'f.transDir' | translate injectVars }}}</li> <li>{{ 'f.varInject' | translate }}</li> <li>{{ 'f.transExact' | translate }}</li> <li>{{ 'f.transTitle' | translate }}</li> <li>{{ 'f.fallbackLang' | translate }}</li> </ul> <li>{{{ 'f.locStor' | translate injectVars }}}</li> <li>{{ 'f.globMix' | translate }}</li> <li>{{ 'f.transStruct' | translate }}</li> </ul> <h1>{{ 'f.intro' | translate }}</h1> {{ 'f.ph1' | translate }}<br/> {{ 'f.ph2' | translate }}<br/><br/> <h1>{{ 'f.arl' | translate }}</h1> {{ 'f.ph3' | translate }}<br/><br/> {{ 'f.ph4' | translate }} <a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a> {{{ 'f.ph5' | translate injectVars }}} <h3>{{ 'f.arlActivate' | translate }}</h3> {{{ 'f.ph6' | translate injectVars }}}<br/> {{ 'f.ph7' | translate }}<br/> <code> ... <br/> export default {<br/> &nbsp;&nbsp;'/': {<br/> &nbsp;&nbsp;&nbsp;&nbsp;component: PublicLayout,<br/> &nbsp;&nbsp;&nbsp;&nbsp;localized: true,<br/> ... </code> <h3>{{ 'f.dlr' | translate }}</h3> {{ 'f.ph8' | translate }}<br/> <code>defaultLanguage: 'en'</code><br/><br/> {{ 'f.ph9' | translate }} <a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a> {{ 'f.ph10' | translate }}<br/><br/> {{{ 'f.ph11' | translate injectVars }}}<br/><br/> {{{ 'f.ph12' | translate injectVars }}}<br/> <h3>{{{ 'f.lroute' | translate injectVars }}}</h3> {{{ 'f.ph13' | translate injectVars }}}<br/><br/> {{{ 'f.ph14' | translate injectVars }}}<br/> {{{ 'f.ph15' | translate injectVars }}} {{{ 'f.ph16' | translate injectVars }}}<br/><br/> {{{ 'f.ph17' | translate injectVars }}}<br/><br/> {{{ 'f.ph18' | translate injectVars }}}<br/><br/> {{{ 'f.ph19' | translate injectVars }}}<br/><br/> {{{ 'f.ph20' | translate injectVars }}}<br/><br/> {{ 'f.ph21' | translate }} <br/><br/> <code>{{ vars.localizeRouteExample }}</code><br/> {{ 'f.ph22' | translate }}<br/> <code>{{ vars.localizeRouteExampleExactLang }}</code> <h3>{{ 'f.lrp' | translate }}</h3> {{ 'f.ph23' | translate }} {{{ 'f.ph24' | translate injectVars }}}<br/><br/> {{ 'f.ph25' | translate }} <h3>{{ 'f.cReusing' | translate }}</h3> {{ 'f.ph26' | translate }}<br/> {{{ 'f.ph27' | translate injectVars }}}<br> {{{ 'f.ph28' | translate injectVars }}}<br/><br/> {{ 'f.ph49' | translate }}<br/><br/> <button class=\\\"btn btn-default btn-lg\\\" @click=counter++>Counter: {{ counter }}</button><br/><br/> <div class=btn-group> <a v-link=\\\"{name: $localizeRoute('features', 'en')}\\\" class=btn :class=\\\"{'btn-primary': isEn, 'btn-default': isRu}\\\">EN</a> <a v-link=\\\"{name: $localizeRoute('features', 'ru')}\\\" class=btn :class=\\\"{'btn-primary': isRu, 'btn-default': isEn}\\\">RU</a> </div><br/><br/> {{{ 'f.ph29' | translate injectVars }}}<br/><br/> {{{ 'f.ph30' | translate injectVars }}}<br/><br/> {{ 'f.ph31' | translate }} <br/> <code> route: {<br/> &nbsp;&nbsp;data: function (transtion) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;if (this.$isJustLanguageSwitching(transition)) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br/> &nbsp;&nbsp;&nbsp;&nbsp;}<br/> &nbsp;&nbsp;&nbsp;&nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;// тут получаем данные<br/> &nbsp;&nbsp;&nbsp;&nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br/> &nbsp;&nbsp;}<br/> } </code> <h1>{{ 'f.uiTrans' | translate }}</h1> <h3>{{ 'f.reactTrans' | translate }}</h3> {{ 'f.ph32' | translate }}<br/><br/><br/> <h3>{{ 'f.transFilter2' | translate }}</h3> <h3><code>{{ vars.filterExample }}</code></h3><br/><br/> <h3>{{ 'f.transCall2' | translate }}</h3> <h3><code>{{ vars.directCallExample }}</code></h3><br/> <h3>{{ 'f.ph47' | translate }}</h3> <h3><code>{{ vars.directCallExample2 }}</code></h3><br/> <br/><br/> <h3>{{ 'f.transDir2' | translate }}</h3> <h3><code>{{ vars.directiveExample }}</code></h3><br/><br/><br/> <h3>{{ 'f.varInject' | translate }}</h3> <h3>{{ 'f.varInjectF' | translate }}</h3> <h3><code>{{ vars.injectViaFilter }}</code></h3><br/><br/> <h3>{{ 'f.varInjectC' | translate }}</h3> <h3><code>{{ vars.injectViaDirectCall }}</code></h3><br/><br/> <h3>{{ 'f.varInjectD' | translate }}</h3> <h5><code>{{ vars.injectViaDirective }}</code></h5><br/><br/> <h3>{{ 'f.transExact' | translate }}</h3> <h3>{{ 'f.transExactF' | translate }}</h3> <h3><code>{{ vars.exaxtExampleFilter }}</code></h3><br/><br/> <h3>{{ 'f.transExactC' | translate }}</h3> <h3><code>{{ vars.exaxtExampleCall }}</code></h3><br/><br/> <h3>{{ 'f.transExactD' | translate }}</h3> <h4><code>{{ vars.exaxtExampleDirective }}</code></h4><br/><br/> <h3>{{ 'f.transTitle' | translate }}</h3> {{ 'f.ph33' | translate }}<br/> <h3> <code> {{ vars.titleEx1 }}<br/><br/> {{ vars.titleEx2 }}<br/><br/> {{ vars.titleEx3 }}<br/><br/> {{ vars.titleEx4 }}<br/><br/> </code> </h3> {{ 'f.ph34' | translate }} <h3>{{ 'f.fallbackLang' | translate }}</h3> {{ 'f.ph35' | translate }} {{ 'f.ph36' | translate }}<br/><br/> {{{ 'f.ph37' | translate injectVars }}}<br/> <code>fallbackOnNoTranslation: true</code><br/><br/> {{ 'f.ph38' | translate }}<br/> <code>fallbackLаnguage: 'en'</code> <h2>{{{ 'f.locStor' | translate injectVars }}}</h2> {{ 'f.ph39' | translate }}<br/> {{ 'f.ph40' | translate }}<br/> {{ 'f.ph41' | translate }} <br/><br/> {{{ 'f.ph42' | translate injectVars }}}<br/><br/> {{{ 'f.ph43' | translate injectVars }}}<br/> {{{ 'f.ph44' | translate injectVars }}} <h2>{{ 'f.globMix' | translate injectVars }}</h2> {{ 'f.ph45' | translate }}<br/> {{{ 'f.ph46' | translate injectVars }}} </div> </div>\";\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=jumbotron> <h2>{{ 'public.index.title' | translate }}</h2> <br/> <p class=lead>{{ 'public.index.jdesc' | translate }}</p> <p>{{ 'public.index.sources' | translate }}</p> <a target=_blank href=https://github.com/Saymon-biz/vue-localize-example>https://github.com/Saymon-biz/vue-localize-example</a> </div>\";\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(26)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(27)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(28)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(15)\n\t__vue_template__ = __webpack_require__(29)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(30)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(32)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(17)\n\t__vue_template__ = __webpack_require__(33)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(18)\n\t__vue_template__ = __webpack_require__(34)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(35)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(19)\n\t__vue_template__ = __webpack_require__(36)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(20)\n\t__vue_template__ = __webpack_require__(37)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.11\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      var fullPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          fullPath = this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        fullPath = path ? path + '' : '';\n\t      }\n\t      return encodeURI(fullPath);\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v0.6.2\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  babelHelpers.createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  babelHelpers.toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  babelHelpers;\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t   *\n\t   * @param {*} obj\n\t   * @return {*}\n\t   */\n\t\n\t  function deepClone(obj) {\n\t    if (Array.isArray(obj)) {\n\t      return obj.map(deepClone);\n\t    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n\t      var cloned = {};\n\t      var keys = Object.keys(obj);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        cloned[key] = deepClone(obj[key]);\n\t      }\n\t      return cloned;\n\t    } else {\n\t      return obj;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var unwatch = vm.$watch('__vuex__', function (a) {\n\t        return a;\n\t      });\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  var devtoolMiddleware = {\n\t    onInit: function onInit(state, store) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:init', store);\n\t      hook.on('vuex:travel-to-state', function (targetState) {\n\t        var currentState = store._vm._data;\n\t        store._dispatching = true;\n\t        Object.keys(targetState).forEach(function (key) {\n\t          currentState[key] = targetState[key];\n\t        });\n\t        store._dispatching = false;\n\t      });\n\t    },\n\t    onMutation: function onMutation(mutation, state) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    }\n\t  };\n\t\n\t  function override (Vue) {\n\t    // override init and inject vuex init procedure\n\t    var _init = Vue.prototype._init;\n\t    Vue.prototype._init = function () {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t      _init.call(this, options);\n\t    };\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var getters = vuex.getters;\n\t        var actions = vuex.actions;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(actions[_key], this.$store);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      Object.defineProperty(vm, key, {\n\t        enumerable: true,\n\t        configurable: true,\n\t        get: makeComputedGetter(vm.$store, getter),\n\t        set: setter\n\t      });\n\t    }\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (state) {\n\t        return getter(state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    function makeBoundAction(action, store) {\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} middlewares\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$middlewares = _ref.middlewares;\n\t      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      babelHelpers.classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: state\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      this._setupMiddlewares(middlewares, state);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    babelHelpers.createClass(Store, [{\n\t      key: 'dispatch',\n\t\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t      value: function dispatch(type) {\n\t        var _this2 = this;\n\t\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          payload = [type];\n\t          type = type.type;\n\t        }\n\t        var mutation = this._mutations[type];\n\t        var prevSnapshot = this._prevSnapshot;\n\t        var state = this.state;\n\t        var snapshot = void 0,\n\t            clonedPayload = void 0;\n\t        if (mutation) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(mutation)) {\n\t            mutation.forEach(function (m) {\n\t              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          // invoke middlewares\n\t          if (this._needSnapshots) {\n\t            snapshot = this._prevSnapshot = deepClone(state);\n\t            clonedPayload = deepClone(payload);\n\t          }\n\t          this._middlewares.forEach(function (m) {\n\t            if (m.onMutation) {\n\t              if (m.snapshot) {\n\t                m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this2);\n\t              } else {\n\t                m.onMutation({ type: type, payload: payload }, state, _this2);\n\t              }\n\t            }\n\t          });\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {String|Function} expOrFn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(expOrFn, cb, options) {\n\t        var _this3 = this;\n\t\n\t        return this._vm.$watch(function () {\n\t          return typeof expOrFn === 'function' ? expOrFn(_this3.state) : _this3._vm.$get(expOrFn);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        var setPath = Vue.parsers.path.setPath;\n\t\n\t        Object.keys(modules).forEach(function (key) {\n\t          setPath(state, key, modules[key].state || {});\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        var getPath = Vue.parsers.path.getPath;\n\t\n\t        var allMutations = [this._rootMutations];\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t          if (!module || !module.mutations) return;\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [getPath(state, key)].concat(args));\n\t            };\n\t          });\n\t          allMutations.push(mutations);\n\t        });\n\t        this._mutations = mergeObjects(allMutations);\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this4 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, '$data', function () {\n\t          if (!_this4._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t\n\t      /**\n\t       * Setup the middlewares. The devtools middleware is always\n\t       * included, since it does nothing if no devtool is detected.\n\t       *\n\t       * A middleware can demand the state it receives to be\n\t       * \"snapshots\", i.e. deep clones of the actual state tree.\n\t       *\n\t       * @param {Array} middlewares\n\t       * @param {Object} state\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMiddlewares',\n\t      value: function _setupMiddlewares(middlewares, state) {\n\t        var _this5 = this;\n\t\n\t        this._middlewares = [devtoolMiddleware].concat(middlewares);\n\t        this._needSnapshots = middlewares.some(function (m) {\n\t          return m.snapshot;\n\t        });\n\t        if (this._needSnapshots) {\n\t          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t        }\n\t        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n\t        // call init hooks\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onInit) {\n\t            m.onInit(m.snapshot ? initialSnapshot : state, _this5);\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm._data;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Vuex root state is read only.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  function createLogger() {\n\t    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install,\n\t    createLogger: createLogger\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.b741a65f1be55add999a.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bda24f1121a39a3764d4\n **/","import Vue from 'vue'\n\nVue.config.debug = true\n\nimport VueRouter from 'vue-router' //                           Import and install vue-router\nVue.use(VueRouter)\n\nexport var router = new VueRouter({ //                          Create vue-router instance\n  linkActiveClass: 'active',\n  history: true,\n  saveScrollPosition: true,\n  root: '/vue-localize-example/dist'\n})\n\nimport routes from './config/routes' //                         Import router config obejct\nimport vueLocalizeConf from './config/vue-localize-conf' //     Import config for vue-localize plugin\nimport store from './vuex/store' //                             Import vuex store (required by vue-localize)\nimport VueLocalize from 'vue-localize' //                       Import vue-localize plugin\n\nVue.use(VueLocalize, { //                                       Registering vue-localize plugin\n  store,\n  config: vueLocalizeConf,\n  router: router,\n  routes: routes\n})\n\nrouter.beforeEach(function (transition) {\n  if (transition.to.titleKey) { //                              Changing title on transition to new route\n    store.dispatch('SET_TITLE', transition.to.titleKey)\n  } else if (transition.to.titleKey === undefined) {\n    store.dispatch('SET_TITLE', 'global.defaultTitle')\n  }\n\n  transition.next()\n})\n\nif (vueLocalizeConf.defaultLanguageRoute) { //                  404 handler. Looks forward to implementation of https://github.com/vuejs/vue-router/issues/382\n  router.redirect({\n    '*': '/' + vueLocalizeConf.defaultLanguage + '/error404',\n    '/': '/' + vueLocalizeConf.defaultLanguage\n  })\n} else {\n  router.redirect({\n    '*': '/error404'\n  })\n}\n\nimport App from './components/App' //                           Import App component - root Vue instance\n\nrouter.start(App, '#app') //                                    Application start\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/*!\n * Vue.js v1.0.18\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} doNotObserve\n */\n\nfunction defineReactive(obj, key, val, doNotObserve) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  // if doNotObserve is true, only use the child value observer\n  // if it already exists, and do not attempt to create it.\n  // this allows freezing a large object from the root and\n  // avoid unnecessary observation inside v-for fragments.\n  var childOb = doNotObserve ? isObject(val) && val.__ob__ : observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = doNotObserve ? isObject(newVal) && newVal.__ob__ : observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value, true /* doNotObserve */);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value, true /* do not observe */);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    // #2366 or custom terminal directive\n    def: def || resolveAsset(options, 'directives', dirName)\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains$1(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains$1(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains$1(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains$1(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.18';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 1\n ** module chunks = 0\n **/","import Vuex from 'vuex'\nimport Vue from 'vue'\nimport rootApp from './modules/root-app'\nimport { vueLocalizeVuexStoreModule } from 'vue-localize'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  modules: {\n    rootApp,\n    vueLocalizeVuexStoreModule\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/store.js\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./LanguageSelector.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./LanguageSelector.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/common/LanguageSelector.vue\n ** module id = 3\n ** module chunks = 0\n **/","!function(t,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define([],n):\"object\"==typeof exports?exports.VueLocalize=n():t.VueLocalize=n()}(this,function(){return function(t){function n(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var e={};return n.m=t,n.c=e,n.p=\"\",n(0)}([function(t,n,e){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function u(t){window.localStorage.setItem(R,t)}function a(){return window.localStorage.getItem(R)}function i(t,n){function e(){return S.state.vueLocalizeVuexStoreModule.currentLanguage}function r(t,n,e){return(0,_[\"default\"])(t,function(t,o){if((0,h[\"default\"])(t,\"name\")&&((0,x[\"default\"])(e.initial,t.name,o),t.originalName=t.name,t.name=n+\"_\"+t.name,(0,x[\"default\"])(e.localized,t.name,n)),(0,h[\"default\"])(t,\"subRoutes\")){var u=(0,s[\"default\"])(t.subRoutes);(0,v[\"default\"])(t,\"subRoutes\");var a=(0,f[\"default\"])(u),i=r(a,n,e);t.subRoutes=i}}),t}function o(t,n){var e=arguments.length<=2||void 0===arguments[2]?!0:arguments[2];(0,_[\"default\"])(t,function(t,r){(e!==!0||(0,h[\"default\"])(t,\"localized\"))&&(n(r,t),(0,h[\"default\"])(t,\"subRoutes\")&&o(t.subRoutes,n,!1))})}function u(t,n){(0,x[\"default\"])(n,\"vueLocalizeId\",N),N++}function i(t,n){(0,x[\"default\"])(T,n.vueLocalizeId,{}),(0,x[\"default\"])(T[n.vueLocalizeId],\"component\",n.component)}function c(t,n){(0,v[\"default\"])(n,\"component\")}function l(t,n){(0,x[\"default\"])(n,\"component\",T[n.vueLocalizeId].component)}function p(t,n){return o(t,u),o(t,i),o(t,c),(0,_[\"default\"])(t,function(e,o){if((0,h[\"default\"])(e,\"localized\")){(0,h[\"default\"])(e,\"name\")&&(0,x[\"default\"])(F.initial,e.name,o);var u=(0,s[\"default\"])(e);if((0,v[\"default\"])(t,o),(0,h[\"default\"])(u,\"subRoutes\")){var a=(0,s[\"default\"])(u.subRoutes);(0,v[\"default\"])(u,\"subRoutes\")}(0,_[\"default\"])(n.languages,function(e,i){if(e.enabled){var c=(0,s[\"default\"])(u),l=\"\";\"/\"===o[0]&&1===o.length?l=\"\":\"/\"===o[0]&&o.length>1?l=o:\"/\"!==o[0]&&(l=\"/\"+o);var p=i;n.defaultLanguageRoute===!1&&(p=n.defaultLanguage!==i?i:\"\");var v=\"/\"+p+l;c.lang=i;var d=(0,f[\"default\"])(a),g=r(d,i,F);c.subRoutes=g,(0,x[\"default\"])(t,v,c)}})}}),o(t,l),t}function d(t){var n=(0,h[\"default\"])(t,\"localized\")?t.lang:a();n&&S.dispatch(\"SET_APP_LANGUAGE\",n,R.resaveOnLocalizedRoutes)}function g(t){var n=arguments.length<=1||void 0===arguments[1]?null:arguments[1],r=arguments.length<=2||void 0===arguments[2]?null:arguments[2],o=e(),u=r||o,a=(0,A[\"default\"])(t,\".\"),i=1===a.length,c=i?R.defaultContextName+\".\"+t:t;if(!(0,h[\"default\"])(R.translations,c))return R.supressWarnings||console.warn('[VueLocalize]. Undefined path: \"'+c+'\"'),c;var f=c+\".\"+u,l=(0,h[\"default\"])(R.translations,f);if(l){var s=(0,b[\"default\"])(R.translations,f);return w(s,n,f)}if(!R.fallbackOnNoTranslation)return R.supressWarnings||console.warn('[VueLocalize]. Undefined translation: \"'+f+'\"'),c;var p=c+\".\"+R.fallbackLanguage,v=(0,h[\"default\"])(R.translations,p);if(u===R.fallbackLanguage||!v)return R.supressWarnings||console.warn('[VueLocalize]. Undefined FALLBACK translation: \"'+p+'\"'),c;var d=(0,b[\"default\"])(R.translations,p);return w(d,n,p)}function y(t){var n=arguments.length<=1||void 0===arguments[1]?null:arguments[1];if(!(0,h[\"default\"])(F.initial,t))return t;var r=(n||e())+\"_\";return r+t}function j(t,n){var r=t.path,o=t.name;if(!(0,h[\"default\"])(F.initial,o)&&!(0,h[\"default\"])(F.localized,o))return r;if(R.defaultLanguageRoute===!0)return(0,z[\"default\"])(r,/^.{3}/g,\"/\"+n);if(R.defaultLanguage===e())return\"/\"+n+r;if(n===R.defaultLanguage){var u=(0,z[\"default\"])(r,/^.{3}/g,\"\");return u.length||(u=\"/\"),u}}function m(t){return t.from.originalName===t.to.originalName}function w(t,n,e){var r=t.match($);if(!r)return t;if(!n)return L(r,e),t;(0,_[\"default\"])(n,function(n,e){t=(0,z[\"default\"])(t,e,n)});var o=t.match($);return o&&L(o,e),t}function L(t,n){R.supressWarnings||console.warn(\"VueLocalize. Unreplaced: \"+(0,O[\"default\"])(t,\", \")+' in \"'+n+'\"')}var S=n.store,R=n.config,U=n.router,I=n.routes,$=/%[a-zA-Z0-9_-]*%/g,M=t.util.bind;t.mixin({vuex:{getters:{currentLanguage:E.currentLanguage}}}),S.dispatch(\"SET_APP_LANGUAGE\",R.defaultLanguage,!1);var N=0,T={},F={initial:{},localized:{}},G=p(I,R);U.map(G),U.beforeEach(function(t){if(t.to.localized)e()!==t.to.lang&&S.dispatch(\"SET_APP_LANGUAGE\",t.to.lang,R.resaveOnLocalizedRoutes);else if(t.from.localized===!0&&!R.resaveOnLocalizedRoutes){var n=a();n&&t.from.lang!==n&&S.dispatch(\"SET_APP_LANGUAGE\",n,!1)}t.next()}),t.prototype.$vueLocalizeInit=d,t.prototype.$localizeRoute=y,t.prototype.$localizeRoutePath=j,t.prototype.$isJustLanguageSwitching=m,t.prototype.$localizeConf=R;var V={translate:g};(0,_[\"default\"])(V,function(n,e){t.filter((0,P[\"default\"])(e),n),t.prototype[\"$\"+e]=n}),t.directive(\"localize\",{deep:!0,bind:function(){var t=this.vm;this.unwatch=t.$watch(\"$store.state.vueLocalizeVuexStoreModule.currentLanguage\",M(this.updateContent,this))},unbind:function(){this.unwatch&&this.unwatch()},update:function(t){this.path=t.path,this.vars=t.vars,this.lang=t.lang;var n=t.lang||e(),r=g(t.path,t.vars,n);this.el.innerHTML=r},updateContent:function(t){var n=this.lang||t,e=g(this.path,this.vars,n);this.el.innerHTML=e}})}Object.defineProperty(n,\"__esModule\",{value:!0}),n.vueLocalizeVuexStoreModule=void 0;var c=e(102),f=r(c),l=e(101),s=r(l),p=e(117),v=r(p),d=e(115),x=r(d),g=e(34),b=r(g),y=e(35),h=r(y),j=e(105),_=r(j),m=e(116),A=r(m),w=e(112),O=r(w),L=e(114),z=r(L),S=e(113),P=r(S),E=e(42),R=\"currentLanguage\",U=\"SET_APP_LANGUAGE\",I={currentLanguage:null},$=o({},U,function(t,n){var e=arguments.length<=2||void 0===arguments[2]?!0:arguments[2];t.currentLanguage=n,e&&u(n)}),M=(n.vueLocalizeVuexStoreModule={state:I,mutations:$},{install:i});n[\"default\"]=M},function(t,n){var e=Array.isArray;t.exports=e},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"Map\");t.exports=u},function(t,n,e){(function(t,r){var o=e(63),u={\"function\":!0,object:!0},a=u[typeof n]&&n&&!n.nodeType?n:void 0,i=u[typeof t]&&t&&!t.nodeType?t:void 0,c=o(a&&i&&\"object\"==typeof r&&r),f=o(u[typeof self]&&self),l=o(u[typeof window]&&window),s=o(u[typeof this]&&this),p=c||l!==(s&&s.window)&&l||f||s||Function(\"return this\")();t.exports=p}).call(n,e(41)(t),function(){return this}())},function(t,n,e){function r(t){if(\"string\"==typeof t)return t;if(null==t)return\"\";if(u(t))return c?c.call(t):\"\";var n=t+\"\";return\"0\"==n&&1/t==-a?\"-0\":n}var o=e(18),u=e(111),a=1/0,i=o?o.prototype:void 0,c=i?i.toString:void 0;t.exports=r},function(t,n,e){function r(t,n){for(var e=t.length;e--;)if(o(t[e][0],n))return e;return-1}var o=e(33);t.exports=r},function(t,n,e){function r(t){return o(t)?t:u(t)}var o=e(1),u=e(100);t.exports=r},function(t,n,e){function r(t,n){var e=t[n];return o(e)?e:void 0}var o=e(110);t.exports=r},function(t,n,e){function r(t,n){return\"number\"==typeof t?!0:!o(t)&&(a.test(t)||!u.test(t)||null!=n&&t in Object(n))}var o=e(1),u=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,a=/^\\w*$/;t.exports=r},function(t,n){function e(t){var n=typeof t;return\"number\"==n||\"boolean\"==n||\"string\"==n&&\"__proto__\"!=t||null==t}t.exports=e},function(t,n,e){var r=e(7),o=r(Object,\"create\");t.exports=o},function(t,n){function e(t){var n=typeof t;return!!t&&(\"object\"==n||\"function\"==n)}t.exports=e},function(t,n){function e(t){return!!t&&\"object\"==typeof t}t.exports=e},function(t,n){function e(t,n,e,r){var o=-1,u=t.length;for(r&&u&&(e=t[++o]);++o<u;)e=n(e,t[o],o,t);return e}t.exports=e},function(t,n,e){function r(t,n,e){var r=t[n];a.call(t,n)&&o(r,e)&&(void 0!==e||n in t)||(t[n]=e)}var o=e(33),u=Object.prototype,a=u.hasOwnProperty;t.exports=r},function(t,n){function e(t,n){return t=\"number\"==typeof t||o.test(t)?+t:-1,n=null==n?r:n,t>-1&&t%1==0&&n>t}var r=9007199254740991,o=/^(?:0|[1-9]\\d*)$/;t.exports=e},function(t,n,e){function r(t){return null!=t&&a(o(t))&&!u(t)}var o=e(77),u=e(37),a=e(17);t.exports=r},function(t,n){function e(t){return\"number\"==typeof t&&t>-1&&t%1==0&&r>=t}var r=9007199254740991;t.exports=e},function(t,n,e){var r=e(3),o=r.Symbol;t.exports=o},function(t,n){function e(t,n){for(var e=-1,r=t.length;++e<r&&n(t[e],e,t)!==!1;);return t}t.exports=e},function(t,n,e){function r(t,n){var e=o(t,n);if(0>e)return!1;var r=t.length-1;return e==r?t.pop():a.call(t,e,1),!0}var o=e(5),u=Array.prototype,a=u.splice;t.exports=r},function(t,n,e){function r(t,n){var e=o(t,n);return 0>e?void 0:t[e][1]}var o=e(5);t.exports=r},function(t,n,e){function r(t,n){return o(t,n)>-1}var o=e(5);t.exports=r},function(t,n,e){function r(t,n,e){var r=o(t,n);0>r?t.push([n,e]):t[r][1]=e}var o=e(5);t.exports=r},function(t,n,e){function r(t,n,e,_,m,A,w){var z;if(_&&(z=A?_(t,m,A,w):_(t)),void 0!==z)return z;if(!h(t))return t;var S=g(t);if(S){if(z=v(t),!n)return l(t,z)}else{var E=p(t),R=E==O||E==L;if(b(t))return f(t,n);if(E==P||E==j||R&&!A){if(y(t))return A?t:{};if(z=x(R?{}:t),!n)return z=i(z,t),e?s(t,z):z}else{if(!B[E])return A?t:{};z=d(t,E,n)}}w||(w=new o);var U=w.get(t);return U?U:(w.set(t,z),(S?u:c)(t,function(o,u){a(z,u,r(o,n,e,_,u,t,w))}),e&&!S?s(t,z):z)}var o=e(46),u=e(19),a=e(14),i=e(51),c=e(25),f=e(64),l=e(70),s=e(72),p=e(79),v=e(85),d=e(86),x=e(87),g=e(1),b=e(109),y=e(30),h=e(11),j=\"[object Arguments]\",_=\"[object Array]\",m=\"[object Boolean]\",A=\"[object Date]\",w=\"[object Error]\",O=\"[object Function]\",L=\"[object GeneratorFunction]\",z=\"[object Map]\",S=\"[object Number]\",P=\"[object Object]\",E=\"[object RegExp]\",R=\"[object Set]\",U=\"[object String]\",I=\"[object Symbol]\",$=\"[object WeakMap]\",M=\"[object ArrayBuffer]\",N=\"[object Float32Array]\",T=\"[object Float64Array]\",F=\"[object Int8Array]\",G=\"[object Int16Array]\",V=\"[object Int32Array]\",k=\"[object Uint8Array]\",C=\"[object Uint8ClampedArray]\",W=\"[object Uint16Array]\",Z=\"[object Uint32Array]\",B={};B[j]=B[_]=B[M]=B[m]=B[A]=B[N]=B[T]=B[F]=B[G]=B[V]=B[z]=B[S]=B[P]=B[E]=B[R]=B[U]=B[I]=B[k]=B[C]=B[W]=B[Z]=!0,B[w]=B[O]=B[$]=!1,t.exports=r},function(t,n,e){function r(t,n){return t&&o(t,n,u)}var o=e(55),u=e(39);t.exports=r},function(t,n){function e(t,n){return o.call(t,n)||\"object\"==typeof t&&n in t&&null===u(t)}var r=Object.prototype,o=r.hasOwnProperty,u=Object.getPrototypeOf;t.exports=e},function(t,n,e){function r(t){var n=new t.constructor(t.byteLength);return new o(n).set(new o(t)),n}var o=e(47);t.exports=r},function(t,n,e){function r(t,n,e){return o(t,n,e)}var o=e(71);t.exports=r},function(t,n,e){function r(t,n){return o?void 0!==t[n]:a.call(t,n)}var o=e(10),u=Object.prototype,a=u.hasOwnProperty;t.exports=r},function(t,n){function e(t){var n=!1;if(null!=t&&\"function\"!=typeof t.toString)try{n=!!(t+\"\")}catch(e){}return n}t.exports=e},function(t,n){function e(t){var n=t&&t.constructor,e=\"function\"==typeof n&&n.prototype||r;return t===e}var r=Object.prototype;t.exports=e},function(t,n,e){function r(t,n){return 1==n.length?t:u(t,o(n,0,-1))}var o=e(60),u=e(34);t.exports=r},function(t,n){function e(t,n){return t===n||t!==t&&n!==n}t.exports=e},function(t,n,e){function r(t,n,e){var r=null==t?void 0:o(t,n);return void 0===r?e:r}var o=e(56);t.exports=r},function(t,n,e){function r(t,n){return u(t,n,o)}var o=e(26),u=e(80);t.exports=r},function(t,n,e){function r(t){return o(t)&&i.call(t,\"callee\")&&(!f.call(t,\"callee\")||c.call(t)==u)}var o=e(108),u=\"[object Arguments]\",a=Object.prototype,i=a.hasOwnProperty,c=a.toString,f=a.propertyIsEnumerable;t.exports=r},function(t,n,e){function r(t){var n=o(t)?c.call(t):\"\";return n==u||n==a}var o=e(11),u=\"[object Function]\",a=\"[object GeneratorFunction]\",i=Object.prototype,c=i.toString;t.exports=r},function(t,n,e){function r(t){return\"string\"==typeof t||!o(t)&&u(t)&&c.call(t)==a}var o=e(1),u=e(12),a=\"[object String]\",i=Object.prototype,c=i.toString;t.exports=r},function(t,n,e){function r(t){var n=f(t);if(!n&&!i(t))return u(t);var e=a(t),r=!!e,l=e||[],s=l.length;for(var p in t)!o(t,p)||r&&(\"length\"==p||c(p,s))||n&&\"constructor\"==p||l.push(p);return l}var o=e(26),u=e(57),a=e(84),i=e(16),c=e(15),f=e(31);t.exports=r},function(t,n){function e(t){var n=t?t.length:0;return n?t[n-1]:void 0}t.exports=e},function(t,n){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}},function(t,n){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});n.currentLanguage=function(t){return t.vueLocalizeVuexStoreModule.currentLanguage}},function(t,n,e){function r(){}var o=e(10),u=Object.prototype;r.prototype=o?o(null):u,t.exports=r},function(t,n,e){function r(t){var n=-1,e=t?t.length:0;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}var o=e(88),u=e(89),a=e(90),i=e(91),c=e(92);r.prototype.clear=o,r.prototype[\"delete\"]=u,r.prototype.get=a,r.prototype.has=i,r.prototype.set=c,t.exports=r},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"Set\");t.exports=u},function(t,n,e){function r(t){var n=-1,e=t?t.length:0;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}var o=e(95),u=e(96),a=e(97),i=e(98),c=e(99);r.prototype.clear=o,r.prototype[\"delete\"]=u,r.prototype.get=a,r.prototype.has=i,r.prototype.set=c,t.exports=r},function(t,n,e){var r=e(3),o=r.Uint8Array;t.exports=o},function(t,n,e){var r=e(7),o=e(3),u=r(o,\"WeakMap\");t.exports=u},function(t,n){function e(t,n){return t.set(n[0],n[1]),t}t.exports=e},function(t,n){function e(t,n){return t.add(n),t}t.exports=e},function(t,n,e){function r(t,n){return t&&o(n,u(n),t)}var o=e(28),u=e(39);t.exports=r},function(t,n,e){function r(t){return\"function\"==typeof t?t:o}var o=e(107);t.exports=r},function(t,n,e){function r(t){return o(t)?u(t):{}}var o=e(11),u=Object.create;t.exports=r},function(t,n,e){var r=e(25),o=e(73),u=o(r);t.exports=u},function(t,n,e){var r=e(74),o=r();t.exports=o},function(t,n,e){function r(t,n){n=u(n,t)?[n+\"\"]:o(n);for(var e=0,r=n.length;null!=t&&r>e;)t=t[n[e++]];return e&&e==r?t:void 0}var o=e(6),u=e(8);t.exports=r},function(t,n){function e(t){return r(Object(t))}var r=Object.keys;t.exports=e},function(t,n){function e(t){return function(n){return null==n?void 0:n[t]}}t.exports=e},function(t,n,e){function r(t,n,e,r){n=i(n,t)?[n+\"\"]:u(n);for(var f=-1,l=n.length,s=l-1,p=t;null!=p&&++f<l;){var v=n[f];if(c(p)){var d=e;if(f!=s){var x=p[v];d=r?r(x,v,p):void 0,void 0===d&&(d=null==x?a(n[f+1])?[]:{}:x)}o(p,v,d)}p=p[v]}return t}var o=e(14),u=e(6),a=e(15),i=e(8),c=e(11);t.exports=r},function(t,n){function e(t,n,e){var r=-1,o=t.length;0>n&&(n=-n>o?0:o+n),e=e>o?o:e,0>e&&(e+=o),o=n>e?0:e-n>>>0,n>>>=0;for(var u=Array(o);++r<o;)u[r]=t[r+n];return u}t.exports=e},function(t,n){function e(t,n){for(var e=-1,r=Array(t);++e<t;)r[e]=n(e);return r}t.exports=e},function(t,n,e){function r(t,n){n=a(n,t)?[n+\"\"]:o(n),t=c(t,n);var e=i(n);return null!=t&&u(t,e)?delete t[e]:!0}var o=e(6),u=e(35),a=e(8),i=e(40),c=e(32);t.exports=r},function(t,n){function e(t){return t&&t.Object===Object?t:null}t.exports=e},function(t,n){function e(t,n){if(n)return t.slice();var e=new t.constructor(t.length);return t.copy(e),e}t.exports=e},function(t,n,e){function r(t){return u(a(t),o,new t.constructor)}var o=e(49),u=e(13),a=e(93);t.exports=r},function(t,n){function e(t){var n=new t.constructor(t.source,r.exec(t));return n.lastIndex=t.lastIndex,n}var r=/\\w*$/;t.exports=e},function(t,n,e){function r(t){return u(a(t),o,new t.constructor)}var o=e(50),u=e(13),a=e(94);t.exports=r},function(t,n,e){function r(t){return a?Object(a.call(t)):{}}var o=e(18),u=o?o.prototype:void 0,a=u?u.valueOf:void 0;t.exports=r},function(t,n,e){function r(t,n){var e=n?o(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.length)}var o=e(27);t.exports=r},function(t,n){function e(t,n){var e=-1,r=t.length;for(n||(n=Array(r));++e<r;)n[e]=t[e];return n}t.exports=e},function(t,n,e){function r(t,n,e,r){e||(e={});for(var u=-1,a=n.length;++u<a;){var i=n[u],c=r?r(e[i],t[i],i,e,t):t[i];o(e,i,c)}return e}var o=e(14);t.exports=r},function(t,n,e){function r(t,n){return o(t,u(t),n)}var o=e(28),u=e(78);t.exports=r},function(t,n,e){function r(t,n){return function(e,r){if(null==e)return e;if(!o(e))return t(e,r);for(var u=e.length,a=n?u:-1,i=Object(e);(n?a--:++a<u)&&r(i[a],a,i)!==!1;);return e}}var o=e(16);t.exports=r},function(t,n){function e(t){return function(n,e,r){for(var o=-1,u=Object(n),a=r(n),i=a.length;i--;){var c=a[t?i:++o];if(e(u[c],c,u)===!1)break}return n}}t.exports=e},function(t,n,e){function r(t){return function(n){return o(a(u(n)),t,\"\")}}var o=e(13),u=e(104),a=e(118);t.exports=r},function(t,n){function e(t){return r[t]}var r={\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"Ç\":\"C\",\"ç\":\"c\",\"Ð\":\"D\",\"ð\":\"d\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"Ñ\":\"N\",\"ñ\":\"n\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"Ý\":\"Y\",\"ý\":\"y\",\"ÿ\":\"y\",\"Æ\":\"Ae\",\"æ\":\"ae\",\"Þ\":\"Th\",\"þ\":\"th\",\"ß\":\"ss\"};t.exports=e},function(t,n,e){var r=e(58),o=r(\"length\");t.exports=o},function(t,n){var e=Object.getOwnPropertySymbols,r=e||function(){return[]};t.exports=r},function(t,n,e){function r(t){return v.call(t)}var o=e(2),u=e(45),a=e(48),i=\"[object Map]\",c=\"[object Object]\",f=\"[object Set]\",l=\"[object WeakMap]\",s=Object.prototype,p=Function.prototype.toString,v=s.toString,d=o?p.call(o):\"\",x=u?p.call(u):\"\",g=a?p.call(a):\"\";(o&&r(new o)!=i||u&&r(new u)!=f||a&&r(new a)!=l)&&(r=function(t){var n=v.call(t),e=n==c?t.constructor:null,r=\"function\"==typeof e?p.call(e):\"\";if(r)switch(r){case d:return i;case x:return f;case g:return l}return n}),t.exports=r},function(t,n,e){function r(t,n,e){if(null==t)return!1;var r=e(t,n);r||c(n)||(n=o(n),t=p(t,n),null!=t&&(n=s(n),r=e(t,n)));var v=t?t.length:void 0;return r||!!v&&f(v)&&i(n,v)&&(a(t)||l(t)||u(t))}var o=e(6),u=e(36),a=e(1),i=e(15),c=e(8),f=e(17),l=e(38),s=e(40),p=e(32);t.exports=r},function(t,n,e){function r(t,n){return o(t,n)&&delete t[n]}var o=e(29);t.exports=r},function(t,n,e){function r(t,n){if(o){var e=t[n];return e===u?void 0:e}return i.call(t,n)?t[n]:void 0}var o=e(10),u=\"__lodash_hash_undefined__\",a=Object.prototype,i=a.hasOwnProperty;t.exports=r},function(t,n,e){function r(t,n,e){t[n]=o&&void 0===e?u:e}var o=e(10),u=\"__lodash_hash_undefined__\";t.exports=r},function(t,n,e){function r(t){var n=t?t.length:void 0;return i(n)&&(a(t)||c(t)||u(t))?o(n,String):null}var o=e(61),u=e(36),a=e(1),i=e(17),c=e(38);t.exports=r},function(t,n){function e(t){var n=t.length,e=t.constructor(n);return n&&\"string\"==typeof t[0]&&o.call(t,\"index\")&&(e.index=t.index,e.input=t.input),e}var r=Object.prototype,o=r.hasOwnProperty;t.exports=e},function(t,n,e){function r(t,n,e){var r=t.constructor;switch(n){case y:return o(t);case l:case s:return new r(+t);case h:case j:case _:case m:case A:case w:case O:case L:case z:return f(t,e);case p:return u(t);case v:case g:return new r(t);case d:return a(t);case x:return i(t);case b:return c(t)}}var o=e(27),u=e(65),a=e(66),i=e(67),c=e(68),f=e(69),l=\"[object Boolean]\",s=\"[object Date]\",p=\"[object Map]\",v=\"[object Number]\",d=\"[object RegExp]\",x=\"[object Set]\",g=\"[object String]\",b=\"[object Symbol]\",y=\"[object ArrayBuffer]\",h=\"[object Float32Array]\",j=\"[object Float64Array]\",_=\"[object Int8Array]\",m=\"[object Int16Array]\",A=\"[object Int32Array]\",w=\"[object Uint8Array]\",O=\"[object Uint8ClampedArray]\",L=\"[object Uint16Array]\",z=\"[object Uint32Array]\";t.exports=r},function(t,n,e){function r(t){return\"function\"!=typeof t.constructor||u(t)?{}:o(a(t))}var o=e(53),u=e(31),a=Object.getPrototypeOf;t.exports=r},function(t,n,e){function r(){this.__data__={hash:new o,map:u?new u:[],string:new o}}var o=e(43),u=e(2);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map[\"delete\"](t):u(n.map,t)}var o=e(2),u=e(20),a=e(81),i=e(9);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map.get(t):u(n.map,t)}var o=e(2),u=e(21),a=e(82),i=e(9);t.exports=r},function(t,n,e){function r(t){var n=this.__data__;return i(t)?a(\"string\"==typeof t?n.string:n.hash,t):o?n.map.has(t):u(n.map,t)}var o=e(2),u=e(22),a=e(29),i=e(9);t.exports=r},function(t,n,e){function r(t,n){var e=this.__data__;return i(t)?a(\"string\"==typeof t?e.string:e.hash,t,n):o?e.map.set(t,n):u(e.map,t,n),this}var o=e(2),u=e(23),a=e(83),i=e(9);t.exports=r},function(t,n){function e(t){var n=-1,e=Array(t.size);return t.forEach(function(t,r){e[++n]=[r,t]}),e}t.exports=e},function(t,n){function e(t){var n=-1,e=Array(t.size);return t.forEach(function(t){e[++n]=t}),e}t.exports=e},function(t,n){function e(){this.__data__={array:[],map:null}}t.exports=e},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map[\"delete\"](t)}var o=e(20);t.exports=r},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map.get(t)}var o=e(21);t.exports=r},function(t,n,e){function r(t){var n=this.__data__,e=n.array;return e?o(e,t):n.map.has(t)}var o=e(22);t.exports=r},function(t,n,e){function r(t,n){var e=this.__data__,r=e.array;r&&(r.length<a-1?u(r,t,n):(e.array=null,e.map=new o(r)));var i=e.map;return i&&i.set(t,n),this}var o=e(44),u=e(23),a=200;t.exports=r},function(t,n,e){function r(t){var n=[];return o(t).replace(u,function(t,e,r,o){n.push(r?o.replace(a,\"$1\"):e||t)}),n}var o=e(4),u=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g,a=/\\\\(\\\\)?/g;t.exports=r},function(t,n,e){function r(t){return o(t,!1,!0)}var o=e(24);t.exports=r},function(t,n,e){function r(t){return o(t,!0,!0)}var o=e(24);t.exports=r},function(t,n){function e(t){return function(){return t}}t.exports=e},function(t,n,e){function r(t){return t=u(t),t&&t.replace(a,o).replace(l,\"\")}var o=e(76),u=e(4),a=/[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g,i=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",c=\"\\\\u20d0-\\\\u20f0\",f=\"[\"+i+c+\"]\",l=RegExp(f,\"g\");t.exports=r},function(t,n,e){t.exports=e(106)},function(t,n,e){function r(t,n){return\"function\"==typeof n&&i(t)?o(t,n):a(t,u(n))}var o=e(19),u=e(52),a=e(54),i=e(1);t.exports=r},function(t,n){function e(t){return t}t.exports=e},function(t,n,e){function r(t){return u(t)&&o(t)}var o=e(16),u=e(12);t.exports=r},function(t,n,e){(function(t){var r=e(103),o=e(3),u={\"function\":!0,object:!0},a=u[typeof n]&&n&&!n.nodeType?n:void 0,i=u[typeof t]&&t&&!t.nodeType?t:void 0,c=i&&i.exports===a?a:void 0,f=c?o.Buffer:void 0,l=f?function(t){return t instanceof f}:r(!1);t.exports=l}).call(n,e(41)(t))},function(t,n,e){function r(t){return null==t?!1:o(t)?p.test(l.call(t)):a(t)&&(u(t)?p:c).test(t)}var o=e(37),u=e(30),a=e(12),i=/[\\\\^$.*+?()[\\]{}|]/g,c=/^\\[object .+?Constructor\\]$/,f=Object.prototype,l=Function.prototype.toString,s=f.hasOwnProperty,p=RegExp(\"^\"+l.call(s).replace(i,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");t.exports=r},function(t,n,e){function r(t){return\"symbol\"==typeof t||o(t)&&i.call(t)==u}var o=e(12),u=\"[object Symbol]\",a=Object.prototype,i=a.toString;t.exports=r},function(t,n){function e(t,n){return t?o.call(t,n):\"\"}var r=Array.prototype,o=r.join;t.exports=e},function(t,n,e){var r=e(75),o=r(function(t,n,e){return t+(e?\"-\":\"\")+n.toLowerCase()});t.exports=o},function(t,n,e){function r(){var t=arguments,n=o(t[0]);return t.length<3?n:n.replace(t[1],t[2])}var o=e(4);t.exports=r},function(t,n,e){function r(t,n,e){return null==t?t:o(t,n,e)}var o=e(59);t.exports=r},function(t,n,e){function r(t,n,e){return o(t).split(n,e)}var o=e(4);t.exports=r},function(t,n,e){function r(t,n){return null==t?!0:o(t,n)}var o=e(62);t.exports=r},function(t,n,e){function r(t,n,e){return t=o(t),n=e?void 0:n,void 0===n&&(n=G.test(t)?F:T),t.match(n)||[]}var o=e(4),u=\"\\\\ud800-\\\\udfff\",a=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",i=\"\\\\u20d0-\\\\u20f0\",c=\"\\\\u2700-\\\\u27bf\",f=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",l=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",s=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",p=\"\\\\u2018\\\\u2019\\\\u201c\\\\u201d\",v=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",d=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",x=\"\\\\ufe0e\\\\ufe0f\",g=l+s+p+v,b=\"[\"+g+\"]\",y=\"[\"+a+i+\"]\",h=\"\\\\d+\",j=\"[\"+c+\"]\",_=\"[\"+f+\"]\",m=\"[^\"+u+g+h+c+f+d+\"]\",A=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",w=\"(?:\"+y+\"|\"+A+\")\",O=\"[^\"+u+\"]\",L=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",z=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",S=\"[\"+d+\"]\",P=\"\\\\u200d\",E=\"(?:\"+_+\"|\"+m+\")\",R=\"(?:\"+S+\"|\"+m+\")\",U=w+\"?\",I=\"[\"+x+\"]?\",$=\"(?:\"+P+\"(?:\"+[O,L,z].join(\"|\")+\")\"+I+U+\")*\",M=I+U+$,N=\"(?:\"+[j,L,z].join(\"|\")+\")\"+M,T=/[a-zA-Z0-9]+/g,F=RegExp([S+\"?\"+_+\"+(?=\"+[b,S,\"$\"].join(\"|\")+\")\",R+\"+(?=\"+[b,S+E,\"$\"].join(\"|\")+\")\",S+\"?\"+E+\"+\",S+\"+\",h,N].join(\"|\"),\"g\"),G=/[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;t.exports=r}])});\n//# sourceMappingURL=vue-localize.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-localize/dist/vue-localize.js\n ** module id = 4\n ** module chunks = 0\n **/","import AdminLayout from '../components/admin/layout/Layout'\nimport AdminHome from '../components/admin/pages/Home'\n// Use approach below instead above to implement lazy loading route components\n// const AdminHome = function (resolve) {\n//   require(['../components/admin/pages/Home.vue'], resolve)\n// }\nimport AdminSettings from '../components/admin/pages/Settings'\n\nimport PublicLayout from '../components/public/layout/Layout'\nimport PublicIndex from '../components/public/pages/Index'\nimport Features from '../components/public/pages/Features'\nimport Error404 from '../components/public/pages/Error404'\n\nexport default {\n  '/': {\n    component: PublicLayout,\n    titleKey: false,\n    localized: true,\n    subRoutes: {\n      '/': {\n        name: 'public-index',\n        titleKey: 'public.index.title',\n        component: PublicIndex\n      },\n      '/features': {\n        name: 'features',\n        titleKey: 'f.title',\n        component: Features\n      },\n      '/error404': {\n        name: 'error404',\n        titleKey: 'public.err404.title',\n        component: Error404\n      }\n    }\n  },\n  '/admin': { // administrative zone\n    component: AdminLayout,\n    subRoutes: {\n      '/home': {\n        name: 'admin-home',\n        titleKey: 'admin.home.title',\n        component: AdminHome\n      },\n      '/settings': {\n        name: 'admin-settings',\n        titleKey: 'admin.settings.title',\n        component: AdminSettings\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/routes.js\n **/","/**\n * Import localization file with translations\n */\nimport translations from './vue-localize-translations'\n\nexport default {\n  /**\n   * The list of application languages\n   */\n  languages: {\n    en: {\n      key: 'eng', // phrase key in the translation file for translating language name into different languages\n      enabled: true // Set to false if need to disable language\n    },\n    ru: {\n      key: 'rus',\n      enabled: true\n    },\n    de: {\n      key: 'deu',\n      enabled: false\n    }\n  },\n\n  /**\n   * Default language will be used if the language nowhere defined (together in current route, Vuex store and localStorage)\n   * Usually it works if user came for the first time\n   */\n  defaultLanguage: 'en',\n\n  /**\n   * The object with translations of application phrases\n   */\n  translations: translations,\n\n  /**\n   * Defines the behaviour of routes localization (adding language at the start of path of a routes)\n   * If false, disable leading language param for all routes with default language, or enable otherwise\n   */\n  defaultLanguageRoute: false,\n\n  /**\n   * Defines the policy for storing selected language in browser local storage for\n   * transiotions from localized routes to not localized and backwards\n   *\n   * If false, transition from NOT localized route to localized will not update selected language in local storage, and\n   * it will be taken up when you'll back TO NOT localized route FROM LOCALIZED, even you have switched languages with\n   * language selector.\n   * It can be useful in cases when you need to remember the language selected in user account or administrative panel\n   * and switching languages at the public section of a site should not affect this choice\n   *\n   * Set to true if you need transparent behaviour of application when switching languages and language must be changed for\n   * all application regargless of where exactly it was switched, in administration panel or at the public section of a site\n   */\n  resaveOnLocalizedRoutes: false,\n\n  /**\n   * Name of the key for default context of translations\n   */\n  defaultContextName: 'global',\n\n  /**\n   * Set to true if you want to translate phrases which has no translation\n   * into the language defined in the option \"fallbackLanguage\" below\n   * It may be usefull when you already need to publish your app, but you have\n   * no complete translations into all languages for all phrases\n   */\n  fallbackOnNoTranslation: true,\n\n  /**\n   * Defines the fallback language for using in case described in comment for the option above\n   */\n  fallbackLanguage: 'en',\n\n  /**\n   * Suppress warnings emitted into browser console (concerns only translation process)\n   * Plugin can emit warnings during translation phrases process in the following cases:\n   *\n   * 1) phrase path doesn't exists in localization file (emitted always)\n   *\n   * 2) phrase path exists but there is no translation into current\n   *    language (emitted only if \"fallbackOnNoTranslation\" is set to false)\n   *\n   * 3) phrase path exists, hasn't translation into current language and hasn't\n   *    translation into fallback language (emitted only if \"fallbackOnNoTranslation\" is\n   *    set to true)\n   *\n   * 4) Output translation contains unprocessed variables which will shown to user  as is, e.g. %foo%\n   */\n  supressWarnings: false\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/vue-localize-conf.js\n **/","export default {\n\n  // ------------------------------------------------------------------------- GLOBAL\n  'global': {\n\n    projectName: {\n      en: 'VueLocalize example',\n      ru: 'VueLocalize пример'\n    },\n\n    defaultTitle: {\n      en: '*en*',\n      ru: '*ru*'\n    },\n\n    // ----------------------------------------------------------------------- GLOBAL . LANG\n    lang: {\n      eng: {\n        en: 'English',\n        ru: 'Английский'\n      },\n      rus: {\n        en: 'Russian',\n        ru: 'Русский'\n      }\n    }\n\n  },\n\n  // ------------------------------------------------------------------------- PUBPLIC\n  public: {\n\n    // ----------------------------------------------------------------------- PUBPLIC . HEADER\n    header: {\n      nav: {\n        home: {\n          en: 'About',\n          ru: 'О плагине'\n        },\n        features: {\n          en: 'Features',\n          ru: 'Возможности'\n        },\n        admin: {\n          en: 'Administration',\n          ru: 'Админка'\n        }\n      },\n      admin: {\n        en: 'Administration',\n        ru: 'Администрирование'\n      },\n      unauth: {\n        en: 'Without authentication',\n        ru: 'Без аутентификации'\n      }\n    },\n\n    // ----------------------------------------------------------------------- PUBPLIC . INDEX\n    index: {\n      title: {\n        en: 'VueLocalize plugin usage example',\n        ru: 'Пример использования плагина VueLocalize'\n      },\n      jdesc: {\n        en: 'This example contains all features of the plugin and you can \"touch\" them',\n        ru: 'В этом примере задействованы все возможности плагина мультиязычности и их можно \"потрогать\"'\n      },\n      sources: {\n        en: 'Sources here:',\n        ru: 'Исходники здесь:'\n      }\n    },\n\n    // ----------------------------------------------------------------------- PUBPLIC . ABOUT\n    about: {\n      title: {\n        en: 'About this sample',\n        ru: 'Об этом шаблоне'\n      }\n    },\n\n    // ----------------------------------------------------------------------- PUBPLIC . ERROR_404\n    err404: {\n      title: {\n        en: '404 - Page not found',\n        ru: '404 - Страница не найдена'\n      }\n    }\n\n  },\n\n  // ------------------------------------------------------------------------- ADMIN\n  admin: {\n\n    // ----------------------------------------------------------------------- ADMIN . NAV\n    nav: {\n      home: {\n        en: 'Dashboard',\n        ru: 'Дашборда'\n      },\n      settings: {\n        en: 'Settings',\n        ru: 'Настройки'\n      }\n    },\n\n    // ----------------------------------------------------------------------- ADMIN . HOME\n    home: {\n      title: {\n        en: 'Dashboard',\n        ru: 'Дашборда'\n      },\n      helloText: {\n        en: 'Hello! This is admin dashboard.',\n        ru: 'Привет! Это гавная страница административной панели.'\n      },\n      helloText2: {\n        en: 'Automatic routes localization is disabled for this section so there is no leading language part in paths of routes.',\n        ru: 'В этой секции приложения автоматическая локализация роутов отключена и языковая часть в начале адресов роутов отсутствует.'\n      },\n      helloText3: {\n        en: 'Language changing in this section occurs without affecting to route path.',\n        ru: 'Переключение языка интерфейса в этой секции происходит без смены роута.'\n      },\n      helloText4: {\n        en: 'By the way! In the \"Settings\" you can play with config options and see how it affects the application behavior.',\n        ru: 'Кстати! В разделе \"Настройки\" можно поиграться с настройками плагина и увидеть как это влияет поведение приложения.'\n      }\n    },\n\n    // ----------------------------------------------------------------------- ADMIN . HELP\n    settings: {\n      title: {\n        en: 'Settings',\n        ru: 'Настройки'\n      },\n      variablesInjectionTest: {\n        en: 'Some text in English, %foo%, and then the %bar% variable',\n        ru: 'А теперь некоторый текст на русском, переменная %bar% и затем переменная %foo%'\n      }\n    }\n\n  },\n\n  // Features page phrases\n  f: {\n    title: {\n      en: 'Features and functionality',\n      ru: 'Функциональность и возможности'\n    },\n    intro: {\n      en: 'Introduction',\n      ru: 'Введение'\n    },\n    arl: {\n      en: 'Automatic routes localization',\n      ru: 'Автоматическая локализация роутов'\n    },\n    arlActivate: {\n      en: 'How to enable',\n      ru: 'Как включить'\n    },\n    dlr: {\n      en: 'Exclude leading language from routes path for default language',\n      ru: 'Исключение языкового параметра из начала адресов для языка по умолчанию'\n    },\n    lroute: {\n      en: 'Wrapper for route name ni %v-link%',\n      ru: 'Обертка для имени роута для %v-link%'\n    },\n    lrp: {\n      en: 'Getting path of the current route for another language',\n      ru: 'Получение адреса текущего роута для другого языка'\n    },\n    cReusing: {\n      en: 'Components reusing',\n      ru: 'Переиспользование компонент'\n    },\n    'uiTrans': {\n      en: 'Translating phrases in UI',\n      ru: 'Перевод фраз интерфейса'\n    },\n    'reactTrans': {\n      en: 'Translation reactivity',\n      ru: 'Реактивность перевода'\n    },\n    'transFilter': {\n      en: 'Translating via %translate% filter',\n      ru: 'Перевод с помощью фильтра %translate%'\n    },\n    'transFilter2': {\n      en: 'Translating via filter',\n      ru: 'Перевод с помощью фильтра'\n    },\n    'transCall': {\n      en: 'Translating via %tCall% function call',\n      ru: 'Перевод с помощью глобальной функции %tCall%'\n    },\n    'transCall2': {\n      en: 'Translating via global function call',\n      ru: 'Перевод с помощью глобальной функции плагина'\n    },\n    'transDir': {\n      en: 'Translating via %v-localize% directive',\n      ru: 'Перевод с помощью директивы %v-localize%'\n    },\n    'transDir2': {\n      en: 'Translating via directive',\n      ru: 'Перевод с помощью директивы'\n    },\n    'transExact': {\n      en: 'Translating into exact language regardless of current one',\n      ru: 'Перевод на определенный язык независимо от текущего'\n    },\n    'transExactF': {\n      en: 'Translating using filter',\n      ru: 'Перевод через фильтр'\n    },\n    'transExactC': {\n      en: 'Translating using function call',\n      ru: 'Перевод через вызов'\n    },\n    'transExactD': {\n      en: 'Translating using directive',\n      ru: 'Перевод через директиву'\n    },\n    'varInject': {\n      en: 'Variables injection',\n      ru: 'Внедрение переменных'\n    },\n    'varInjectF': {\n      en: 'Injecting via filter',\n      ru: 'Внедрение через фильтр'\n    },\n    'varInjectC': {\n      en: 'Injecting via function call',\n      ru: 'Внедрение через вызов функции'\n    },\n    'varInjectD': {\n      en: 'Injecting via directive',\n      ru: 'Внедрение через директиву'\n    },\n    'transTitle': {\n      en: 'Page title translating',\n      ru: 'Перевод тайтла страницы'\n    },\n    'fallbackLang': {\n      en: 'Fallback language',\n      ru: 'Запасной язык'\n    },\n    'locStor': {\n      en: 'Saving selected languade in browser local storage and %resaveOnLocalizedRoutesCode% config option',\n      ru: 'Сохранение выбранного языка в локальном хранилище браузера и опция %resaveOnLocalizedRoutesCode%'\n    },\n    'globMix': {\n      en: 'Global mixin for getting current language',\n      ru: 'Глобальный миксин для получения текущего языка'\n    },\n    'transStruct': {\n      en: 'Translations file structure',\n      ru: 'Структура хранения переводов'\n    },\n    // 'confFile': {\n    //   en: '',\n    //   ru: 'Опции и формат конфига'\n    // },\n    'ph1': {\n      en: 'This example implements the skeleton application with public and admistrative sections',\n      ru: 'Данный пример реализует скелет приложения с публичной и административной секциями.'\n    },\n    'ph2': {\n      en: 'This is the public section.',\n      ru: 'В данный момент вы находитесь в публичной части приложения.'\n    },\n    'ph3': {\n      en: 'This feature enabled for the public section of this example app. It means that VueLocalize will add leading language part automatically to all paths of the public section.',\n      ru: 'Для публичной части этого приложения включена автоматическая локалиция роутов. Это означает, что плагин VueLocalize будет автоматически добавлять языковой параметр в начало пути для всех роутов публичной секции.'\n    },\n    'ph4': {\n      en: 'If you\\'ll try to switching between',\n      ru: 'Если вы попробуете переходить между страницами'\n    },\n    'ph5': {\n      en: 'pages in Russian, you\\'ll see that each route path contains the leading language part %rlRu%.',\n      ru: 'предварительно выбрав русский язык, то увидите, что в начале адреса каждого роута добавлен языковой параметр %rlRu%.'\n    },\n    'ph6': {\n      en: 'Only thing you have to do for enable this feature is just add %locTrue% into the root-level route in the router config',\n      ru: 'Автоматическая локализация роутов включается добавлением опции %locTrue% в роут верхнего уровня.'\n    },\n    'ph7': {\n      en: 'How it looks like:',\n      ru: 'Выглядит это так:'\n    },\n    'ph8': {\n      en: 'In the VueLocalize config of this example app, English defined as default application language:',\n      ru: 'В этом примере в конфигурационном файле плагина VueLocalize в качестве языка по умолчанию определен английский язык:'\n    },\n    'ph9': {\n      en: 'If you\\'ll switched to English and try to walking between',\n      ru: 'Если вы переключитесь на английский и попробуете переходить между страницами'\n    },\n    'ph10': {\n      en: ', you\\'ll see that there is no leading language in paths.',\n      ru: ', то увидите, что на английском языке начальный языковой параметр отсутствует.'\n    },\n    'ph11': {\n      en: 'This behaviour achieved by setting %defaultLanguageRouteFalse% in the config of the VueLocalize plugin.',\n      ru: 'Это достигается установкой %defaultLanguageRouteFalse% в конфиге плагина локализации VueLocalize.'\n    },\n    'ph12': {\n      en: 'Set this option to %true% if you need to add leading language part for all languages including default.',\n      ru: 'Если установить эту опцию в %true%, то начальный языковой параметр будет добавляться в адреса роутов на любом языке, включая язык по умолчанию.'\n    },\n    'ph13': {\n      en: 'VueLocalize transforms router config automatically and recursively cloning root-level routes having %locTrue% option.',\n      ru: 'Плагин VueLocalize автоматически трансформирует конфиг роутера, рекурсивно клонируя роуты верхнего уровня имеющие опцию %locTrue%'\n    },\n    'ph14': {\n      en: 'E.g. sub route of this page defined with name %rn-features% and path %rp-features%',\n      ru: 'Например саброут этой страницы определен с именем %rn-features% и адресом %rp-features%'\n    },\n    'ph15': {\n      en: 'After transformation by the VueLocalize plugin, the root-level route %rr% will be duplicated for each language with all nested sub routes.',\n      ru: 'После преобразования плагином VueLocalize, корневой роут %rr% будет продублирован для каждого языка со всем вложенными саброутами.'\n    },\n    'ph16': {\n      en: 'So there are two routes for this page now, one for the Englis and other one for the Russian, named %en-features% and %ru-features% respectively.',\n      ru: 'Таким образом для этой страницы теперь существует два роута, один для английского языка, другой - для русского, с именами %en-features% и %ru-features% соответственно.'\n    },\n    'ph17': {\n      en: 'The question arises: how we should to form routes names for current language to use in %v-link% directive to make navigation properly?',\n      ru: 'Возникает вопрос: как формировать имена роутов под текущий язык для использования в %v-link% чтобы реализовать правильно работающую навигацию?'\n    },\n    'ph18': {\n      en: 'The VueLocalize plugin provides the special function-wrapper %lRoute% for this purpose.',\n      ru: 'Для этого плагин VueLocalize предоставляет глобальную функцию-обертку для имен роутов %lRoute%'\n    },\n    'ph19': {\n      en: 'You can pass initial route name into %v-link% as they defined in router config, but wrapped with %lRoute%.',\n      ru: 'Подставляйте в %v-link% исходные имена роутов так как они определены в конфиге роутера, оборачивая их в %lRoute%.'\n    },\n    'ph20': {\n      en: 'Then the navigation links with %v-link% will always be correct regardless of current language.',\n      ru: 'Тогда каким бы ни был текущий язык, навигационные ссылки c %v-link% всегда будут правильные.'\n    },\n    'ph21': {\n      en: 'Example:',\n      ru: 'Пример:'\n    },\n    'ph22': {\n      en: 'and, you can specify the language code as the second argument if need to get link to a page in other (than current) language:',\n      ru: 'а еще можно указать код языка вторым параметром если необходимо получить ссылку для языка отличного от текущего:'\n    },\n    'ph23': {\n      en: 'However, sometimes it\\'s necessary to get the path of the current route for another language.',\n      ru: 'Однако иногда надо получить адрес текущего роута для другого языка.'\n    },\n    'ph24': {\n      en: 'There is the global function %lRoutePath% for this.',\n      ru: 'Для этого в плагине VueLocalize существует глобальная функция %lRoutePath%.'\n    },\n    'ph25': {\n      en: 'A detailed description you can find in the documentation, and an example of usage in the source codes of this application on githab in the LanguageSelector.vue file.',\n      ru: 'Подробное описание можно найти в документации, а пример использования в исходных кодах этого приложения на гитхабе в файле LanguageSelector.vue.'\n    },\n    'ph26': {\n      en: 'Switching the language at this page performs not only reactive translation of all phrases of interface, but also changes the route path.',\n      ru: 'При переключении языка этой страницы происходит не только реактивный перевод всех фраз интерфейса, но и смена роута.'\n    },\n    'ph27': {\n      en: 'However, both routes of this page have the same Vue instance in %component% field.',\n      ru: 'Однако, оба роута этой страницы имеют один и тотже экземпляр компоненты в свойстве %component%.'\n    },\n    'ph28': {\n      en: 'So VueRouter will not activate the component again but will reuse it, and %dataObj% in component will not be affected.',\n      ru: 'А следовательно VueRouter не будет реактивировать компоненту заново, а переиспользует ее и объект %dataObj% останется без изменений.'\n    },\n    'ph29': {\n      en: 'It should be noted that triggering of the VueRouter %dataHook% hook is inevitably in this case.',\n      ru: 'Здесь надо отметить, что в этом случае неизбежно срабатывание хука %dataHook%.'\n    },\n    'ph30': {\n      en: 'If you have this hook defined for retrieving some data which shouldn\\'t be affected with language changing, or just it is necessary to avoid data reloading, you can use the %isJustLangSw% gobal function inside the %dataHook% hook, passing transition object. Then you can perform data loading only if fucntion returned %false%.',\n      ru: 'В случае если у вас определен этот хук и в нем происходит получение каких-то данных, на которые нельзя влиять при переключении языка или же просто необходимо избежать повторного их получения, можно воспользоваться глобальной функцией плагина %isJustLangSw% внутри хука, передав в нее объект %transtion%, и вызывать получение данных только если функция вернула %false%.'\n    },\n    'ph31': {\n      en: 'For exapmple:',\n      ru: 'Например:'\n    },\n    'ph32': {\n      en: 'Since the current application language is the Veux state, which in turn follows the Vue reactivity principles, all phrases will translated reactively each time when current language was changed.',\n      ru: 'Поскольку текущий язык приложения является состоянием Vuex, который в свою очередь следует реактивным приципам Vue, перевод всех фраз интерфейса при смене языка будет происходить реактивно.'\n    },\n    'ph33': {\n      en: 'Technically any of the variants below can be used:',\n      ru: 'При переводе тайтла страницы технически можно использовать любой из следующих вариантов:'\n    },\n    'ph34': {\n      en: 'However the first two variants are shit because of braces flashing on page loading and reloading',\n      ru: 'Однако первые два использовать нежелательно из-за отображения фигурных скобок при загрузке или перезагрузке страницы.'\n    },\n    'ph35': {\n      en: 'If it is necessary to publish an application when there is no complete translations for all languages, but there is complete translation into at least one language, you can specify this language as a fallback.',\n      ru: 'При необходимости опубликовать приложение на этапе, когда еще нет полных переводов на все языки, но на какой-то один перевод выполнен полностью, можно задать этот язык как запасной.'\n    },\n    'ph36': {\n      en: 'Then in other languages with incomplete translation, phrases which are untranslated yet, will be translated into fallback language, and users will not see incomprehensible identifiers.',\n      ru: 'Тогда на других языках с незавершенным переводом, фразы, которые еще не переведены, будут переводиться на этот запасной язык и пользователи не будут видеть непонятные идентификаторы.'\n    },\n    'ph37': {\n      en: 'Set to %true% the corresponding option in the VueLocalize config to activate this feature:',\n      ru: 'Чтобы включить функцию перевода на запасной язык установите соответствующую опцию в конфигурационном файле плагина в %true%:'\n    },\n    'ph38': {\n      en: 'And define exact fallback language in another corresponding option:',\n      ru: 'И определите собственно какой язык использовать как запасной в другой соответствующей опции:'\n    },\n    'ph39': {\n      en: 'VueLocalize saves selected language in a local storage of browser and provides the ability to affect on application behaviour at transitions from localized routes to not localized.',\n      ru: 'Плагин сохраняет выбранный пользователем язык в локальном хранилище браузера и предоставляет возможность управления поведением приложения при переходе от локализованных роутов к роутам не имеющим начального языкового параметра.'\n    },\n    'ph40': {\n      en: 'Localized route clearly defines the language of the page, so there is no need to get stored language from the local storage for those pages.',\n      ru: 'Локализованные роуты явно определяют язык страницы приложения, поэтому для таких страниц не требуется доставать из локального хранилища сохраненное значение.'\n    },\n    'ph41': {\n      en: 'But when initialization starts with not localized route, plugin will use the language saved in local storage or default one.',\n      ru: 'Но при инициализации приложения когда начальный роут не имеет языкового параметра, плагин будет использовать язык сохраненный в локальном хранилище или же язык по умолчанию.'\n    },\n    'ph42': {\n      en: 'And there is the option %resaveOnLocalizedRoutesCode%, which specifies is there the need to rewrite value, saved in local storage, at transitions to localized routes.',\n      ru: 'Опция %resaveOnLocalizedRoutesCode% указывает плагину надо ли перезаписывать сохраненное в локальном хранилище значение при переключении языка на локализованных роутах.'\n    },\n    'ph43': {\n      en: 'For example, if app must remember the language selected in administrative section and switching the labguages in pucic section with localized routes shouldn\\'t affect this choice, set this option to %false%.',\n      ru: 'Например, если приложение должно помнить язык выбранный в административной панели и смена языков на публичной части, где в адресах роутов присутствует языковой параметр, не должна влиять на этот выбор, то установите эту опцию в %false%.'\n    },\n    'ph44': {\n      en: 'Otherwise if you need to adjust transparent behaviour at language switching, set it to %true%',\n      ru: 'Если же наоборот необходимо задать прозрачное поведение приложения при смене языка, установите в %true%'\n    },\n    'ph45': {\n      en: 'VueLocalize provides global mixin for retrieving current language inside of any Vue instance of your application. It\\'s in fact just a proxy to a corresponding Vuex getter.',\n      ru: 'Плагин предоставляет глобальный миксин для получения текущего языка в любой компоненте приложения, который является по сути прокси на Vuex getter.'\n    },\n    'ph46': {\n      en: 'You can get current language via %currentLanguage% in templates and via %thisCurrentLanguage% in methods.',\n      ru: 'Получить текущий язык можно через %currentLanguage% в темплейте компоненты и через %thisCurrentLanguage% в методах.'\n    },\n    'ph47': {\n      en: 'or',\n      ru: 'или'\n    },\n    'ph48': {\n      en: 'and',\n      ru: 'и'\n    },\n    'ph49': {\n      ru: 'Попробуйте накрутить счетчик и переключить язык:',\n      en: 'Try to increment the counter below and then change the language:'\n    }\n\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/vue-localize-translations.js\n **/","export const currentTitle = state => {\n  return state.rootApp.currentTitle\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/getters.js\n **/","// Vuex store submodule\nimport {\n  SET_TITLE\n} from '../mutation-types'\n\nconst state = {\n  currentTitle: 'defaultTitle'\n}\n\nconst mutations = {\n  [SET_TITLE] (state, title) {\n    state.currentTitle = title\n  }\n}\n\nexport default {\n  state,\n  mutations\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/modules/root-app.js\n **/","// Layout states\nexport const SET_TITLE = 'SET_TITLE'\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/mutation-types.js\n **/","<script>\nimport store from '../vuex/store'\n\nimport { currentTitle } from '../vuex/getters'\nimport Vue from 'vue'\nVue.mixin({\n  vuex: {\n    getters: {\n      currentTitle: currentTitle\n    }\n  }\n})\n\nexport default {\n  // injecting Vuex store into the root Vue instance\n  store,\n  ready: function () {\n    this.$vueLocalizeInit(this.$route)\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?fc94056e\n **/","<template>\n  <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" @click=\"mobileMenuCollapsed = !mobileMenuCollapsed\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" v-link=\"{name: $localizeRoute('public-index')}\">{{ 'projectName' | translate }}</a>\n      </div>\n      <div id=\"navbar\" class=\"navbar-collapse collapse\" :class=\"{'in': mobileMenuCollapsed}\">\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li v-link-active><a v-link=\"{name: $localizeRoute('admin-home')}\">{{ 'admin.nav.home' | translate }}</a></li>\n          <li v-link-active><a v-link=\"{name: $localizeRoute('admin-settings')}\">{{ 'admin.nav.settings' | translate }}</a></li>\n          <language-selector></language-selector>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\n  import LanguageSelector from '../../common/LanguageSelector'\n  export default {\n    data () {\n      return {\n        mobileMenuCollapsed: false\n      }\n    },\n    components: {\n      LanguageSelector\n    },\n    methods: {\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Header.vue?1cc42ed6\n **/","<template>\n    <comp-header v-ref:header></comp-header>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <comp-aside v-ref:aside></comp-aside>\n        <div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n          <router-view></router-view>\n        </div>\n      </div>\n    </div>\n</template>\n<script>\nimport CompHeader from './Header'\nimport CompAside from './Aside'\n\nexport default {\n  components: {\n    CompHeader,\n    CompAside\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Layout.vue?f5df4b74\n **/","<template>\n  <li class=\"dropdown\" :class=\"{'open': opened}\">\n    <a href=\"javascript:;\" @click=\"toggle\">{{ currentLanguage | uppercase }} <span class=\"caret\"></span></a>\n    <ul class=\"dropdown-menu\">\n      <li v-for=\"(code, config) in $localizeConf.languages\" v-if=\"code !== currentLanguage && config.enabled !== false\">\n          <a href=\"{{ $localizeRoutePath($route, code) }}\" @click.prevent=\"changeLanguage(code)\">\n            {{ code | uppercase }} | {{ 'global.lang.' + config.key | translate null code }}<br />\n            <small class=\"text-muted\">{{ 'global.lang.' + config.key | translate null currentLanguage }}</small>\n          </a>\n      </li>\n    </ul>\n  </li>\n</template>\n<script>\nimport { replace } from 'lodash'\nexport default {\n  data () {\n    return {\n      opened: false\n    }\n  },\n  methods: {\n    toggle: function () {\n      this.opened = !this.opened\n    },\n    changeLanguage: function (code) {\n      this.toggle()\n      if (!this.$route.localized) {\n        this.$store.dispatch('SET_APP_LANGUAGE', code)\n      } else {\n        var oldRouteName = this.$route.name\n        var routeName = replace(oldRouteName, /^[a-z]{2}/g, code)\n        this.$router.go({name: routeName})\n      }\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** LanguageSelector.vue?71b2d0fc\n **/","<template>\n  <div class=\"header clearfix\">\n    <nav>\n      <ul class=\"nav nav-pills pull-right\">\n        <li V-link-active><a v-link=\"{name: $localizeRoute('public-index'), exact:true}\">{{ 'public.header.nav.home' | translate }}</a></li>\n        <li v-link-active><a v-link=\"{name: $localizeRoute('features')}\">{{ 'public.header.nav.features' | translate }}</a></li>\n        <li v-link-active><a v-link=\"{name: $localizeRoute('admin-home')}\">{{ 'public.header.nav.admin' | translate }}</a></li>\n        <language-selector></language-selector>\n      </ul>\n    </nav>\n    <h3 class=\"text-muted\"><a v-link=\"{name: $localizeRoute('public-index')}\">{{ 'projectName' | translate }}</a></h3>\n  </div>\n</template>\n\n<script>\nimport LanguageSelector from '../../common/LanguageSelector'\n\nexport default {\n  components: {\n    LanguageSelector\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Header.vue?460e83f2\n **/","<template>\n  <div class=\"container\" style=\"max-width: none !important;\">\n    <public-header></public-header>\n    <router-view></router-view>\n    <public-footer></public-footer>\n  </div>\n</template>\n\n<script>\nimport PublicHeader from './Header'\nimport PublicFooter from './Footer'\n\nexport default {\n  components: {\n    PublicHeader,\n    PublicFooter\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Layout.vue?7ddfb768\n **/","<template>\n  <div class=\"row marketing\">\n    <div class=\"col-sm-12\">\n      <h1>{{ 'f.title' | translate }}</h1>\n    </div>\n    <div class=\"col-sm-12\">\n     <ul>\n       <li>{{ 'f.intro' | translate }}</li>\n       <li>{{ 'f.arl' | translate }}</li>\n       <ul>\n         <li>{{ 'f.arlActivate' | translate }}</li>\n         <li>{{ 'f.dlr' | translate }}</li>\n         <li>{{{ 'f.lroute' | translate injectVars }}}</li>\n         <li>{{ 'f.lrp' | translate }}</li>\n         <li>{{ 'f.cReusing' | translate }} </li>\n       </ul>\n       <li>{{ 'f.uiTrans' | translate }}</li>\n       <ul>\n        <li>{{ 'f.reactTrans' | translate }}</li>\n        <li>{{{ 'f.transFilter' | translate injectVars }}}</li>\n        <li>{{{ 'f.transCall' | translate injectVars }}}</li>\n        <li>{{{ 'f.transDir' | translate injectVars }}}</li>\n        <li>{{ 'f.varInject' | translate }}</li>\n        <li>{{ 'f.transExact' | translate }}</li>\n        <li>{{ 'f.transTitle' | translate }}</li>\n        <li>{{ 'f.fallbackLang' | translate }}</li>\n       </ul>\n       <li>{{{ 'f.locStor' | translate injectVars }}}</li>\n       <li>{{ 'f.globMix' | translate }}</li>\n       <li>{{ 'f.transStruct' | translate }}</li>\n     </ul>\n     <h1>{{ 'f.intro' | translate }}</h1>\n\n     {{ 'f.ph1' | translate }}<br />\n     {{ 'f.ph2' | translate }}<br /><br />\n\n     <h1>{{ 'f.arl' | translate }}</h1>\n\n     {{ 'f.ph3' | translate }}<br /><br />\n\n     {{ 'f.ph4' | translate }} <a v-link=\"{name: $localizeRoute('public-index')}\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\"{name: $localizeRoute('features')}\">{{ 'public.header.nav.features' | translate }}</a> {{{ 'f.ph5' | translate injectVars }}}\n     <h3>{{ 'f.arlActivate' | translate }}</h3>\n     {{{ 'f.ph6' | translate injectVars }}}<br />\n     {{ 'f.ph7' | translate }}<br />\n     <code>\n      ...\n      <br />\n      export default {<br />\n      &nbsp;&nbsp;'/': {<br />\n      &nbsp;&nbsp;&nbsp;&nbsp;component: PublicLayout,<br />\n      &nbsp;&nbsp;&nbsp;&nbsp;localized: true,<br />\n      ...\n     </code>\n\n     <h3>{{ 'f.dlr' | translate }}</h3>\n     {{ 'f.ph8' | translate }}<br />\n     <code>defaultLanguage: 'en'</code><br /><br />\n     {{ 'f.ph9' | translate }}\n     <a v-link=\"{name: $localizeRoute('public-index')}\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\"{name: $localizeRoute('features')}\">{{ 'public.header.nav.features' | translate }}</a>\n     {{ 'f.ph10' | translate }}<br /><br />\n     {{{ 'f.ph11' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph12' | translate injectVars }}}<br />\n\n     <h3>{{{ 'f.lroute' | translate injectVars }}}</h3>\n\n     {{{ 'f.ph13' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph14' | translate injectVars }}}<br />\n     {{{ 'f.ph15' | translate injectVars }}}\n     {{{ 'f.ph16' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph17' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph18' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph19' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph20' | translate injectVars }}}<br /><br />\n     {{ 'f.ph21' | translate }} <br /><br />\n\n     <code>{{ vars.localizeRouteExample }}</code><br />\n     {{ 'f.ph22' | translate }}<br />\n     <code>{{ vars.localizeRouteExampleExactLang }}</code>\n\n     <h3>{{ 'f.lrp' | translate }}</h3>\n\n     {{ 'f.ph23' | translate }}\n     {{{ 'f.ph24' | translate injectVars }}}<br /><br />\n     {{ 'f.ph25' | translate }}\n\n     <h3>{{ 'f.cReusing' | translate }}</h3>\n     {{ 'f.ph26' | translate }}<br />\n     {{{ 'f.ph27' | translate injectVars }}}<br >\n     {{{ 'f.ph28' | translate injectVars }}}<br /><br />\n\n     {{ 'f.ph49' | translate }}<br /><br />\n     <button class=\"btn btn-default btn-lg\" @click=\"counter++\">Counter: {{ counter }}</button><br /><br />\n     <div class=\"btn-group\">\n      <a v-link=\"{name: $localizeRoute('features', 'en')}\" class=\"btn\" :class=\"{'btn-primary': isEn, 'btn-default': isRu}\">EN</a>\n      <a v-link=\"{name: $localizeRoute('features', 'ru')}\" class=\"btn\" :class=\"{'btn-primary': isRu, 'btn-default': isEn}\">RU</a>\n     </div><br /><br />\n\n     {{{ 'f.ph29' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph30' | translate injectVars }}}<br /><br />\n     {{ 'f.ph31' | translate }} <br />\n     <code>\n     route: {<br />\n     &nbsp;&nbsp;data: function (transtion) {<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;if (this.$isJustLanguageSwitching(transition)) {<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;}<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;// тут получаем данные<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;<br />\n     &nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br />\n     &nbsp;&nbsp;}<br />\n     }\n     </code>\n\n     <h1>{{ 'f.uiTrans' | translate }}</h1>\n     <h3>{{ 'f.reactTrans' | translate }}</h3>\n     {{ 'f.ph32' | translate }}<br /><br /><br />\n\n     <h3>{{ 'f.transFilter2' | translate }}</h3>\n     <h3><code>{{ vars.filterExample }}</code></h3><br /><br />\n\n     <h3>{{ 'f.transCall2' | translate }}</h3>\n     <h3><code>{{ vars.directCallExample }}</code></h3><br />\n     <h3>{{ 'f.ph47' | translate }}</h3>\n     <h3><code>{{ vars.directCallExample2 }}</code></h3><br />\n     <br /><br />\n\n     <h3>{{ 'f.transDir2' | translate }}</h3>\n     <h3><code>{{ vars.directiveExample }}</code></h3><br /><br /><br />\n\n     <h3>{{ 'f.varInject' | translate }}</h3>\n\n     <h3>{{ 'f.varInjectF' | translate }}</h3>\n     <h3><code>{{ vars.injectViaFilter }}</code></h3><br /><br />\n\n     <h3>{{ 'f.varInjectC' | translate }}</h3>\n     <h3><code>{{ vars.injectViaDirectCall }}</code></h3><br /><br />\n\n     <h3>{{ 'f.varInjectD' | translate }}</h3>\n     <h5><code>{{ vars.injectViaDirective }}</code></h5><br /><br />\n\n     <h3>{{ 'f.transExact' | translate }}</h3>\n     <h3>{{ 'f.transExactF' | translate }}</h3>\n     <h3><code>{{ vars.exaxtExampleFilter }}</code></h3><br /><br />\n\n     <h3>{{ 'f.transExactC' | translate }}</h3>\n     <h3><code>{{ vars.exaxtExampleCall }}</code></h3><br /><br />\n\n     <h3>{{ 'f.transExactD' | translate }}</h3>\n     <h4><code>{{ vars.exaxtExampleDirective }}</code></h4><br /><br />\n\n     <h3>{{ 'f.transTitle' | translate }}</h3>\n     {{ 'f.ph33' | translate }}<br />\n     <h3>\n     <code>\n       {{ vars.titleEx1 }}<br /><br />\n       {{ vars.titleEx2 }}<br /><br />\n       {{ vars.titleEx3 }}<br /><br />\n       {{ vars.titleEx4 }}<br /><br />\n     </code>\n     </h3>\n     {{ 'f.ph34' | translate }}\n\n     <h3>{{ 'f.fallbackLang' | translate }}</h3>\n     {{ 'f.ph35' | translate }}\n     {{ 'f.ph36' | translate }}<br /><br />\n     {{{ 'f.ph37' | translate injectVars }}}<br />\n     <code>fallbackOnNoTranslation: true</code><br /><br />\n\n     {{ 'f.ph38' | translate }}<br />\n     <code>fallbackLаnguage: 'en'</code>\n\n     <h2>{{{ 'f.locStor' | translate injectVars }}}</h2>\n     {{ 'f.ph39' | translate }}<br />\n     {{ 'f.ph40' | translate }}<br />\n     {{ 'f.ph41' | translate }}\n     <br /><br />\n     {{{ 'f.ph42' | translate injectVars }}}<br /><br />\n     {{{ 'f.ph43' | translate injectVars }}}<br />\n     {{{ 'f.ph44' | translate injectVars }}}\n\n     <h2>{{ 'f.globMix' | translate injectVars }}</h2>\n     {{ 'f.ph45' | translate }}<br />\n     {{{ 'f.ph46' | translate injectVars }}}\n\n\n     <!-- <h2>{{ 'f.transStruct' | translate injectVars }}</h2> -->\n     <!-- <h2>{{ 'f.confFile' | translate injectVars }}</h2> -->\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      counter: 0,\n      vars: {\n        translate: '',\n\n        localizeRouteExample: '<a v-link=\"{name: $localizeRoute(\\'features\\')}\">',\n        localizeRouteExampleExactLang: '<a v-link=\"{name: $localizeRoute(\\'features\\', \\'de\\')}\">',\n\n        'filterExample': '{{ \\'projectName\\' | translate }}',\n        'directCallExample': '{{ $translate(\\'projectName\\') }}',\n        'directCallExample2': '<span v-text=\"$translate(\\'projectName\\')\"></span>',\n        'directiveExample': '<span v-localize=\"{path: \\'projectName\\'}\"></span>',\n\n        'injectViaFilter': '{{ \\'phrase-with-vars\\' | translate injectVars }}',\n        'injectViaDirectCall': '{{ $translate(\\'phrase-with-vars\\', injectVars) }}',\n        'injectViaDirective': '<span v-localize=\"{path: \\'phrase-with-vars\\', vars: injectVars}\"></span>',\n\n        'exaxtExampleFilter': '{{ \\'projectName\\' | translate null \\'en\\' }}',\n        'exaxtExampleCall': '{{ $translate(\\'projectName\\', null, \\'en\\') }}',\n        'exaxtExampleDirective': '<span v-localize=\"{path: \\'projectName\\', lang: \\'en\\'}\"></span>',\n\n        'titleEx1': '<title>{{ $translate(currentTitle) }}</title>',\n        'titleEx2': '<title>{{ currentTitle | translate }}</title>',\n        'titleEx3': '<title v-localize=\"{path: currentTitle}\"></title>',\n        'titleEx4': '<title v-text=\"$translate(currentTitle)\"></title>'\n      },\n      injectVars: {\n        '%foo%': 'Foo',\n        '%bar%': 'Bar',\n\n        '%v-link%': '<code>v-link</code>',\n        '%translate%': '<code>translate</code>',\n        '%tCall%': '<code>$translate()</code>',\n        '%v-localize%': '<code>v-localize</code>',\n        '%link-about%': '',\n        '%link-features%': '',\n        '%rlRu%': '<code>/ru</code>',\n        '%locTrue%': '<code>localized: true</code>',\n        '%true%': '<code>true</code>',\n        '%false%': '<code>false</code>',\n        '%rn-features%': '<code>features</code>',\n        '%rp-features%': '<code>/features</code>',\n        '%rr%': '<code>/</code>',\n        '%en-features%': '<code>en_features</code>',\n        '%ru-features%': '<code>ru_features</code>',\n        '%lRoute%': '<code>$localizeRoute()</code>',\n        '%lRoutePath%': '<code>$localizeRoutePath($route, language)</code>',\n        '%component%': '<code>component:</code>',\n        '%dataObj%': '<code>$data</code>',\n        '%dataHook%': '<code>data()</code>',\n        '%isJustLangSw%': '<code>$isJustLanguageSwitching(transition)</code>',\n        '%transtion%': '<code>transition</code>',\n        '%resaveOnLocalizedRoutesCode%': '<code>resaveOnLocalizedRoutes</code>',\n        '%currentLanguage%': '<code>currentLanguage</code>',\n        '%thisCurrentLanguage%': '<code>this.currentLanguage</code>',\n        '%defaultLanguageRouteFalse%': '<code>defaultLanguageRoute: false</code>'\n      }\n    }\n  },\n  computed: {\n    isEn: function () {\n      return this.currentLanguage === 'en'\n    },\n    isRu: function () {\n      return this.currentLanguage === 'ru'\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Features.vue?4d5cf0e4\n **/","<template>\n<div class=\"jumbotron\">\n  <h2>{{ 'public.index.title' | translate }}</h2>\n  <br />\n  <p class=\"lead\">{{ 'public.index.jdesc' | translate }}</p>\n  <p>{{ 'public.index.sources' | translate  }}</p>\n  <a target=\"_blank\" href=\"https://github.com/Saymon-biz/vue-localize-example\">https://github.com/Saymon-biz/vue-localize-example</a>\n</div>\n</template>\n<script>\n  export default {\n    route: {\n      data: function (transition) {\n        if (this.$isJustLanguageSwitching(transition)) {\n          console.log('language switching')\n          // avoid data reloading on language switching\n        } else {\n          console.log('transition from another route')\n          // here you can reload data\n        }\n\n        transition.next()\n      }\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Index.vue?7fba7497\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/define-property.js\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/defineProperty.js\n ** module id = 22\n ** module chunks = 0\n **/","var $ = require('../../modules/$');\nmodule.exports = function defineProperty(it, key, desc){\n  return $.setDesc(it, key, desc);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/object/define-property.js\n ** module id = 23\n ** module chunks = 0\n **/","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 4.6.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash -d -o ./foo/lodash.js`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.6.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+',\n    rsUpper + '+',\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[mapTag] = cloneableTags[numberTag] =\n  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n  cloneableTags[setTag] = cloneableTags[stringTag] =\n  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n  cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n    ? exports\n    : undefined;\n\n  /** Detect free variable `module`. */\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n    ? module\n    : undefined;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = (freeModule && freeModule.exports === freeExports)\n    ? freeExports\n    : undefined;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n  /** Detect free variable `window`. */\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal ||\n    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n      freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * Creates a new array concatenating `array` with `other`.\n   *\n   * @private\n   * @param {Array} array The first array to concatenate.\n   * @param {Array} other The second array to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   */\n  function arrayConcat(array, other) {\n    var index = -1,\n        length = array.length,\n        othIndex = -1,\n        othLength = other.length,\n        result = Array(length + othLength);\n\n    while (++index < length) {\n      result[index] = array[index];\n    }\n    while (++othIndex < othLength) {\n      result[index++] = other[othIndex];\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    return !!array.length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? current === current\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.find` and `_.findKey`, without\n   * support for iteratee shorthands, which iterates over `collection` using\n   * `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFind(collection, predicate, eachFunc, retKey) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = retKey ? key : value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the new array of key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Used by `_.orderBy` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n   * of corresponding values.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]|string[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = compareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * (order == 'desc' ? -1 : 1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to an array.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to mock `Date#getTime` use in `_.now`.\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        clearTimeout = context.clearTimeout,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getPrototypeOf = Object.getPrototypeOf,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var Map = getNative(context, 'Map'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var mapCtorString = Map ? funcToString.call(Map) : '',\n        setCtorString = Set ? funcToString.call(Set) : '',\n        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chaining. Methods that operate on and return arrays, collections, and\n     * functions can be chained together. Methods that retrieve a single value or\n     * may return a primitive value will automatically end the chain sequence and\n     * return the unwrapped value. Otherwise, the value must be unwrapped with\n     * `_#value`.\n     *\n     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n     * may be enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization to merge iteratee calls; this avoids the creation\n     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n     * Sections of a chain sequence qualify for shortcut fusion if the section is\n     * applied to an array of at least two hundred elements and any iteratees\n     * accept only one argument. The heuristic for whether a section qualifies\n     * for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatten`, `flattenDeep`, `flattenDepth`, `flip`, `flow`, `flowRight`,\n     * `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`, `intersection`,\n     * `intersectionBy`, `intersectionWith`, `invert`, `invertBy`, `invokeMap`,\n     * `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`,\n     * `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`, `method`,\n     * `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`, `orderBy`,\n     * `over`, `overArgs`, `overEvery`, `overSome`, `partial`, `partialRight`,\n     * `partition`, `pick`, `pickBy`, `plant`, `property`, `propertyOf`, `pull`,\n     * `pullAll`, `pullAllBy`, `pullAllWith`, `pullAt`, `push`, `range`,\n     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,\n     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,\n     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,\n     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `update`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,\n     * `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `each`, `eachRight`,\n     * `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`, `floor`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`, `includes`,\n     * `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`, `isArrayBuffer`,\n     * `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`, `isDate`,\n     * `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`, `isFinite`,\n     * `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`, `isMatchWith`,\n     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,\n     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isSet`, `isString`,\n     * `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`,\n     * `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`, `now`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toInteger`, `toJSON`, `toLength`, `toLower`,\n     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,\n     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,\n     * `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an hash object.\n     *\n     * @private\n     * @constructor\n     * @returns {Object} Returns the new hash object.\n     */\n    function Hash() {}\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(hash, key) {\n      return hashHas(hash, key) && delete hash[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(hash, key) {\n      if (nativeCreate) {\n        var result = hash[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(hash, key) {\n      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function hashSet(hash, key, value) {\n      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function MapCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': Map ? new Map : [],\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapDelete(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapGet(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.get(key) : assocGet(data.map, key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.has(key) : assocHas(data.map, key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache object.\n     */\n    function mapSet(key, value) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n      } else if (Map) {\n        data.map.set(key, value);\n      } else {\n        assocSet(data.map, key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a set cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.push(values[index]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache`.\n     *\n     * @private\n     * @param {Object} cache The set cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function cacheHas(cache, value) {\n      var map = cache.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        return hash[value] === HASH_UNDEFINED;\n      }\n      return map.has(value);\n    }\n\n    /**\n     * Adds `value` to the set cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var map = this.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        hash[value] = HASH_UNDEFINED;\n      }\n      else {\n        map.set(value, HASH_UNDEFINED);\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function Stack(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = { 'array': [], 'map': null };\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocDelete(array, key) : data.map['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocGet(array, key) : data.map.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocHas(array, key) : data.map.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache object.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__,\n          array = data.array;\n\n      if (array) {\n        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n          assocSet(array, key, value);\n        } else {\n          data.array = null;\n          data.map = new MapCache(array);\n        }\n      }\n      var map = data.map;\n      if (map) {\n        map.set(key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Removes `key` and its value from the associative array.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function assocDelete(array, key) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = array.length - 1;\n      if (index == lastIndex) {\n        array.pop();\n      } else {\n        splice.call(array, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the associative array value for `key`.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function assocGet(array, key) {\n      var index = assocIndexOf(array, key);\n      return index < 0 ? undefined : array[index][1];\n    }\n\n    /**\n     * Checks if an associative array value for `key` exists.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function assocHas(array, key) {\n      return assocIndexOf(array, key) > -1;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `key` is found in `array`\n     * of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Sets the associative array `key` to `value`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function assocSet(array, key, value) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        array.push([key, value]);\n      } else {\n        array[index][1] = value;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the array-like object.\n     */\n    function baseCastArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the array-like object.\n     */\n    function baseCastFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function baseCastPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            result = baseAssign(result, value);\n            return isFull ? copySymbols(value, result) : result;\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return (isFull && !isArr) ? copySymbols(value, result) : result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support for\n     * excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && isArrayLikeObject(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return object == null ? object : baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return hasOwnProperty.call(object, key) ||\n        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = baseCastPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          stack || (stack = new Stack);\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack,\n              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      var type = typeof value;\n      if (type == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value &&\n            (value !== undefined || (key in Object(object)));\n        };\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      var props = (isArray(source) || isTypedArray(source))\n        ? undefined\n        : keysIn(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, !customizer);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, !customizer);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), getIteratee());\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property names.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key) {\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (lastIndex == length || index != previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = baseCastPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[last(path)];\n            }\n          }\n          else {\n            delete array[index];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the new array of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq`.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array) {\n      return baseSortedUniqBy(array);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniqBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniqBy(array, iteratee) {\n      var index = 0,\n          length = array.length,\n          value = array[0],\n          computed = iteratee ? iteratee(value) : value,\n          seen = computed,\n          resIndex = 1,\n          result = [value];\n\n      while (++index < length) {\n        value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n        if (!eq(computed, seen)) {\n          seen = computed;\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n      object = parent(object, path);\n      var key = last(path);\n      return (object != null && has(object, key)) ? delete object[key] : true;\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property names.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map) {\n      return arrayReduce(mapToArray(map), addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set) {\n      return arrayReduce(setToArray(set), addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object) {\n      return copyObjectWith(source, props, object);\n    }\n\n    /**\n     * This function is like `copyObject` except that it accepts a function to\n     * customize copied values.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObjectWith(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = typeof customizer == 'function'\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols ? strSymbols[0] : string.charAt(0),\n            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string)), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getPlaceholder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getPlaceholder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new invoker function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(string, length, chars) {\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars === undefined ? ' ' : (chars + '');\n\n      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? stringToArray(result).slice(0, padLength).join('')\n        : result.slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newArgPos = argPos ? copyArray(argPos) : undefined,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, newArgPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = toInteger(precision);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var index = -1,\n          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isUnordered) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask | UNORDERED_COMPARE_FLAG, stack.set(object, other));\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n     * customized this function returns the custom method, otherwise it returns\n     * `baseIteratee`. If arguments are provided the chosen function is invoked\n     * with them and its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = toPairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getPlaceholder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Creates an array of the own symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = getOwnPropertySymbols || function() {\n      return [];\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n    if ((Map && getTag(new Map) != mapTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : null,\n            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case mapCtorString: return mapTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasFunc(object, path);\n      if (!result && !isKey(path)) {\n        path = baseCastPath(path);\n        object = parent(object, path);\n        if (object != null) {\n          path = last(path);\n          result = hasFunc(object, path);\n        }\n      }\n      var length = object ? object.length : undefined;\n      return result || (\n        !!length && isLength(length) && isIndex(path, length) &&\n        (isArray(object) || isString(object) || isArguments(object))\n      );\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototypeOf(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (typeof value == 'number') {\n        return true;\n      }\n      return !isArray(value) &&\n        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n          (object != null && value in Object(object)));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == 'number' || type == 'boolean' ||\n        (type == 'string' && value != '__proto__') || value == null;\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * modify function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = copyArray(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    function stringToPath(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=0] The length of each chunk.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size) {\n      size = nativeMax(toInteger(size), 0);\n\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var concat = rest(function(array, values) {\n      if (!isArray(array)) {\n        array = array == null ? [] : [Object(array)];\n      }\n      values = baseFlatten(values, 1);\n      return arrayConcat(array, values);\n    });\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([3, 2, 1], [4, 2]);\n     * // => [3, 1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n     * // => [3.1, 1.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3))\n        : -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n        : -1;\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n     * from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      fromIndex = toInteger(fromIndex);\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [4, 2], [1, 2]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, baseCastArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pullAll(array, [2, 3]);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = arrayMap(baseFlatten(indexes, 1), String);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(compareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n     * to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 5], 4);\n     * // => 0\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n     *\n     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([1, 1, 2, 2], 2);\n     * // => 2\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5], 4);\n     * // => 1\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniqBy(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with three\n     * arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2, 1], [4, 2], [1, 2]);\n     * // => [2, 1, 4]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1, 1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([2, 1], [4, 2]);\n     * // => [1, 4]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n     * The result of such method chaining must be unwrapped with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     *\n     * _(['a', 'b', 'c']).at(0, 2).value();\n     * // => ['a', 'c']\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * This method is the wrapper version of `_.flatMap`.\n     *\n     * @name flatMap\n     * @memberOf _\n     * @category Seq\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _([1, 2]).flatMap(duplicate).value();\n     * // => [1, 1, 2, 2]\n     */\n    function wrapperFlatMap(iteratee) {\n      return this.map(iteratee).flatten();\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    function find(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate, true);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Creates an array of flattened values by running each element in `collection`\n     * through `iteratee` and concating its result to the other mapped values.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n     * for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `1` then `2`\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, baseCastFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `2` then `1`\n     */\n    function forEachRight(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, baseCastFunction(iteratee));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of elements responsible for generating the key.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it's\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n     * and `words`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=0] The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = baseClamp(toInteger(n), 0, length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by, specified individually or in arrays.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees.length = 1;\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @type {Function}\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = Date.now;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getPlaceholder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getPlaceholder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it's invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          leading = false,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function flush() {\n        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n          result = func.apply(thisArg, args);\n        }\n        cancel();\n        return result;\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!lastCalled && !maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled);\n\n          var isCalled = (remaining <= 0 || remaining > maxWait) &&\n            (leading || maxTimeoutId);\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => logs 'deferred' after one or more milliseconds\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getPlaceholder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getPlaceholder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = args.slice(0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? constant(false) : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty collection or object. A value is considered\n     * empty if it's an `arguments` object, array, string, or jQuery-like collection\n     * with a length of `0` or has no own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) ||\n            isFunction(value.splice) || isArguments(value))) {\n        return !value.length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MAX_VALUE);\n     * // => true\n     *\n     * _.isFinite(3.14);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(funcToString.call(value));\n      }\n      return isObjectLike(value) &&\n        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototypeOf(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3');\n     * // => 3\n     */\n    function toInteger(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      var remainder = value % 1;\n      return value === value ? (remainder ? value - remainder : value) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3);\n     * // => 3\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3');\n     * // => 3\n     */\n    function toNumber(value) {\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string if it's not one. An empty string is returned\n     * for `null` and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (value == null) {\n        return '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source objects to the destination\n     * object. Source objects are applied from left to right. Subsequent sources\n     * overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     *\n     * _.at(['a', 'b', 'c'], 0, 2);\n     * // => ['a', 'c']\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a `properties`\n     * object is given its own enumerable properties are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable properties of source objects to the\n     * destination object for all destination properties that resolve to `undefined`.\n     * Source objects are applied from left to right. Once a property is set,\n     * additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, baseCastFunction(iteratee), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, baseCastFunction(iteratee), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, baseCastFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, baseCastFunction(iteratee));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b.c');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` through `iteratee`.\n     * The corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`. The iteratee is invoked with\n     * three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee is invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable properties of source objects into the destination\n     * object. Source properties that resolve to `undefined` are skipped if a\n     * destination value exists. Array and plain object properties are merged\n     * recursively.Other objects and value types are overridden by assignment.\n     * Source objects are applied from left to right. Subsequent sources\n     * overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined` merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to omit, specified\n     *  individually or in arrays.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), String);\n      return basePick(object, baseDifference(keysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable properties of `object` that `predicate`\n     * doesn't return truthy for. The predicate is invoked with two arguments:\n     * (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to pick, specified\n     *  individually or in arrays.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, baseFlatten(props, 1));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it's invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      if (!isKey(path, object)) {\n        path = baseCastPath(path);\n        var result = get(object, path);\n        object = parent(object, path);\n      } else {\n        result = object == null ? undefined : object[path];\n      }\n      if (result === undefined) {\n        result = defaultValue;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable key-value pairs for `object` which\n     * can be consumed by `_.fromPairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    function toPairs(object) {\n      return baseToPairs(object, keys(object));\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable key-value pairs for\n     * `object` which can be consumed by `_.fromPairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n     */\n    function toPairsIn(object) {\n      return baseToPairs(object, keysIn(object));\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The iteratee is invoked with four arguments:\n     * (accumulator, value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n     * a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = typeof target == 'string' ? target : (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      return string + createPadding(string, length, chars);\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      return createPadding(string, length, chars) + string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      string = toString(string);\n      n = toInteger(n);\n\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the new array of string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      return toString(string).split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + capitalize(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar');\n     * // => '--foo-bar'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar');\n     * // => '--FOO-BAR'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrim, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars);\n\n      return strSymbols\n        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)\n        .join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimEnd, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols\n        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)\n        .join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimStart, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols\n        .slice(charsStartIndex(strSymbols, stringToArray(chars)))\n        .join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options=({})] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? toString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? strSymbols.slice(0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, 'onClick');\n     * jQuery(element).on('click', view.onClick);\n     * // => logs 'clicked docs' when clicked\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` invoking the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name the created callback returns the\n     * property value for a given element. If `func` is an object the created\n     * callback returns `true` for elements that contain the equivalent object\n     * properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n     *   return !p ? callback(func) : function(object) {\n     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n     *   };\n     * });\n     *\n     * _.filter(users, 'age > 36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns its nth argument.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     *\n     * func('a', 'b', 'c');\n     * // => 'b'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return function() {\n        return arguments[n];\n      };\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments provided\n     * to the created function and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over(Math.max, Math.min);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(true));\n     * // => [true, true, true, true]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = baseCastFunction(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     *\n     * var path = ['a', 'b', 'c'],\n     *     newPath = _.toPath(path);\n     *\n     * console.log(newPath);\n     * // => ['a', 'b', 'c']\n     *\n     * console.log(path === newPath);\n     * // => false\n     */\n    function toPath(value) {\n      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      var result;\n      if (augend === undefined && addend === undefined) {\n        return 0;\n      }\n      if (augend !== undefined) {\n        result = augend;\n      }\n      if (addend !== undefined) {\n        result = result === undefined ? addend : (result + addend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, gt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), gt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return sum(array) / (array ? array.length : 0);\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, lt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), lt)\n        : undefined;\n    }\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    function subtract(minuend, subtrahend) {\n      var result;\n      if (minuend === undefined && subtrahend === undefined) {\n        return 0;\n      }\n      if (minuend !== undefined) {\n        result = minuend;\n      }\n      if (subtrahend !== undefined) {\n        result = result === undefined ? subtrahend : (result - subtrahend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Avoid inheriting from `Object.prototype` when possible.\n    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\n    // Add functions to the `MapCache`.\n    MapCache.prototype.clear = mapClear;\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `SetCache`.\n    SetCache.prototype.push = cachePush;\n\n    // Add functions to the `Stack` cache.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.flatMap = wrapperFlatMap;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose lodash on the free variable `window` or `self` when available. This\n  // prevents errors in cases where lodash is loaded by a script tag in the presence\n  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n  (freeWindow || freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"col-sm-3 col-md-2 sidebar\\\"> <ul class=\\\"nav nav-sidebar\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'admin.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-settings')}\\\">{{ 'admin.nav.settings' | translate }}</a></li> </ul> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/layout/Aside.vue\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"> <div class=container-fluid> <div class=navbar-header> <button type=button class=\\\"navbar-toggle collapsed\\\" @click=\\\"mobileMenuCollapsed = !mobileMenuCollapsed\\\"> <span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span> </button> <a class=navbar-brand v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'projectName' | translate }}</a> </div> <div id=navbar class=\\\"navbar-collapse collapse\\\" :class=\\\"{'in': mobileMenuCollapsed}\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'admin.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-settings')}\\\">{{ 'admin.nav.settings' | translate }}</a></li> <language-selector></language-selector> </ul> </div> </div> </nav>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/layout/Header.vue\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<comp-header v-ref:header></comp-header> <div class=container-fluid> <div class=row> <comp-aside v-ref:aside></comp-aside> <div class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\\\"> <router-view></router-view> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/layout/Layout.vue\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<h1>{{ 'admin.home.title' | translate }}</h1> <p>{{ 'admin.home.helloText' | translate }}</p> <p>{{ 'admin.home.helloText2' | translate }}</p> <p>{{ 'admin.home.helloText3' | translate }}</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/pages/Home.vue\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"<h1>{{ 'admin.settings.title' | translate }}</h1>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/pages/Settings.vue\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"<li class=dropdown :class=\\\"{'open': opened}\\\"> <a href=javascript:; @click=toggle>{{ currentLanguage | uppercase }} <span class=caret></span></a> <ul class=dropdown-menu> <li v-for=\\\"(code, config) in $localizeConf.languages\\\" v-if=\\\"code !== currentLanguage && config.enabled !== false\\\"> <a href=\\\"{{ $localizeRoutePath($route, code) }}\\\" @click.prevent=changeLanguage(code)> {{ code | uppercase }} | {{ 'global.lang.' + config.key | translate null code }}<br/> <small class=text-muted>{{ 'global.lang.' + config.key | translate null currentLanguage }}</small> </a> </li> </ul> </li>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/LanguageSelector.vue\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = \"<footer class=footer> <p>&copy; 2016 {{ 'projectName' | translate }}</p> </footer>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/layout/Footer.vue\n ** module id = 32\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"header clearfix\\\"> <nav> <ul class=\\\"nav nav-pills pull-right\\\"> <li v-link-active><a v-link=\\\"{name: $localizeRoute('public-index'), exact:true}\\\">{{ 'public.header.nav.home' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a></li> <li v-link-active><a v-link=\\\"{name: $localizeRoute('admin-home')}\\\">{{ 'public.header.nav.admin' | translate }}</a></li> <language-selector></language-selector> </ul> </nav> <h3 class=text-muted><a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'projectName' | translate }}</a></h3> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/layout/Header.vue\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = \"<div class=container style=max-width:none!important> <public-header></public-header> <router-view></router-view> <public-footer></public-footer> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/layout/Layout.vue\n ** module id = 34\n ** module chunks = 0\n **/","module.exports = \"<div class=jumbotron> <h2>{{ 'public.err404.title' | translate }}</h2> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/pages/Error404.vue\n ** module id = 35\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"row marketing\\\"> <div class=col-sm-12> <h1>{{ 'f.title' | translate }}</h1> </div> <div class=col-sm-12> <ul> <li>{{ 'f.intro' | translate }}</li> <li>{{ 'f.arl' | translate }}</li> <ul> <li>{{ 'f.arlActivate' | translate }}</li> <li>{{ 'f.dlr' | translate }}</li> <li>{{{ 'f.lroute' | translate injectVars }}}</li> <li>{{ 'f.lrp' | translate }}</li> <li>{{ 'f.cReusing' | translate }} </li> </ul> <li>{{ 'f.uiTrans' | translate }}</li> <ul> <li>{{ 'f.reactTrans' | translate }}</li> <li>{{{ 'f.transFilter' | translate injectVars }}}</li> <li>{{{ 'f.transCall' | translate injectVars }}}</li> <li>{{{ 'f.transDir' | translate injectVars }}}</li> <li>{{ 'f.varInject' | translate }}</li> <li>{{ 'f.transExact' | translate }}</li> <li>{{ 'f.transTitle' | translate }}</li> <li>{{ 'f.fallbackLang' | translate }}</li> </ul> <li>{{{ 'f.locStor' | translate injectVars }}}</li> <li>{{ 'f.globMix' | translate }}</li> <li>{{ 'f.transStruct' | translate }}</li> </ul> <h1>{{ 'f.intro' | translate }}</h1> {{ 'f.ph1' | translate }}<br/> {{ 'f.ph2' | translate }}<br/><br/> <h1>{{ 'f.arl' | translate }}</h1> {{ 'f.ph3' | translate }}<br/><br/> {{ 'f.ph4' | translate }} <a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a> {{{ 'f.ph5' | translate injectVars }}} <h3>{{ 'f.arlActivate' | translate }}</h3> {{{ 'f.ph6' | translate injectVars }}}<br/> {{ 'f.ph7' | translate }}<br/> <code> ... <br/> export default {<br/> &nbsp;&nbsp;'/': {<br/> &nbsp;&nbsp;&nbsp;&nbsp;component: PublicLayout,<br/> &nbsp;&nbsp;&nbsp;&nbsp;localized: true,<br/> ... </code> <h3>{{ 'f.dlr' | translate }}</h3> {{ 'f.ph8' | translate }}<br/> <code>defaultLanguage: 'en'</code><br/><br/> {{ 'f.ph9' | translate }} <a v-link=\\\"{name: $localizeRoute('public-index')}\\\">{{ 'public.header.nav.home' | translate }}</a> {{ 'f.ph48' | translate }} <a v-link=\\\"{name: $localizeRoute('features')}\\\">{{ 'public.header.nav.features' | translate }}</a> {{ 'f.ph10' | translate }}<br/><br/> {{{ 'f.ph11' | translate injectVars }}}<br/><br/> {{{ 'f.ph12' | translate injectVars }}}<br/> <h3>{{{ 'f.lroute' | translate injectVars }}}</h3> {{{ 'f.ph13' | translate injectVars }}}<br/><br/> {{{ 'f.ph14' | translate injectVars }}}<br/> {{{ 'f.ph15' | translate injectVars }}} {{{ 'f.ph16' | translate injectVars }}}<br/><br/> {{{ 'f.ph17' | translate injectVars }}}<br/><br/> {{{ 'f.ph18' | translate injectVars }}}<br/><br/> {{{ 'f.ph19' | translate injectVars }}}<br/><br/> {{{ 'f.ph20' | translate injectVars }}}<br/><br/> {{ 'f.ph21' | translate }} <br/><br/> <code>{{ vars.localizeRouteExample }}</code><br/> {{ 'f.ph22' | translate }}<br/> <code>{{ vars.localizeRouteExampleExactLang }}</code> <h3>{{ 'f.lrp' | translate }}</h3> {{ 'f.ph23' | translate }} {{{ 'f.ph24' | translate injectVars }}}<br/><br/> {{ 'f.ph25' | translate }} <h3>{{ 'f.cReusing' | translate }}</h3> {{ 'f.ph26' | translate }}<br/> {{{ 'f.ph27' | translate injectVars }}}<br> {{{ 'f.ph28' | translate injectVars }}}<br/><br/> {{ 'f.ph49' | translate }}<br/><br/> <button class=\\\"btn btn-default btn-lg\\\" @click=counter++>Counter: {{ counter }}</button><br/><br/> <div class=btn-group> <a v-link=\\\"{name: $localizeRoute('features', 'en')}\\\" class=btn :class=\\\"{'btn-primary': isEn, 'btn-default': isRu}\\\">EN</a> <a v-link=\\\"{name: $localizeRoute('features', 'ru')}\\\" class=btn :class=\\\"{'btn-primary': isRu, 'btn-default': isEn}\\\">RU</a> </div><br/><br/> {{{ 'f.ph29' | translate injectVars }}}<br/><br/> {{{ 'f.ph30' | translate injectVars }}}<br/><br/> {{ 'f.ph31' | translate }} <br/> <code> route: {<br/> &nbsp;&nbsp;data: function (transtion) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;if (this.$isJustLanguageSwitching(transition)) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br/> &nbsp;&nbsp;&nbsp;&nbsp;}<br/> &nbsp;&nbsp;&nbsp;&nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;// тут получаем данные<br/> &nbsp;&nbsp;&nbsp;&nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;transition.next()<br/> &nbsp;&nbsp;}<br/> } </code> <h1>{{ 'f.uiTrans' | translate }}</h1> <h3>{{ 'f.reactTrans' | translate }}</h3> {{ 'f.ph32' | translate }}<br/><br/><br/> <h3>{{ 'f.transFilter2' | translate }}</h3> <h3><code>{{ vars.filterExample }}</code></h3><br/><br/> <h3>{{ 'f.transCall2' | translate }}</h3> <h3><code>{{ vars.directCallExample }}</code></h3><br/> <h3>{{ 'f.ph47' | translate }}</h3> <h3><code>{{ vars.directCallExample2 }}</code></h3><br/> <br/><br/> <h3>{{ 'f.transDir2' | translate }}</h3> <h3><code>{{ vars.directiveExample }}</code></h3><br/><br/><br/> <h3>{{ 'f.varInject' | translate }}</h3> <h3>{{ 'f.varInjectF' | translate }}</h3> <h3><code>{{ vars.injectViaFilter }}</code></h3><br/><br/> <h3>{{ 'f.varInjectC' | translate }}</h3> <h3><code>{{ vars.injectViaDirectCall }}</code></h3><br/><br/> <h3>{{ 'f.varInjectD' | translate }}</h3> <h5><code>{{ vars.injectViaDirective }}</code></h5><br/><br/> <h3>{{ 'f.transExact' | translate }}</h3> <h3>{{ 'f.transExactF' | translate }}</h3> <h3><code>{{ vars.exaxtExampleFilter }}</code></h3><br/><br/> <h3>{{ 'f.transExactC' | translate }}</h3> <h3><code>{{ vars.exaxtExampleCall }}</code></h3><br/><br/> <h3>{{ 'f.transExactD' | translate }}</h3> <h4><code>{{ vars.exaxtExampleDirective }}</code></h4><br/><br/> <h3>{{ 'f.transTitle' | translate }}</h3> {{ 'f.ph33' | translate }}<br/> <h3> <code> {{ vars.titleEx1 }}<br/><br/> {{ vars.titleEx2 }}<br/><br/> {{ vars.titleEx3 }}<br/><br/> {{ vars.titleEx4 }}<br/><br/> </code> </h3> {{ 'f.ph34' | translate }} <h3>{{ 'f.fallbackLang' | translate }}</h3> {{ 'f.ph35' | translate }} {{ 'f.ph36' | translate }}<br/><br/> {{{ 'f.ph37' | translate injectVars }}}<br/> <code>fallbackOnNoTranslation: true</code><br/><br/> {{ 'f.ph38' | translate }}<br/> <code>fallbackLаnguage: 'en'</code> <h2>{{{ 'f.locStor' | translate injectVars }}}</h2> {{ 'f.ph39' | translate }}<br/> {{ 'f.ph40' | translate }}<br/> {{ 'f.ph41' | translate }} <br/><br/> {{{ 'f.ph42' | translate injectVars }}}<br/><br/> {{{ 'f.ph43' | translate injectVars }}}<br/> {{{ 'f.ph44' | translate injectVars }}} <h2>{{ 'f.globMix' | translate injectVars }}</h2> {{ 'f.ph45' | translate }}<br/> {{{ 'f.ph46' | translate injectVars }}} </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/pages/Features.vue\n ** module id = 36\n ** module chunks = 0\n **/","module.exports = \"<div class=jumbotron> <h2>{{ 'public.index.title' | translate }}</h2> <br/> <p class=lead>{{ 'public.index.jdesc' | translate }}</p> <p>{{ 'public.index.sources' | translate }}</p> <a target=_blank href=https://github.com/Saymon-biz/vue-localize-example>https://github.com/Saymon-biz/vue-localize-example</a> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/public/pages/Index.vue\n ** module id = 37\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/App.vue\n ** module id = 38\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Aside.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Aside.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/admin/layout/Aside.vue\n ** module id = 39\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Header.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Header.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/admin/layout/Header.vue\n ** module id = 40\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Layout.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Layout.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/admin/layout/Layout.vue\n ** module id = 41\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/admin/pages/Home.vue\n ** module id = 42\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Settings.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/admin/pages/Settings.vue\n ** module id = 43\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Footer.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/layout/Footer.vue\n ** module id = 44\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Header.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Header.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/layout/Header.vue\n ** module id = 45\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Layout.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Layout.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/layout/Layout.vue\n ** module id = 46\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Error404.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/pages/Error404.vue\n ** module id = 47\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Features.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Features.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/pages/Features.vue\n ** module id = 48\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Index.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/public/pages/Index.vue\n ** module id = 49\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.11\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      var fullPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          fullPath = this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n        }\n      } else {\n        fullPath = path ? path + '' : '';\n      }\n      return encodeURI(fullPath);\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 50\n ** module chunks = 0\n **/","/*!\n * Vuex v0.6.2\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  babelHelpers;\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n   *\n   * @param {*} obj\n   * @return {*}\n   */\n\n  function deepClone(obj) {\n    if (Array.isArray(obj)) {\n      return obj.map(deepClone);\n    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n      var cloned = {};\n      var keys = Object.keys(obj);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        cloned[key] = deepClone(obj[key]);\n      }\n      return cloned;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var unwatch = vm.$watch('__vuex__', function (a) {\n        return a;\n      });\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  var devtoolMiddleware = {\n    onInit: function onInit(state, store) {\n      if (!hook) return;\n      hook.emit('vuex:init', store);\n      hook.on('vuex:travel-to-state', function (targetState) {\n        var currentState = store._vm._data;\n        store._dispatching = true;\n        Object.keys(targetState).forEach(function (key) {\n          currentState[key] = targetState[key];\n        });\n        store._dispatching = false;\n      });\n    },\n    onMutation: function onMutation(mutation, state) {\n      if (!hook) return;\n      hook.emit('vuex:mutation', mutation, state);\n    }\n  };\n\n  function override (Vue) {\n    // override init and inject vuex init procedure\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function () {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n      _init.call(this, options);\n    };\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var getters = vuex.getters;\n        var actions = vuex.actions;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(actions[_key], this.$store);\n          }\n        }\n      }\n    }\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    function defineVuexGetter(vm, key, getter) {\n      Object.defineProperty(vm, key, {\n        enumerable: true,\n        configurable: true,\n        get: makeComputedGetter(vm.$store, getter),\n        set: setter\n      });\n    }\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (state) {\n        return getter(state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    function makeBoundAction(action, store) {\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} middlewares\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$middlewares = _ref.middlewares;\n      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      babelHelpers.classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: state\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      this._setupMiddlewares(middlewares, state);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    babelHelpers.createClass(Store, [{\n      key: 'dispatch',\n\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n      value: function dispatch(type) {\n        var _this2 = this;\n\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          payload = [type];\n          type = type.type;\n        }\n        var mutation = this._mutations[type];\n        var prevSnapshot = this._prevSnapshot;\n        var state = this.state;\n        var snapshot = void 0,\n            clonedPayload = void 0;\n        if (mutation) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(mutation)) {\n            mutation.forEach(function (m) {\n              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n            });\n          } else {\n            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          // invoke middlewares\n          if (this._needSnapshots) {\n            snapshot = this._prevSnapshot = deepClone(state);\n            clonedPayload = deepClone(payload);\n          }\n          this._middlewares.forEach(function (m) {\n            if (m.onMutation) {\n              if (m.snapshot) {\n                m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this2);\n              } else {\n                m.onMutation({ type: type, payload: payload }, state, _this2);\n              }\n            }\n          });\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {String|Function} expOrFn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(expOrFn, cb, options) {\n        var _this3 = this;\n\n        return this._vm.$watch(function () {\n          return typeof expOrFn === 'function' ? expOrFn(_this3.state) : _this3._vm.$get(expOrFn);\n        }, cb, options);\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        var setPath = Vue.parsers.path.setPath;\n\n        Object.keys(modules).forEach(function (key) {\n          setPath(state, key, modules[key].state || {});\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        var getPath = Vue.parsers.path.getPath;\n\n        var allMutations = [this._rootMutations];\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n          if (!module || !module.mutations) return;\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [getPath(state, key)].concat(args));\n            };\n          });\n          allMutations.push(mutations);\n        });\n        this._mutations = mergeObjects(allMutations);\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this4 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, '$data', function () {\n          if (!_this4._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n\n      /**\n       * Setup the middlewares. The devtools middleware is always\n       * included, since it does nothing if no devtool is detected.\n       *\n       * A middleware can demand the state it receives to be\n       * \"snapshots\", i.e. deep clones of the actual state tree.\n       *\n       * @param {Array} middlewares\n       * @param {Object} state\n       */\n\n    }, {\n      key: '_setupMiddlewares',\n      value: function _setupMiddlewares(middlewares, state) {\n        var _this5 = this;\n\n        this._middlewares = [devtoolMiddleware].concat(middlewares);\n        this._needSnapshots = middlewares.some(function (m) {\n          return m.snapshot;\n        });\n        if (this._needSnapshots) {\n          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n        }\n        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n        // call init hooks\n        this._middlewares.forEach(function (m) {\n          if (m.onInit) {\n            m.onInit(m.snapshot ? initialSnapshot : state, _this5);\n          }\n        });\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm._data;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Vuex root state is read only.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  function createLogger() {\n    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n  }\n\n  var index = {\n    Store: Store,\n    install: install,\n    createLogger: createLogger\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 51\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 52\n ** module chunks = 0\n **/"],"sourceRoot":""}